var __create = Object.create;
var __getProtoOf = Object.getPrototypeOf;
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __moduleCache = /* @__PURE__ */ new WeakMap;
var __toCommonJS = (from) => {
  var entry = __moduleCache.get(from), desc;
  if (entry)
    return entry;
  entry = __defProp({}, "__esModule", { value: true });
  if (from && typeof from === "object" || typeof from === "function")
    __getOwnPropNames(from).map((key) => !__hasOwnProp.call(entry, key) && __defProp(entry, key, {
      get: () => from[key],
      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
    }));
  __moduleCache.set(from, entry);
  return entry;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};
var __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});

// node:path
var exports_path = {};
__export(exports_path, {
  win32: () => y,
  toNamespacedPath: () => U,
  sep: () => I,
  resolve: () => B,
  relative: () => Q,
  posix: () => g,
  parse: () => $,
  normalize: () => G,
  join: () => K,
  isAbsolute: () => H,
  format: () => Z,
  extname: () => Y,
  dirname: () => V,
  delimiter: () => O,
  default: () => q,
  basename: () => X
});
var L, h, D, T, _, E, R = (s, e) => () => (e || s((e = { exports: {} }).exports, e), e.exports), N = (s, e, r, t) => {
  if (e && typeof e == "object" || typeof e == "function")
    for (let i of T(e))
      !E.call(s, i) && i !== r && h(s, i, { get: () => e[i], enumerable: !(t = D(e, i)) || t.enumerable });
  return s;
}, j = (s, e, r) => (r = s != null ? L(_(s)) : {}, N(e || !s || !s.__esModule ? h(r, "default", { value: s, enumerable: true }) : r, s)), k, x, u, J, P = function(s) {
  return s;
}, S = function() {
  throw new Error("Not implemented");
}, g, y, q, B, G, H, K, Q, U, V, X, Y, Z, $, I, O;
var init_path = __esm(() => {
  L = Object.create;
  h = Object.defineProperty;
  D = Object.getOwnPropertyDescriptor;
  T = Object.getOwnPropertyNames;
  _ = Object.getPrototypeOf;
  E = Object.prototype.hasOwnProperty;
  k = R((W, w) => {
    function v(s) {
      if (typeof s != "string")
        throw new TypeError("Path must be a string. Received " + JSON.stringify(s));
    }
    function C(s, e) {
      for (var r = "", t = 0, i = -1, a = 0, n, l = 0;l <= s.length; ++l) {
        if (l < s.length)
          n = s.charCodeAt(l);
        else {
          if (n === 47)
            break;
          n = 47;
        }
        if (n === 47) {
          if (!(i === l - 1 || a === 1))
            if (i !== l - 1 && a === 2) {
              if (r.length < 2 || t !== 2 || r.charCodeAt(r.length - 1) !== 46 || r.charCodeAt(r.length - 2) !== 46) {
                if (r.length > 2) {
                  var f = r.lastIndexOf("/");
                  if (f !== r.length - 1) {
                    f === -1 ? (r = "", t = 0) : (r = r.slice(0, f), t = r.length - 1 - r.lastIndexOf("/")), i = l, a = 0;
                    continue;
                  }
                } else if (r.length === 2 || r.length === 1) {
                  r = "", t = 0, i = l, a = 0;
                  continue;
                }
              }
              e && (r.length > 0 ? r += "/.." : r = "..", t = 2);
            } else
              r.length > 0 ? r += "/" + s.slice(i + 1, l) : r = s.slice(i + 1, l), t = l - i - 1;
          i = l, a = 0;
        } else
          n === 46 && a !== -1 ? ++a : a = -1;
      }
      return r;
    }
    function F(s, e) {
      var r = e.dir || e.root, t = e.base || (e.name || "") + (e.ext || "");
      return r ? r === e.root ? r + t : r + s + t : t;
    }
    var m = { resolve: function() {
      for (var e = "", r = false, t, i = arguments.length - 1;i >= -1 && !r; i--) {
        var a;
        i >= 0 ? a = arguments[i] : (t === undefined && (t = process.cwd()), a = t), v(a), a.length !== 0 && (e = a + "/" + e, r = a.charCodeAt(0) === 47);
      }
      return e = C(e, !r), r ? e.length > 0 ? "/" + e : "/" : e.length > 0 ? e : ".";
    }, normalize: function(e) {
      if (v(e), e.length === 0)
        return ".";
      var r = e.charCodeAt(0) === 47, t = e.charCodeAt(e.length - 1) === 47;
      return e = C(e, !r), e.length === 0 && !r && (e = "."), e.length > 0 && t && (e += "/"), r ? "/" + e : e;
    }, isAbsolute: function(e) {
      return v(e), e.length > 0 && e.charCodeAt(0) === 47;
    }, join: function() {
      if (arguments.length === 0)
        return ".";
      for (var e, r = 0;r < arguments.length; ++r) {
        var t = arguments[r];
        v(t), t.length > 0 && (e === undefined ? e = t : e += "/" + t);
      }
      return e === undefined ? "." : m.normalize(e);
    }, relative: function(e, r) {
      if (v(e), v(r), e === r || (e = m.resolve(e), r = m.resolve(r), e === r))
        return "";
      for (var t = 1;t < e.length && e.charCodeAt(t) === 47; ++t)
        ;
      for (var i = e.length, a = i - t, n = 1;n < r.length && r.charCodeAt(n) === 47; ++n)
        ;
      for (var l = r.length, f = l - n, c = a < f ? a : f, d = -1, o = 0;o <= c; ++o) {
        if (o === c) {
          if (f > c) {
            if (r.charCodeAt(n + o) === 47)
              return r.slice(n + o + 1);
            if (o === 0)
              return r.slice(n + o);
          } else
            a > c && (e.charCodeAt(t + o) === 47 ? d = o : o === 0 && (d = 0));
          break;
        }
        var A = e.charCodeAt(t + o), z = r.charCodeAt(n + o);
        if (A !== z)
          break;
        A === 47 && (d = o);
      }
      var b = "";
      for (o = t + d + 1;o <= i; ++o)
        (o === i || e.charCodeAt(o) === 47) && (b.length === 0 ? b += ".." : b += "/..");
      return b.length > 0 ? b + r.slice(n + d) : (n += d, r.charCodeAt(n) === 47 && ++n, r.slice(n));
    }, _makeLong: function(e) {
      return e;
    }, dirname: function(e) {
      if (v(e), e.length === 0)
        return ".";
      for (var r = e.charCodeAt(0), t = r === 47, i = -1, a = true, n = e.length - 1;n >= 1; --n)
        if (r = e.charCodeAt(n), r === 47) {
          if (!a) {
            i = n;
            break;
          }
        } else
          a = false;
      return i === -1 ? t ? "/" : "." : t && i === 1 ? "//" : e.slice(0, i);
    }, basename: function(e, r) {
      if (r !== undefined && typeof r != "string")
        throw new TypeError('"ext" argument must be a string');
      v(e);
      var t = 0, i = -1, a = true, n;
      if (r !== undefined && r.length > 0 && r.length <= e.length) {
        if (r.length === e.length && r === e)
          return "";
        var l = r.length - 1, f = -1;
        for (n = e.length - 1;n >= 0; --n) {
          var c = e.charCodeAt(n);
          if (c === 47) {
            if (!a) {
              t = n + 1;
              break;
            }
          } else
            f === -1 && (a = false, f = n + 1), l >= 0 && (c === r.charCodeAt(l) ? --l === -1 && (i = n) : (l = -1, i = f));
        }
        return t === i ? i = f : i === -1 && (i = e.length), e.slice(t, i);
      } else {
        for (n = e.length - 1;n >= 0; --n)
          if (e.charCodeAt(n) === 47) {
            if (!a) {
              t = n + 1;
              break;
            }
          } else
            i === -1 && (a = false, i = n + 1);
        return i === -1 ? "" : e.slice(t, i);
      }
    }, extname: function(e) {
      v(e);
      for (var r = -1, t = 0, i = -1, a = true, n = 0, l = e.length - 1;l >= 0; --l) {
        var f = e.charCodeAt(l);
        if (f === 47) {
          if (!a) {
            t = l + 1;
            break;
          }
          continue;
        }
        i === -1 && (a = false, i = l + 1), f === 46 ? r === -1 ? r = l : n !== 1 && (n = 1) : r !== -1 && (n = -1);
      }
      return r === -1 || i === -1 || n === 0 || n === 1 && r === i - 1 && r === t + 1 ? "" : e.slice(r, i);
    }, format: function(e) {
      if (e === null || typeof e != "object")
        throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof e);
      return F("/", e);
    }, parse: function(e) {
      v(e);
      var r = { root: "", dir: "", base: "", ext: "", name: "" };
      if (e.length === 0)
        return r;
      var t = e.charCodeAt(0), i = t === 47, a;
      i ? (r.root = "/", a = 1) : a = 0;
      for (var n = -1, l = 0, f = -1, c = true, d = e.length - 1, o = 0;d >= a; --d) {
        if (t = e.charCodeAt(d), t === 47) {
          if (!c) {
            l = d + 1;
            break;
          }
          continue;
        }
        f === -1 && (c = false, f = d + 1), t === 46 ? n === -1 ? n = d : o !== 1 && (o = 1) : n !== -1 && (o = -1);
      }
      return n === -1 || f === -1 || o === 0 || o === 1 && n === f - 1 && n === l + 1 ? f !== -1 && (l === 0 && i ? r.base = r.name = e.slice(1, f) : r.base = r.name = e.slice(l, f)) : (l === 0 && i ? (r.name = e.slice(1, n), r.base = e.slice(1, f)) : (r.name = e.slice(l, n), r.base = e.slice(l, f)), r.ext = e.slice(n, f)), l > 0 ? r.dir = e.slice(0, l - 1) : i && (r.dir = "/"), r;
    }, sep: "/", delimiter: ":", win32: null, posix: null };
    m.posix = m;
    w.exports = m;
  });
  x = j(k());
  u = x;
  J = x;
  u.parse ??= S;
  J.parse ??= S;
  g = { resolve: u.resolve.bind(u), normalize: u.normalize.bind(u), isAbsolute: u.isAbsolute.bind(u), join: u.join.bind(u), relative: u.relative.bind(u), toNamespacedPath: P, dirname: u.dirname.bind(u), basename: u.basename.bind(u), extname: u.extname.bind(u), format: u.format.bind(u), parse: u.parse.bind(u), sep: "/", delimiter: ":", win32: undefined, posix: undefined, _makeLong: P };
  y = { sep: "\\", delimiter: ";", win32: undefined, ...g, posix: g };
  g.win32 = y.win32 = y;
  g.posix = g;
  q = g;
  ({ resolve: B, normalize: G, isAbsolute: H, join: K, relative: Q, toNamespacedPath: U, dirname: V, basename: X, extname: Y, format: Z, parse: $, sep: I, delimiter: O } = g);
});

// node_modules/color-name/index.js
var require_color_name = __commonJS((exports, module) => {
  module.exports = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
});

// node_modules/color-convert/conversions.js
var require_conversions = __commonJS((exports, module) => {
  var cssKeywords = require_color_name();
  var reverseKeywords = {};
  for (const key of Object.keys(cssKeywords)) {
    reverseKeywords[cssKeywords[key]] = key;
  }
  var convert = {
    rgb: { channels: 3, labels: "rgb" },
    hsl: { channels: 3, labels: "hsl" },
    hsv: { channels: 3, labels: "hsv" },
    hwb: { channels: 3, labels: "hwb" },
    cmyk: { channels: 4, labels: "cmyk" },
    xyz: { channels: 3, labels: "xyz" },
    lab: { channels: 3, labels: "lab" },
    lch: { channels: 3, labels: "lch" },
    hex: { channels: 1, labels: ["hex"] },
    keyword: { channels: 1, labels: ["keyword"] },
    ansi16: { channels: 1, labels: ["ansi16"] },
    ansi256: { channels: 1, labels: ["ansi256"] },
    hcg: { channels: 3, labels: ["h", "c", "g"] },
    apple: { channels: 3, labels: ["r16", "g16", "b16"] },
    gray: { channels: 1, labels: ["gray"] }
  };
  module.exports = convert;
  for (const model of Object.keys(convert)) {
    if (!("channels" in convert[model])) {
      throw new Error("missing channels property: " + model);
    }
    if (!("labels" in convert[model])) {
      throw new Error("missing channel labels property: " + model);
    }
    if (convert[model].labels.length !== convert[model].channels) {
      throw new Error("channel and label counts mismatch: " + model);
    }
    const { channels, labels } = convert[model];
    delete convert[model].channels;
    delete convert[model].labels;
    Object.defineProperty(convert[model], "channels", { value: channels });
    Object.defineProperty(convert[model], "labels", { value: labels });
  }
  convert.rgb.hsl = function(rgb) {
    const r = rgb[0] / 255;
    const g2 = rgb[1] / 255;
    const b = rgb[2] / 255;
    const min = Math.min(r, g2, b);
    const max = Math.max(r, g2, b);
    const delta = max - min;
    let h2;
    let s;
    if (max === min) {
      h2 = 0;
    } else if (r === max) {
      h2 = (g2 - b) / delta;
    } else if (g2 === max) {
      h2 = 2 + (b - r) / delta;
    } else if (b === max) {
      h2 = 4 + (r - g2) / delta;
    }
    h2 = Math.min(h2 * 60, 360);
    if (h2 < 0) {
      h2 += 360;
    }
    const l = (min + max) / 2;
    if (max === min) {
      s = 0;
    } else if (l <= 0.5) {
      s = delta / (max + min);
    } else {
      s = delta / (2 - max - min);
    }
    return [h2, s * 100, l * 100];
  };
  convert.rgb.hsv = function(rgb) {
    let rdif;
    let gdif;
    let bdif;
    let h2;
    let s;
    const r = rgb[0] / 255;
    const g2 = rgb[1] / 255;
    const b = rgb[2] / 255;
    const v = Math.max(r, g2, b);
    const diff = v - Math.min(r, g2, b);
    const diffc = function(c) {
      return (v - c) / 6 / diff + 1 / 2;
    };
    if (diff === 0) {
      h2 = 0;
      s = 0;
    } else {
      s = diff / v;
      rdif = diffc(r);
      gdif = diffc(g2);
      bdif = diffc(b);
      if (r === v) {
        h2 = bdif - gdif;
      } else if (g2 === v) {
        h2 = 1 / 3 + rdif - bdif;
      } else if (b === v) {
        h2 = 2 / 3 + gdif - rdif;
      }
      if (h2 < 0) {
        h2 += 1;
      } else if (h2 > 1) {
        h2 -= 1;
      }
    }
    return [
      h2 * 360,
      s * 100,
      v * 100
    ];
  };
  convert.rgb.hwb = function(rgb) {
    const r = rgb[0];
    const g2 = rgb[1];
    let b = rgb[2];
    const h2 = convert.rgb.hsl(rgb)[0];
    const w = 1 / 255 * Math.min(r, Math.min(g2, b));
    b = 1 - 1 / 255 * Math.max(r, Math.max(g2, b));
    return [h2, w * 100, b * 100];
  };
  convert.rgb.cmyk = function(rgb) {
    const r = rgb[0] / 255;
    const g2 = rgb[1] / 255;
    const b = rgb[2] / 255;
    const k2 = Math.min(1 - r, 1 - g2, 1 - b);
    const c = (1 - r - k2) / (1 - k2) || 0;
    const m = (1 - g2 - k2) / (1 - k2) || 0;
    const y2 = (1 - b - k2) / (1 - k2) || 0;
    return [c * 100, m * 100, y2 * 100, k2 * 100];
  };
  function comparativeDistance(x2, y2) {
    return (x2[0] - y2[0]) ** 2 + (x2[1] - y2[1]) ** 2 + (x2[2] - y2[2]) ** 2;
  }
  convert.rgb.keyword = function(rgb) {
    const reversed = reverseKeywords[rgb];
    if (reversed) {
      return reversed;
    }
    let currentClosestDistance = Infinity;
    let currentClosestKeyword;
    for (const keyword of Object.keys(cssKeywords)) {
      const value = cssKeywords[keyword];
      const distance = comparativeDistance(rgb, value);
      if (distance < currentClosestDistance) {
        currentClosestDistance = distance;
        currentClosestKeyword = keyword;
      }
    }
    return currentClosestKeyword;
  };
  convert.keyword.rgb = function(keyword) {
    return cssKeywords[keyword];
  };
  convert.rgb.xyz = function(rgb) {
    let r = rgb[0] / 255;
    let g2 = rgb[1] / 255;
    let b = rgb[2] / 255;
    r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
    g2 = g2 > 0.04045 ? ((g2 + 0.055) / 1.055) ** 2.4 : g2 / 12.92;
    b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;
    const x2 = r * 0.4124 + g2 * 0.3576 + b * 0.1805;
    const y2 = r * 0.2126 + g2 * 0.7152 + b * 0.0722;
    const z = r * 0.0193 + g2 * 0.1192 + b * 0.9505;
    return [x2 * 100, y2 * 100, z * 100];
  };
  convert.rgb.lab = function(rgb) {
    const xyz = convert.rgb.xyz(rgb);
    let x2 = xyz[0];
    let y2 = xyz[1];
    let z = xyz[2];
    x2 /= 95.047;
    y2 /= 100;
    z /= 108.883;
    x2 = x2 > 0.008856 ? x2 ** (1 / 3) : 7.787 * x2 + 16 / 116;
    y2 = y2 > 0.008856 ? y2 ** (1 / 3) : 7.787 * y2 + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    const l = 116 * y2 - 16;
    const a = 500 * (x2 - y2);
    const b = 200 * (y2 - z);
    return [l, a, b];
  };
  convert.hsl.rgb = function(hsl) {
    const h2 = hsl[0] / 360;
    const s = hsl[1] / 100;
    const l = hsl[2] / 100;
    let t2;
    let t3;
    let val;
    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }
    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }
    const t1 = 2 * l - t2;
    const rgb = [0, 0, 0];
    for (let i = 0;i < 3; i++) {
      t3 = h2 + 1 / 3 * -(i - 1);
      if (t3 < 0) {
        t3++;
      }
      if (t3 > 1) {
        t3--;
      }
      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
      } else {
        val = t1;
      }
      rgb[i] = val * 255;
    }
    return rgb;
  };
  convert.hsl.hsv = function(hsl) {
    const h2 = hsl[0];
    let s = hsl[1] / 100;
    let l = hsl[2] / 100;
    let smin = s;
    const lmin = Math.max(l, 0.01);
    l *= 2;
    s *= l <= 1 ? l : 2 - l;
    smin *= lmin <= 1 ? lmin : 2 - lmin;
    const v = (l + s) / 2;
    const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
    return [h2, sv * 100, v * 100];
  };
  convert.hsv.rgb = function(hsv) {
    const h2 = hsv[0] / 60;
    const s = hsv[1] / 100;
    let v = hsv[2] / 100;
    const hi = Math.floor(h2) % 6;
    const f = h2 - Math.floor(h2);
    const p = 255 * v * (1 - s);
    const q2 = 255 * v * (1 - s * f);
    const t = 255 * v * (1 - s * (1 - f));
    v *= 255;
    switch (hi) {
      case 0:
        return [v, t, p];
      case 1:
        return [q2, v, p];
      case 2:
        return [p, v, t];
      case 3:
        return [p, q2, v];
      case 4:
        return [t, p, v];
      case 5:
        return [v, p, q2];
    }
  };
  convert.hsv.hsl = function(hsv) {
    const h2 = hsv[0];
    const s = hsv[1] / 100;
    const v = hsv[2] / 100;
    const vmin = Math.max(v, 0.01);
    let sl;
    let l;
    l = (2 - s) * v;
    const lmin = (2 - s) * vmin;
    sl = s * vmin;
    sl /= lmin <= 1 ? lmin : 2 - lmin;
    sl = sl || 0;
    l /= 2;
    return [h2, sl * 100, l * 100];
  };
  convert.hwb.rgb = function(hwb) {
    const h2 = hwb[0] / 360;
    let wh = hwb[1] / 100;
    let bl = hwb[2] / 100;
    const ratio = wh + bl;
    let f;
    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }
    const i = Math.floor(6 * h2);
    const v = 1 - bl;
    f = 6 * h2 - i;
    if ((i & 1) !== 0) {
      f = 1 - f;
    }
    const n = wh + f * (v - wh);
    let r;
    let g2;
    let b;
    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g2 = n;
        b = wh;
        break;
      case 1:
        r = n;
        g2 = v;
        b = wh;
        break;
      case 2:
        r = wh;
        g2 = v;
        b = n;
        break;
      case 3:
        r = wh;
        g2 = n;
        b = v;
        break;
      case 4:
        r = n;
        g2 = wh;
        b = v;
        break;
      case 5:
        r = v;
        g2 = wh;
        b = n;
        break;
    }
    return [r * 255, g2 * 255, b * 255];
  };
  convert.cmyk.rgb = function(cmyk) {
    const c = cmyk[0] / 100;
    const m = cmyk[1] / 100;
    const y2 = cmyk[2] / 100;
    const k2 = cmyk[3] / 100;
    const r = 1 - Math.min(1, c * (1 - k2) + k2);
    const g2 = 1 - Math.min(1, m * (1 - k2) + k2);
    const b = 1 - Math.min(1, y2 * (1 - k2) + k2);
    return [r * 255, g2 * 255, b * 255];
  };
  convert.xyz.rgb = function(xyz) {
    const x2 = xyz[0] / 100;
    const y2 = xyz[1] / 100;
    const z = xyz[2] / 100;
    let r;
    let g2;
    let b;
    r = x2 * 3.2406 + y2 * -1.5372 + z * -0.4986;
    g2 = x2 * -0.9689 + y2 * 1.8758 + z * 0.0415;
    b = x2 * 0.0557 + y2 * -0.204 + z * 1.057;
    r = r > 0.0031308 ? 1.055 * r ** (1 / 2.4) - 0.055 : r * 12.92;
    g2 = g2 > 0.0031308 ? 1.055 * g2 ** (1 / 2.4) - 0.055 : g2 * 12.92;
    b = b > 0.0031308 ? 1.055 * b ** (1 / 2.4) - 0.055 : b * 12.92;
    r = Math.min(Math.max(0, r), 1);
    g2 = Math.min(Math.max(0, g2), 1);
    b = Math.min(Math.max(0, b), 1);
    return [r * 255, g2 * 255, b * 255];
  };
  convert.xyz.lab = function(xyz) {
    let x2 = xyz[0];
    let y2 = xyz[1];
    let z = xyz[2];
    x2 /= 95.047;
    y2 /= 100;
    z /= 108.883;
    x2 = x2 > 0.008856 ? x2 ** (1 / 3) : 7.787 * x2 + 16 / 116;
    y2 = y2 > 0.008856 ? y2 ** (1 / 3) : 7.787 * y2 + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    const l = 116 * y2 - 16;
    const a = 500 * (x2 - y2);
    const b = 200 * (y2 - z);
    return [l, a, b];
  };
  convert.lab.xyz = function(lab) {
    const l = lab[0];
    const a = lab[1];
    const b = lab[2];
    let x2;
    let y2;
    let z;
    y2 = (l + 16) / 116;
    x2 = a / 500 + y2;
    z = y2 - b / 200;
    const y22 = y2 ** 3;
    const x22 = x2 ** 3;
    const z2 = z ** 3;
    y2 = y22 > 0.008856 ? y22 : (y2 - 16 / 116) / 7.787;
    x2 = x22 > 0.008856 ? x22 : (x2 - 16 / 116) / 7.787;
    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
    x2 *= 95.047;
    y2 *= 100;
    z *= 108.883;
    return [x2, y2, z];
  };
  convert.lab.lch = function(lab) {
    const l = lab[0];
    const a = lab[1];
    const b = lab[2];
    let h2;
    const hr = Math.atan2(b, a);
    h2 = hr * 360 / 2 / Math.PI;
    if (h2 < 0) {
      h2 += 360;
    }
    const c = Math.sqrt(a * a + b * b);
    return [l, c, h2];
  };
  convert.lch.lab = function(lch) {
    const l = lch[0];
    const c = lch[1];
    const h2 = lch[2];
    const hr = h2 / 360 * 2 * Math.PI;
    const a = c * Math.cos(hr);
    const b = c * Math.sin(hr);
    return [l, a, b];
  };
  convert.rgb.ansi16 = function(args, saturation = null) {
    const [r, g2, b] = args;
    let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation;
    value = Math.round(value / 50);
    if (value === 0) {
      return 30;
    }
    let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g2 / 255) << 1 | Math.round(r / 255));
    if (value === 2) {
      ansi += 60;
    }
    return ansi;
  };
  convert.hsv.ansi16 = function(args) {
    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
  };
  convert.rgb.ansi256 = function(args) {
    const r = args[0];
    const g2 = args[1];
    const b = args[2];
    if (r === g2 && g2 === b) {
      if (r < 8) {
        return 16;
      }
      if (r > 248) {
        return 231;
      }
      return Math.round((r - 8) / 247 * 24) + 232;
    }
    const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g2 / 255 * 5) + Math.round(b / 255 * 5);
    return ansi;
  };
  convert.ansi16.rgb = function(args) {
    let color = args % 10;
    if (color === 0 || color === 7) {
      if (args > 50) {
        color += 3.5;
      }
      color = color / 10.5 * 255;
      return [color, color, color];
    }
    const mult = (~~(args > 50) + 1) * 0.5;
    const r = (color & 1) * mult * 255;
    const g2 = (color >> 1 & 1) * mult * 255;
    const b = (color >> 2 & 1) * mult * 255;
    return [r, g2, b];
  };
  convert.ansi256.rgb = function(args) {
    if (args >= 232) {
      const c = (args - 232) * 10 + 8;
      return [c, c, c];
    }
    args -= 16;
    let rem;
    const r = Math.floor(args / 36) / 5 * 255;
    const g2 = Math.floor((rem = args % 36) / 6) / 5 * 255;
    const b = rem % 6 / 5 * 255;
    return [r, g2, b];
  };
  convert.rgb.hex = function(args) {
    const integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
    const string = integer.toString(16).toUpperCase();
    return "000000".substring(string.length) + string;
  };
  convert.hex.rgb = function(args) {
    const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!match) {
      return [0, 0, 0];
    }
    let colorString = match[0];
    if (match[0].length === 3) {
      colorString = colorString.split("").map((char) => {
        return char + char;
      }).join("");
    }
    const integer = parseInt(colorString, 16);
    const r = integer >> 16 & 255;
    const g2 = integer >> 8 & 255;
    const b = integer & 255;
    return [r, g2, b];
  };
  convert.rgb.hcg = function(rgb) {
    const r = rgb[0] / 255;
    const g2 = rgb[1] / 255;
    const b = rgb[2] / 255;
    const max = Math.max(Math.max(r, g2), b);
    const min = Math.min(Math.min(r, g2), b);
    const chroma = max - min;
    let grayscale;
    let hue;
    if (chroma < 1) {
      grayscale = min / (1 - chroma);
    } else {
      grayscale = 0;
    }
    if (chroma <= 0) {
      hue = 0;
    } else if (max === r) {
      hue = (g2 - b) / chroma % 6;
    } else if (max === g2) {
      hue = 2 + (b - r) / chroma;
    } else {
      hue = 4 + (r - g2) / chroma;
    }
    hue /= 6;
    hue %= 1;
    return [hue * 360, chroma * 100, grayscale * 100];
  };
  convert.hsl.hcg = function(hsl) {
    const s = hsl[1] / 100;
    const l = hsl[2] / 100;
    const c = l < 0.5 ? 2 * s * l : 2 * s * (1 - l);
    let f = 0;
    if (c < 1) {
      f = (l - 0.5 * c) / (1 - c);
    }
    return [hsl[0], c * 100, f * 100];
  };
  convert.hsv.hcg = function(hsv) {
    const s = hsv[1] / 100;
    const v = hsv[2] / 100;
    const c = s * v;
    let f = 0;
    if (c < 1) {
      f = (v - c) / (1 - c);
    }
    return [hsv[0], c * 100, f * 100];
  };
  convert.hcg.rgb = function(hcg) {
    const h2 = hcg[0] / 360;
    const c = hcg[1] / 100;
    const g2 = hcg[2] / 100;
    if (c === 0) {
      return [g2 * 255, g2 * 255, g2 * 255];
    }
    const pure = [0, 0, 0];
    const hi = h2 % 1 * 6;
    const v = hi % 1;
    const w = 1 - v;
    let mg = 0;
    switch (Math.floor(hi)) {
      case 0:
        pure[0] = 1;
        pure[1] = v;
        pure[2] = 0;
        break;
      case 1:
        pure[0] = w;
        pure[1] = 1;
        pure[2] = 0;
        break;
      case 2:
        pure[0] = 0;
        pure[1] = 1;
        pure[2] = v;
        break;
      case 3:
        pure[0] = 0;
        pure[1] = w;
        pure[2] = 1;
        break;
      case 4:
        pure[0] = v;
        pure[1] = 0;
        pure[2] = 1;
        break;
      default:
        pure[0] = 1;
        pure[1] = 0;
        pure[2] = w;
    }
    mg = (1 - c) * g2;
    return [
      (c * pure[0] + mg) * 255,
      (c * pure[1] + mg) * 255,
      (c * pure[2] + mg) * 255
    ];
  };
  convert.hcg.hsv = function(hcg) {
    const c = hcg[1] / 100;
    const g2 = hcg[2] / 100;
    const v = c + g2 * (1 - c);
    let f = 0;
    if (v > 0) {
      f = c / v;
    }
    return [hcg[0], f * 100, v * 100];
  };
  convert.hcg.hsl = function(hcg) {
    const c = hcg[1] / 100;
    const g2 = hcg[2] / 100;
    const l = g2 * (1 - c) + 0.5 * c;
    let s = 0;
    if (l > 0 && l < 0.5) {
      s = c / (2 * l);
    } else if (l >= 0.5 && l < 1) {
      s = c / (2 * (1 - l));
    }
    return [hcg[0], s * 100, l * 100];
  };
  convert.hcg.hwb = function(hcg) {
    const c = hcg[1] / 100;
    const g2 = hcg[2] / 100;
    const v = c + g2 * (1 - c);
    return [hcg[0], (v - c) * 100, (1 - v) * 100];
  };
  convert.hwb.hcg = function(hwb) {
    const w = hwb[1] / 100;
    const b = hwb[2] / 100;
    const v = 1 - b;
    const c = v - w;
    let g2 = 0;
    if (c < 1) {
      g2 = (v - c) / (1 - c);
    }
    return [hwb[0], c * 100, g2 * 100];
  };
  convert.apple.rgb = function(apple) {
    return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
  };
  convert.rgb.apple = function(rgb) {
    return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
  };
  convert.gray.rgb = function(args) {
    return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
  };
  convert.gray.hsl = function(args) {
    return [0, 0, args[0]];
  };
  convert.gray.hsv = convert.gray.hsl;
  convert.gray.hwb = function(gray) {
    return [0, 100, gray[0]];
  };
  convert.gray.cmyk = function(gray) {
    return [0, 0, 0, gray[0]];
  };
  convert.gray.lab = function(gray) {
    return [gray[0], 0, 0];
  };
  convert.gray.hex = function(gray) {
    const val = Math.round(gray[0] / 100 * 255) & 255;
    const integer = (val << 16) + (val << 8) + val;
    const string = integer.toString(16).toUpperCase();
    return "000000".substring(string.length) + string;
  };
  convert.rgb.gray = function(rgb) {
    const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
    return [val / 255 * 100];
  };
});

// node_modules/color-convert/route.js
var require_route = __commonJS((exports, module) => {
  var conversions = require_conversions();
  function buildGraph() {
    const graph = {};
    const models = Object.keys(conversions);
    for (let len = models.length, i = 0;i < len; i++) {
      graph[models[i]] = {
        distance: -1,
        parent: null
      };
    }
    return graph;
  }
  function deriveBFS(fromModel) {
    const graph = buildGraph();
    const queue = [fromModel];
    graph[fromModel].distance = 0;
    while (queue.length) {
      const current = queue.pop();
      const adjacents = Object.keys(conversions[current]);
      for (let len = adjacents.length, i = 0;i < len; i++) {
        const adjacent = adjacents[i];
        const node = graph[adjacent];
        if (node.distance === -1) {
          node.distance = graph[current].distance + 1;
          node.parent = current;
          queue.unshift(adjacent);
        }
      }
    }
    return graph;
  }
  function link(from, to) {
    return function(args) {
      return to(from(args));
    };
  }
  function wrapConversion(toModel, graph) {
    const path = [graph[toModel].parent, toModel];
    let fn = conversions[graph[toModel].parent][toModel];
    let cur = graph[toModel].parent;
    while (graph[cur].parent) {
      path.unshift(graph[cur].parent);
      fn = link(conversions[graph[cur].parent][cur], fn);
      cur = graph[cur].parent;
    }
    fn.conversion = path;
    return fn;
  }
  module.exports = function(fromModel) {
    const graph = deriveBFS(fromModel);
    const conversion = {};
    const models = Object.keys(graph);
    for (let len = models.length, i = 0;i < len; i++) {
      const toModel = models[i];
      const node = graph[toModel];
      if (node.parent === null) {
        continue;
      }
      conversion[toModel] = wrapConversion(toModel, graph);
    }
    return conversion;
  };
});

// node_modules/color-convert/index.js
var require_color_convert = __commonJS((exports, module) => {
  var conversions = require_conversions();
  var route = require_route();
  var convert = {};
  var models = Object.keys(conversions);
  function wrapRaw(fn) {
    const wrappedFn = function(...args) {
      const arg0 = args[0];
      if (arg0 === undefined || arg0 === null) {
        return arg0;
      }
      if (arg0.length > 1) {
        args = arg0;
      }
      return fn(args);
    };
    if ("conversion" in fn) {
      wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
  }
  function wrapRounded(fn) {
    const wrappedFn = function(...args) {
      const arg0 = args[0];
      if (arg0 === undefined || arg0 === null) {
        return arg0;
      }
      if (arg0.length > 1) {
        args = arg0;
      }
      const result = fn(args);
      if (typeof result === "object") {
        for (let len = result.length, i = 0;i < len; i++) {
          result[i] = Math.round(result[i]);
        }
      }
      return result;
    };
    if ("conversion" in fn) {
      wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
  }
  models.forEach((fromModel) => {
    convert[fromModel] = {};
    Object.defineProperty(convert[fromModel], "channels", { value: conversions[fromModel].channels });
    Object.defineProperty(convert[fromModel], "labels", { value: conversions[fromModel].labels });
    const routes = route(fromModel);
    const routeModels = Object.keys(routes);
    routeModels.forEach((toModel) => {
      const fn = routes[toModel];
      convert[fromModel][toModel] = wrapRounded(fn);
      convert[fromModel][toModel].raw = wrapRaw(fn);
    });
  });
  module.exports = convert;
});

// node_modules/ansi-styles/index.js
var require_ansi_styles = __commonJS((exports, module) => {
  var wrapAnsi16 = (fn, offset) => (...args) => {
    const code = fn(...args);
    return `\x1B[${code + offset}m`;
  };
  var wrapAnsi256 = (fn, offset) => (...args) => {
    const code = fn(...args);
    return `\x1B[${38 + offset};5;${code}m`;
  };
  var wrapAnsi16m = (fn, offset) => (...args) => {
    const rgb = fn(...args);
    return `\x1B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
  };
  var ansi2ansi = (n) => n;
  var rgb2rgb = (r, g2, b) => [r, g2, b];
  var setLazyProperty = (object, property, get) => {
    Object.defineProperty(object, property, {
      get: () => {
        const value = get();
        Object.defineProperty(object, property, {
          value,
          enumerable: true,
          configurable: true
        });
        return value;
      },
      enumerable: true,
      configurable: true
    });
  };
  var colorConvert;
  var makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {
    if (colorConvert === undefined) {
      colorConvert = require_color_convert();
    }
    const offset = isBackground ? 10 : 0;
    const styles = {};
    for (const [sourceSpace, suite] of Object.entries(colorConvert)) {
      const name = sourceSpace === "ansi16" ? "ansi" : sourceSpace;
      if (sourceSpace === targetSpace) {
        styles[name] = wrap(identity, offset);
      } else if (typeof suite === "object") {
        styles[name] = wrap(suite[targetSpace], offset);
      }
    }
    return styles;
  };
  function assembleStyles() {
    const codes = new Map;
    const styles = {
      modifier: {
        reset: [0, 0],
        bold: [1, 22],
        dim: [2, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        hidden: [8, 28],
        strikethrough: [9, 29]
      },
      color: {
        black: [30, 39],
        red: [31, 39],
        green: [32, 39],
        yellow: [33, 39],
        blue: [34, 39],
        magenta: [35, 39],
        cyan: [36, 39],
        white: [37, 39],
        blackBright: [90, 39],
        redBright: [91, 39],
        greenBright: [92, 39],
        yellowBright: [93, 39],
        blueBright: [94, 39],
        magentaBright: [95, 39],
        cyanBright: [96, 39],
        whiteBright: [97, 39]
      },
      bgColor: {
        bgBlack: [40, 49],
        bgRed: [41, 49],
        bgGreen: [42, 49],
        bgYellow: [43, 49],
        bgBlue: [44, 49],
        bgMagenta: [45, 49],
        bgCyan: [46, 49],
        bgWhite: [47, 49],
        bgBlackBright: [100, 49],
        bgRedBright: [101, 49],
        bgGreenBright: [102, 49],
        bgYellowBright: [103, 49],
        bgBlueBright: [104, 49],
        bgMagentaBright: [105, 49],
        bgCyanBright: [106, 49],
        bgWhiteBright: [107, 49]
      }
    };
    styles.color.gray = styles.color.blackBright;
    styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
    styles.color.grey = styles.color.blackBright;
    styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;
    for (const [groupName, group] of Object.entries(styles)) {
      for (const [styleName, style] of Object.entries(group)) {
        styles[styleName] = {
          open: `\x1B[${style[0]}m`,
          close: `\x1B[${style[1]}m`
        };
        group[styleName] = styles[styleName];
        codes.set(style[0], style[1]);
      }
      Object.defineProperty(styles, groupName, {
        value: group,
        enumerable: false
      });
    }
    Object.defineProperty(styles, "codes", {
      value: codes,
      enumerable: false
    });
    styles.color.close = "\x1B[39m";
    styles.bgColor.close = "\x1B[49m";
    setLazyProperty(styles.color, "ansi", () => makeDynamicStyles(wrapAnsi16, "ansi16", ansi2ansi, false));
    setLazyProperty(styles.color, "ansi256", () => makeDynamicStyles(wrapAnsi256, "ansi256", ansi2ansi, false));
    setLazyProperty(styles.color, "ansi16m", () => makeDynamicStyles(wrapAnsi16m, "rgb", rgb2rgb, false));
    setLazyProperty(styles.bgColor, "ansi", () => makeDynamicStyles(wrapAnsi16, "ansi16", ansi2ansi, true));
    setLazyProperty(styles.bgColor, "ansi256", () => makeDynamicStyles(wrapAnsi256, "ansi256", ansi2ansi, true));
    setLazyProperty(styles.bgColor, "ansi16m", () => makeDynamicStyles(wrapAnsi16m, "rgb", rgb2rgb, true));
    return styles;
  }
  Object.defineProperty(module, "exports", {
    enumerable: true,
    get: assembleStyles
  });
});

// node_modules/supports-color/browser.js
var require_browser = __commonJS((exports, module) => {
  module.exports = {
    stdout: false,
    stderr: false
  };
});

// node_modules/chalk/source/util.js
var require_util = __commonJS((exports, module) => {
  var stringReplaceAll = (string, substring, replacer) => {
    let index = string.indexOf(substring);
    if (index === -1) {
      return string;
    }
    const substringLength = substring.length;
    let endIndex = 0;
    let returnValue = "";
    do {
      returnValue += string.substr(endIndex, index - endIndex) + substring + replacer;
      endIndex = index + substringLength;
      index = string.indexOf(substring, endIndex);
    } while (index !== -1);
    returnValue += string.substr(endIndex);
    return returnValue;
  };
  var stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {
    let endIndex = 0;
    let returnValue = "";
    do {
      const gotCR = string[index - 1] === "\r";
      returnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? `\r
` : `
`) + postfix;
      endIndex = index + 1;
      index = string.indexOf(`
`, endIndex);
    } while (index !== -1);
    returnValue += string.substr(endIndex);
    return returnValue;
  };
  module.exports = {
    stringReplaceAll,
    stringEncaseCRLFWithFirstIndex
  };
});

// node_modules/chalk/source/templates.js
var require_templates = __commonJS((exports, module) => {
  var TEMPLATE_REGEX = /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
  var STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
  var STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
  var ESCAPE_REGEX = /\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi;
  var ESCAPES = new Map([
    ["n", `
`],
    ["r", "\r"],
    ["t", "\t"],
    ["b", "\b"],
    ["f", "\f"],
    ["v", "\v"],
    ["0", "\x00"],
    ["\\", "\\"],
    ["e", "\x1B"],
    ["a", "\x07"]
  ]);
  function unescape(c) {
    const u2 = c[0] === "u";
    const bracket = c[1] === "{";
    if (u2 && !bracket && c.length === 5 || c[0] === "x" && c.length === 3) {
      return String.fromCharCode(parseInt(c.slice(1), 16));
    }
    if (u2 && bracket) {
      return String.fromCodePoint(parseInt(c.slice(2, -1), 16));
    }
    return ESCAPES.get(c) || c;
  }
  function parseArguments(name, arguments_) {
    const results = [];
    const chunks = arguments_.trim().split(/\s*,\s*/g);
    let matches;
    for (const chunk of chunks) {
      const number = Number(chunk);
      if (!Number.isNaN(number)) {
        results.push(number);
      } else if (matches = chunk.match(STRING_REGEX)) {
        results.push(matches[2].replace(ESCAPE_REGEX, (m, escape2, character) => escape2 ? unescape(escape2) : character));
      } else {
        throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
      }
    }
    return results;
  }
  function parseStyle(style) {
    STYLE_REGEX.lastIndex = 0;
    const results = [];
    let matches;
    while ((matches = STYLE_REGEX.exec(style)) !== null) {
      const name = matches[1];
      if (matches[2]) {
        const args = parseArguments(name, matches[2]);
        results.push([name].concat(args));
      } else {
        results.push([name]);
      }
    }
    return results;
  }
  function buildStyle(chalk, styles) {
    const enabled = {};
    for (const layer of styles) {
      for (const style of layer.styles) {
        enabled[style[0]] = layer.inverse ? null : style.slice(1);
      }
    }
    let current = chalk;
    for (const [styleName, styles2] of Object.entries(enabled)) {
      if (!Array.isArray(styles2)) {
        continue;
      }
      if (!(styleName in current)) {
        throw new Error(`Unknown Chalk style: ${styleName}`);
      }
      current = styles2.length > 0 ? current[styleName](...styles2) : current[styleName];
    }
    return current;
  }
  module.exports = (chalk, temporary) => {
    const styles = [];
    const chunks = [];
    let chunk = [];
    temporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {
      if (escapeCharacter) {
        chunk.push(unescape(escapeCharacter));
      } else if (style) {
        const string = chunk.join("");
        chunk = [];
        chunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));
        styles.push({ inverse, styles: parseStyle(style) });
      } else if (close) {
        if (styles.length === 0) {
          throw new Error("Found extraneous } in Chalk template literal");
        }
        chunks.push(buildStyle(chalk, styles)(chunk.join("")));
        chunk = [];
        styles.pop();
      } else {
        chunk.push(character);
      }
    });
    chunks.push(chunk.join(""));
    if (styles.length > 0) {
      const errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? "" : "s"} (\`}\`)`;
      throw new Error(errMessage);
    }
    return chunks.join("");
  };
});

// node_modules/chalk/source/index.js
var require_source = __commonJS((exports, module) => {
  var ansiStyles = require_ansi_styles();
  var { stdout: stdoutColor, stderr: stderrColor } = require_browser();
  var {
    stringReplaceAll,
    stringEncaseCRLFWithFirstIndex
  } = require_util();
  var { isArray } = Array;
  var levelMapping = [
    "ansi",
    "ansi",
    "ansi256",
    "ansi16m"
  ];
  var styles = Object.create(null);
  var applyOptions = (object, options = {}) => {
    if (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {
      throw new Error("The `level` option should be an integer from 0 to 3");
    }
    const colorLevel = stdoutColor ? stdoutColor.level : 0;
    object.level = options.level === undefined ? colorLevel : options.level;
  };

  class ChalkClass {
    constructor(options) {
      return chalkFactory(options);
    }
  }
  var chalkFactory = (options) => {
    const chalk2 = {};
    applyOptions(chalk2, options);
    chalk2.template = (...arguments_) => chalkTag(chalk2.template, ...arguments_);
    Object.setPrototypeOf(chalk2, Chalk.prototype);
    Object.setPrototypeOf(chalk2.template, chalk2);
    chalk2.template.constructor = () => {
      throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.");
    };
    chalk2.template.Instance = ChalkClass;
    return chalk2.template;
  };
  function Chalk(options) {
    return chalkFactory(options);
  }
  for (const [styleName, style] of Object.entries(ansiStyles)) {
    styles[styleName] = {
      get() {
        const builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);
        Object.defineProperty(this, styleName, { value: builder });
        return builder;
      }
    };
  }
  styles.visible = {
    get() {
      const builder = createBuilder(this, this._styler, true);
      Object.defineProperty(this, "visible", { value: builder });
      return builder;
    }
  };
  var usedModels = ["rgb", "hex", "keyword", "hsl", "hsv", "hwb", "ansi", "ansi256"];
  for (const model of usedModels) {
    styles[model] = {
      get() {
        const { level } = this;
        return function(...arguments_) {
          const styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);
          return createBuilder(this, styler, this._isEmpty);
        };
      }
    };
  }
  for (const model of usedModels) {
    const bgModel = "bg" + model[0].toUpperCase() + model.slice(1);
    styles[bgModel] = {
      get() {
        const { level } = this;
        return function(...arguments_) {
          const styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);
          return createBuilder(this, styler, this._isEmpty);
        };
      }
    };
  }
  var proto = Object.defineProperties(() => {
  }, {
    ...styles,
    level: {
      enumerable: true,
      get() {
        return this._generator.level;
      },
      set(level) {
        this._generator.level = level;
      }
    }
  });
  var createStyler = (open, close, parent) => {
    let openAll;
    let closeAll;
    if (parent === undefined) {
      openAll = open;
      closeAll = close;
    } else {
      openAll = parent.openAll + open;
      closeAll = close + parent.closeAll;
    }
    return {
      open,
      close,
      openAll,
      closeAll,
      parent
    };
  };
  var createBuilder = (self2, _styler, _isEmpty) => {
    const builder = (...arguments_) => {
      if (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {
        return applyStyle(builder, chalkTag(builder, ...arguments_));
      }
      return applyStyle(builder, arguments_.length === 1 ? "" + arguments_[0] : arguments_.join(" "));
    };
    Object.setPrototypeOf(builder, proto);
    builder._generator = self2;
    builder._styler = _styler;
    builder._isEmpty = _isEmpty;
    return builder;
  };
  var applyStyle = (self2, string) => {
    if (self2.level <= 0 || !string) {
      return self2._isEmpty ? "" : string;
    }
    let styler = self2._styler;
    if (styler === undefined) {
      return string;
    }
    const { openAll, closeAll } = styler;
    if (string.indexOf("\x1B") !== -1) {
      while (styler !== undefined) {
        string = stringReplaceAll(string, styler.close, styler.open);
        styler = styler.parent;
      }
    }
    const lfIndex = string.indexOf(`
`);
    if (lfIndex !== -1) {
      string = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);
    }
    return openAll + string + closeAll;
  };
  var template;
  var chalkTag = (chalk2, ...strings) => {
    const [firstString] = strings;
    if (!isArray(firstString) || !isArray(firstString.raw)) {
      return strings.join(" ");
    }
    const arguments_ = strings.slice(1);
    const parts = [firstString.raw[0]];
    for (let i = 1;i < firstString.length; i++) {
      parts.push(String(arguments_[i - 1]).replace(/[{}\\]/g, "\\$&"), String(firstString.raw[i]));
    }
    if (template === undefined) {
      template = require_templates();
    }
    return template(chalk2, parts.join(""));
  };
  Object.defineProperties(Chalk.prototype, styles);
  var chalk = Chalk();
  chalk.supportsColor = stdoutColor;
  chalk.stderr = Chalk({ level: stderrColor ? stderrColor.level : 0 });
  chalk.stderr.supportsColor = stderrColor;
  module.exports = chalk;
});

// node_modules/logform/dist/format.js
var require_format = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o = r[t];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _classCallCheck(a, n) {
    if (!(a instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _wrapNativeSuper(t) {
    var r = typeof Map == "function" ? new Map : undefined;
    return _wrapNativeSuper = function _wrapNativeSuper(t2) {
      if (t2 === null || !_isNativeFunction(t2))
        return t2;
      if (typeof t2 != "function")
        throw new TypeError("Super expression must either be null or a function");
      if (r !== undefined) {
        if (r.has(t2))
          return r.get(t2);
        r.set(t2, Wrapper);
      }
      function Wrapper() {
        return _construct(t2, arguments, _getPrototypeOf(this).constructor);
      }
      return Wrapper.prototype = Object.create(t2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf(Wrapper, t2);
    }, _wrapNativeSuper(t);
  }
  function _construct(t, e, r) {
    if (_isNativeReflectConstruct())
      return Reflect.construct.apply(null, arguments);
    var o = [null];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o));
    return r && _setPrototypeOf(p, r.prototype), p;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _isNativeFunction(t) {
    try {
      return Function.toString.call(t).indexOf("[native code]") !== -1;
    } catch (n) {
      return typeof t == "function";
    }
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  var InvalidFormatError = /* @__PURE__ */ function(_Error) {
    function InvalidFormatError2(formatFn) {
      var _this;
      _classCallCheck(this, InvalidFormatError2);
      _this = _callSuper(this, InvalidFormatError2, [`Format functions must be synchronous taking a two arguments: (info, opts)
Found: `.concat(formatFn.toString().split(`
`)[0], `
`)]);
      Error.captureStackTrace(_this, InvalidFormatError2);
      return _this;
    }
    _inherits(InvalidFormatError2, _Error);
    return _createClass(InvalidFormatError2);
  }(/* @__PURE__ */ _wrapNativeSuper(Error));
  module.exports = function(formatFn) {
    if (formatFn.length > 2) {
      throw new InvalidFormatError(formatFn);
    }
    function Format() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.options = options;
    }
    Format.prototype.transform = formatFn;
    function createFormatWrap(opts) {
      return new Format(opts);
    }
    createFormatWrap.Format = Format;
    return createFormatWrap;
  };
});

// node:util
var exports_util = {};
__export(exports_util, {
  default: () => so,
  TextEncoder: () => st,
  TextDecoder: () => ct
});
var pt, dr, lt, gt, dt, bt, p = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports), At = (r, e) => {
  for (var t in e)
    dr(r, t, { get: e[t], enumerable: true });
}, gr = (r, e, t, n) => {
  if (e && typeof e == "object" || typeof e == "function")
    for (let o of gt(e))
      !bt.call(r, o) && o !== t && dr(r, o, { get: () => e[o], enumerable: !(n = lt(e, o)) || n.enumerable });
  return r;
}, F = (r, e, t) => (gr(r, e, "default"), t && gr(t, e, "default")), mt = (r, e, t) => (t = r != null ? pt(dt(r)) : {}, gr(e || !r || !r.__esModule ? dr(t, "default", { value: r, enumerable: true }) : t, r)), br, N2, Zr, Kr, V2, re, H2, ce, Y2, Ae, Se, Pe, Fr, Br, Ur, Rr, qe, rt, tt, nt, yt, E2, st, ct, so;
var init_util = __esm(() => {
  pt = Object.create;
  dr = Object.defineProperty;
  lt = Object.getOwnPropertyDescriptor;
  gt = Object.getOwnPropertyNames;
  dt = Object.getPrototypeOf;
  bt = Object.prototype.hasOwnProperty;
  br = p((po, Vr) => {
    Vr.exports = function() {
      if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
        return false;
      if (typeof Symbol.iterator == "symbol")
        return true;
      var e = {}, t = Symbol("test"), n = Object(t);
      if (typeof t == "string" || Object.prototype.toString.call(t) !== "[object Symbol]" || Object.prototype.toString.call(n) !== "[object Symbol]")
        return false;
      var o = 42;
      e[t] = o;
      for (t in e)
        return false;
      if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0)
        return false;
      var i = Object.getOwnPropertySymbols(e);
      if (i.length !== 1 || i[0] !== t || !Object.prototype.propertyIsEnumerable.call(e, t))
        return false;
      if (typeof Object.getOwnPropertyDescriptor == "function") {
        var a = Object.getOwnPropertyDescriptor(e, t);
        if (a.value !== o || a.enumerable !== true)
          return false;
      }
      return true;
    };
  });
  N2 = p((lo, Jr) => {
    var ht = br();
    Jr.exports = function() {
      return ht() && !!Symbol.toStringTag;
    };
  });
  Zr = p((go, Hr) => {
    var Lr = typeof Symbol < "u" && Symbol, St = br();
    Hr.exports = function() {
      return typeof Lr != "function" || typeof Symbol != "function" || typeof Lr("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? false : St();
    };
  });
  Kr = p((bo, Yr) => {
    var vt = "Function.prototype.bind called on incompatible ", Ar = Array.prototype.slice, Ot = Object.prototype.toString, jt = "[object Function]";
    Yr.exports = function(e) {
      var t = this;
      if (typeof t != "function" || Ot.call(t) !== jt)
        throw new TypeError(vt + t);
      for (var n = Ar.call(arguments, 1), o, i = function() {
        if (this instanceof o) {
          var g2 = t.apply(this, n.concat(Ar.call(arguments)));
          return Object(g2) === g2 ? g2 : this;
        } else
          return t.apply(e, n.concat(Ar.call(arguments)));
      }, a = Math.max(0, t.length - n.length), f = [], c = 0;c < a; c++)
        f.push("$" + c);
      if (o = Function("binder", "return function (" + f.join(",") + "){ return binder.apply(this,arguments); }")(i), t.prototype) {
        var l = function() {
        };
        l.prototype = t.prototype, o.prototype = new l, l.prototype = null;
      }
      return o;
    };
  });
  V2 = p((Ao, Qr) => {
    var Pt = Kr();
    Qr.exports = Function.prototype.bind || Pt;
  });
  re = p((mo, Xr) => {
    var wt = V2();
    Xr.exports = wt.call(Function.call, Object.prototype.hasOwnProperty);
  });
  H2 = p((ho, ie) => {
    var s, x2 = SyntaxError, oe = Function, U2 = TypeError, mr = function(r) {
      try {
        return oe('"use strict"; return (' + r + ").constructor;")();
      } catch {
      }
    }, v = Object.getOwnPropertyDescriptor;
    if (v)
      try {
        v({}, "");
      } catch {
        v = null;
      }
    var hr = function() {
      throw new U2;
    }, Et = v ? function() {
      try {
        return arguments.callee, hr;
      } catch {
        try {
          return v(arguments, "callee").get;
        } catch {
          return hr;
        }
      }
    }() : hr, I2 = Zr()(), m = Object.getPrototypeOf || function(r) {
      return r.__proto__;
    }, B2 = {}, Tt = typeof Uint8Array > "u" ? s : m(Uint8Array), O2 = { "%AggregateError%": typeof AggregateError > "u" ? s : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer > "u" ? s : ArrayBuffer, "%ArrayIteratorPrototype%": I2 ? m([][Symbol.iterator]()) : s, "%AsyncFromSyncIteratorPrototype%": s, "%AsyncFunction%": B2, "%AsyncGenerator%": B2, "%AsyncGeneratorFunction%": B2, "%AsyncIteratorPrototype%": B2, "%Atomics%": typeof Atomics > "u" ? s : Atomics, "%BigInt%": typeof BigInt > "u" ? s : BigInt, "%BigInt64Array%": typeof BigInt64Array > "u" ? s : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array > "u" ? s : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView > "u" ? s : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": Error, "%eval%": eval, "%EvalError%": EvalError, "%Float32Array%": typeof Float32Array > "u" ? s : Float32Array, "%Float64Array%": typeof Float64Array > "u" ? s : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? s : FinalizationRegistry, "%Function%": oe, "%GeneratorFunction%": B2, "%Int8Array%": typeof Int8Array > "u" ? s : Int8Array, "%Int16Array%": typeof Int16Array > "u" ? s : Int16Array, "%Int32Array%": typeof Int32Array > "u" ? s : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": I2 ? m(m([][Symbol.iterator]())) : s, "%JSON%": typeof JSON == "object" ? JSON : s, "%Map%": typeof Map > "u" ? s : Map, "%MapIteratorPrototype%": typeof Map > "u" || !I2 ? s : m(new Map()[Symbol.iterator]()), "%Math%": Math, "%Number%": Number, "%Object%": Object, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise > "u" ? s : Promise, "%Proxy%": typeof Proxy > "u" ? s : Proxy, "%RangeError%": RangeError, "%ReferenceError%": ReferenceError, "%Reflect%": typeof Reflect > "u" ? s : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set > "u" ? s : Set, "%SetIteratorPrototype%": typeof Set > "u" || !I2 ? s : m(new Set()[Symbol.iterator]()), "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? s : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": I2 ? m(""[Symbol.iterator]()) : s, "%Symbol%": I2 ? Symbol : s, "%SyntaxError%": x2, "%ThrowTypeError%": Et, "%TypedArray%": Tt, "%TypeError%": U2, "%Uint8Array%": typeof Uint8Array > "u" ? s : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? s : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array > "u" ? s : Uint16Array, "%Uint32Array%": typeof Uint32Array > "u" ? s : Uint32Array, "%URIError%": URIError, "%WeakMap%": typeof WeakMap > "u" ? s : WeakMap, "%WeakRef%": typeof WeakRef > "u" ? s : WeakRef, "%WeakSet%": typeof WeakSet > "u" ? s : WeakSet };
    try {
      null.error;
    } catch (r) {
      ee = m(m(r)), O2["%Error.prototype%"] = ee;
    }
    var ee, Ft = function r(e) {
      var t;
      if (e === "%AsyncFunction%")
        t = mr("async function () {}");
      else if (e === "%GeneratorFunction%")
        t = mr("function* () {}");
      else if (e === "%AsyncGeneratorFunction%")
        t = mr("async function* () {}");
      else if (e === "%AsyncGenerator%") {
        var n = r("%AsyncGeneratorFunction%");
        n && (t = n.prototype);
      } else if (e === "%AsyncIteratorPrototype%") {
        var o = r("%AsyncGenerator%");
        o && (t = m(o.prototype));
      }
      return O2[e] = t, t;
    }, te = { "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, C = V2(), J2 = re(), It = C.call(Function.call, Array.prototype.concat), Bt = C.call(Function.apply, Array.prototype.splice), ne = C.call(Function.call, String.prototype.replace), L2 = C.call(Function.call, String.prototype.slice), Ut = C.call(Function.call, RegExp.prototype.exec), xt = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, Dt = /\\(\\)?/g, Rt = function(e) {
      var t = L2(e, 0, 1), n = L2(e, -1);
      if (t === "%" && n !== "%")
        throw new x2("invalid intrinsic syntax, expected closing `%`");
      if (n === "%" && t !== "%")
        throw new x2("invalid intrinsic syntax, expected opening `%`");
      var o = [];
      return ne(e, xt, function(i, a, f, c) {
        o[o.length] = f ? ne(c, Dt, "$1") : a || i;
      }), o;
    }, kt = function(e, t) {
      var n = e, o;
      if (J2(te, n) && (o = te[n], n = "%" + o[0] + "%"), J2(O2, n)) {
        var i = O2[n];
        if (i === B2 && (i = Ft(n)), typeof i > "u" && !t)
          throw new U2("intrinsic " + e + " exists, but is not available. Please file an issue!");
        return { alias: o, name: n, value: i };
      }
      throw new x2("intrinsic " + e + " does not exist!");
    };
    ie.exports = function(e, t) {
      if (typeof e != "string" || e.length === 0)
        throw new U2("intrinsic name must be a non-empty string");
      if (arguments.length > 1 && typeof t != "boolean")
        throw new U2('"allowMissing" argument must be a boolean');
      if (Ut(/^%?[^%]*%?$/, e) === null)
        throw new x2("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      var n = Rt(e), o = n.length > 0 ? n[0] : "", i = kt("%" + o + "%", t), a = i.name, f = i.value, c = false, l = i.alias;
      l && (o = l[0], Bt(n, It([0, 1], l)));
      for (var g2 = 1, S2 = true;g2 < n.length; g2 += 1) {
        var d = n[g2], T2 = L2(d, 0, 1), _2 = L2(d, -1);
        if ((T2 === '"' || T2 === "'" || T2 === "`" || _2 === '"' || _2 === "'" || _2 === "`") && T2 !== _2)
          throw new x2("property names with quotes must have matching quotes");
        if ((d === "constructor" || !S2) && (c = true), o += "." + d, a = "%" + o + "%", J2(O2, a))
          f = O2[a];
        else if (f != null) {
          if (!(d in f)) {
            if (!t)
              throw new U2("base intrinsic for " + e + " exists, but the property is not available.");
            return;
          }
          if (v && g2 + 1 >= n.length) {
            var z = v(f, d);
            S2 = !!z, S2 && "get" in z && !("originalValue" in z.get) ? f = z.get : f = f[d];
          } else
            S2 = J2(f, d), f = f[d];
          S2 && !c && (O2[a] = f);
        }
      }
      return f;
    };
  });
  ce = p((So, Z2) => {
    var Sr = V2(), D2 = H2(), ue = D2("%Function.prototype.apply%"), ye = D2("%Function.prototype.call%"), se = D2("%Reflect.apply%", true) || Sr.call(ye, ue), ae = D2("%Object.getOwnPropertyDescriptor%", true), j2 = D2("%Object.defineProperty%", true), Mt = D2("%Math.max%");
    if (j2)
      try {
        j2({}, "a", { value: 1 });
      } catch {
        j2 = null;
      }
    Z2.exports = function(e) {
      var t = se(Sr, ye, arguments);
      if (ae && j2) {
        var n = ae(t, "length");
        n.configurable && j2(t, "length", { value: 1 + Mt(0, e.length - (arguments.length - 1)) });
      }
      return t;
    };
    var fe = function() {
      return se(Sr, ue, arguments);
    };
    j2 ? j2(Z2.exports, "apply", { value: fe }) : Z2.exports.apply = fe;
  });
  Y2 = p((vo, ge) => {
    var pe = H2(), le = ce(), Nt = le(pe("String.prototype.indexOf"));
    ge.exports = function(e, t) {
      var n = pe(e, !!t);
      return typeof n == "function" && Nt(e, ".prototype.") > -1 ? le(n) : n;
    };
  });
  Ae = p((Oo, be) => {
    var Ct = N2()(), $t = Y2(), vr = $t("Object.prototype.toString"), K2 = function(e) {
      return Ct && e && typeof e == "object" && Symbol.toStringTag in e ? false : vr(e) === "[object Arguments]";
    }, de = function(e) {
      return K2(e) ? true : e !== null && typeof e == "object" && typeof e.length == "number" && e.length >= 0 && vr(e) !== "[object Array]" && vr(e.callee) === "[object Function]";
    }, qt = function() {
      return K2(arguments);
    }();
    K2.isLegacyArguments = de;
    be.exports = qt ? K2 : de;
  });
  Se = p((jo, he) => {
    var Gt = Object.prototype.toString, Wt = Function.prototype.toString, _t = /^\s*(?:function)?\*/, me = N2()(), Or = Object.getPrototypeOf, zt = function() {
      if (!me)
        return false;
      try {
        return Function("return function*() {}")();
      } catch {
      }
    }, jr;
    he.exports = function(e) {
      if (typeof e != "function")
        return false;
      if (_t.test(Wt.call(e)))
        return true;
      if (!me) {
        var t = Gt.call(e);
        return t === "[object GeneratorFunction]";
      }
      if (!Or)
        return false;
      if (typeof jr > "u") {
        var n = zt();
        jr = n ? Or(n) : false;
      }
      return Or(e) === jr;
    };
  });
  Pe = p((Po, je) => {
    var Oe = Function.prototype.toString, R2 = typeof Reflect == "object" && Reflect !== null && Reflect.apply, wr, Q2;
    if (typeof R2 == "function" && typeof Object.defineProperty == "function")
      try {
        wr = Object.defineProperty({}, "length", { get: function() {
          throw Q2;
        } }), Q2 = {}, R2(function() {
          throw 42;
        }, null, wr);
      } catch (r) {
        r !== Q2 && (R2 = null);
      }
    else
      R2 = null;
    var Vt = /^\s*class\b/, Er = function(e) {
      try {
        var t = Oe.call(e);
        return Vt.test(t);
      } catch {
        return false;
      }
    }, Pr = function(e) {
      try {
        return Er(e) ? false : (Oe.call(e), true);
      } catch {
        return false;
      }
    }, X2 = Object.prototype.toString, Jt = "[object Object]", Lt = "[object Function]", Ht = "[object GeneratorFunction]", Zt = "[object HTMLAllCollection]", Yt = "[object HTML document.all class]", Kt = "[object HTMLCollection]", Qt = typeof Symbol == "function" && !!Symbol.toStringTag, Xt = !(0 in [,]), Tr = function() {
      return false;
    };
    typeof document == "object" && (ve = document.all, X2.call(ve) === X2.call(document.all) && (Tr = function(e) {
      if ((Xt || !e) && (typeof e > "u" || typeof e == "object"))
        try {
          var t = X2.call(e);
          return (t === Zt || t === Yt || t === Kt || t === Jt) && e("") == null;
        } catch {
        }
      return false;
    }));
    var ve;
    je.exports = R2 ? function(e) {
      if (Tr(e))
        return true;
      if (!e || typeof e != "function" && typeof e != "object")
        return false;
      try {
        R2(e, null, wr);
      } catch (t) {
        if (t !== Q2)
          return false;
      }
      return !Er(e) && Pr(e);
    } : function(e) {
      if (Tr(e))
        return true;
      if (!e || typeof e != "function" && typeof e != "object")
        return false;
      if (Qt)
        return Pr(e);
      if (Er(e))
        return false;
      var t = X2.call(e);
      return t !== Lt && t !== Ht && !/^\[object HTML/.test(t) ? false : Pr(e);
    };
  });
  Fr = p((wo, Ee) => {
    var rn = Pe(), en = Object.prototype.toString, we = Object.prototype.hasOwnProperty, tn = function(e, t, n) {
      for (var o = 0, i = e.length;o < i; o++)
        we.call(e, o) && (n == null ? t(e[o], o, e) : t.call(n, e[o], o, e));
    }, nn = function(e, t, n) {
      for (var o = 0, i = e.length;o < i; o++)
        n == null ? t(e.charAt(o), o, e) : t.call(n, e.charAt(o), o, e);
    }, on = function(e, t, n) {
      for (var o in e)
        we.call(e, o) && (n == null ? t(e[o], o, e) : t.call(n, e[o], o, e));
    }, an = function(e, t, n) {
      if (!rn(t))
        throw new TypeError("iterator must be a function");
      var o;
      arguments.length >= 3 && (o = n), en.call(e) === "[object Array]" ? tn(e, t, o) : typeof e == "string" ? nn(e, t, o) : on(e, t, o);
    };
    Ee.exports = an;
  });
  Br = p((Eo, Te) => {
    var Ir = ["BigInt64Array", "BigUint64Array", "Float32Array", "Float64Array", "Int16Array", "Int32Array", "Int8Array", "Uint16Array", "Uint32Array", "Uint8Array", "Uint8ClampedArray"], fn = typeof globalThis > "u" ? global : globalThis;
    Te.exports = function() {
      for (var e = [], t = 0;t < Ir.length; t++)
        typeof fn[Ir[t]] == "function" && (e[e.length] = Ir[t]);
      return e;
    };
  });
  Ur = p((To, Fe) => {
    var un = H2(), rr = un("%Object.getOwnPropertyDescriptor%", true);
    if (rr)
      try {
        rr([], "length");
      } catch {
        rr = null;
      }
    Fe.exports = rr;
  });
  Rr = p((Fo, De) => {
    var Ie = Fr(), yn = Br(), Dr = Y2(), sn = Dr("Object.prototype.toString"), Be = N2()(), er = Ur(), cn = typeof globalThis > "u" ? global : globalThis, Ue = yn(), pn = Dr("Array.prototype.indexOf", true) || function(e, t) {
      for (var n = 0;n < e.length; n += 1)
        if (e[n] === t)
          return n;
      return -1;
    }, ln = Dr("String.prototype.slice"), xe = {}, xr = Object.getPrototypeOf;
    Be && er && xr && Ie(Ue, function(r) {
      var e = new cn[r];
      if (Symbol.toStringTag in e) {
        var t = xr(e), n = er(t, Symbol.toStringTag);
        if (!n) {
          var o = xr(t);
          n = er(o, Symbol.toStringTag);
        }
        xe[r] = n.get;
      }
    });
    var gn = function(e) {
      var t = false;
      return Ie(xe, function(n, o) {
        if (!t)
          try {
            t = n.call(e) === o;
          } catch {
          }
      }), t;
    };
    De.exports = function(e) {
      if (!e || typeof e != "object")
        return false;
      if (!Be || !(Symbol.toStringTag in e)) {
        var t = ln(sn(e), 8, -1);
        return pn(Ue, t) > -1;
      }
      return er ? gn(e) : false;
    };
  });
  qe = p((Io, $e) => {
    var ke = Fr(), dn = Br(), Me = Y2(), kr = Ur(), bn = Me("Object.prototype.toString"), Ne = N2()(), Re = typeof globalThis > "u" ? global : globalThis, An = dn(), mn = Me("String.prototype.slice"), Ce = {}, Mr = Object.getPrototypeOf;
    Ne && kr && Mr && ke(An, function(r) {
      if (typeof Re[r] == "function") {
        var e = new Re[r];
        if (Symbol.toStringTag in e) {
          var t = Mr(e), n = kr(t, Symbol.toStringTag);
          if (!n) {
            var o = Mr(t);
            n = kr(o, Symbol.toStringTag);
          }
          Ce[r] = n.get;
        }
      }
    });
    var hn = function(e) {
      var t = false;
      return ke(Ce, function(n, o) {
        if (!t)
          try {
            var i = n.call(e);
            i === o && (t = i);
          } catch {
          }
      }), t;
    }, Sn = Rr();
    $e.exports = function(e) {
      return Sn(e) ? !Ne || !(Symbol.toStringTag in e) ? mn(bn(e), 8, -1) : hn(e) : false;
    };
  });
  rt = p((u2) => {
    var vn = Ae(), On = Se(), A = qe(), Ge = Rr();
    function k2(r) {
      return r.call.bind(r);
    }
    var We = typeof BigInt < "u", _e = typeof Symbol < "u", b = k2(Object.prototype.toString), jn = k2(Number.prototype.valueOf), Pn = k2(String.prototype.valueOf), wn = k2(Boolean.prototype.valueOf);
    We && (ze = k2(BigInt.prototype.valueOf));
    var ze;
    _e && (Ve = k2(Symbol.prototype.valueOf));
    var Ve;
    function q2(r, e) {
      if (typeof r != "object")
        return false;
      try {
        return e(r), true;
      } catch {
        return false;
      }
    }
    u2.isArgumentsObject = vn;
    u2.isGeneratorFunction = On;
    u2.isTypedArray = Ge;
    function En(r) {
      return typeof Promise < "u" && r instanceof Promise || r !== null && typeof r == "object" && typeof r.then == "function" && typeof r.catch == "function";
    }
    u2.isPromise = En;
    function Tn(r) {
      return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(r) : Ge(r) || Le(r);
    }
    u2.isArrayBufferView = Tn;
    function Fn(r) {
      return A(r) === "Uint8Array";
    }
    u2.isUint8Array = Fn;
    function In(r) {
      return A(r) === "Uint8ClampedArray";
    }
    u2.isUint8ClampedArray = In;
    function Bn(r) {
      return A(r) === "Uint16Array";
    }
    u2.isUint16Array = Bn;
    function Un(r) {
      return A(r) === "Uint32Array";
    }
    u2.isUint32Array = Un;
    function xn(r) {
      return A(r) === "Int8Array";
    }
    u2.isInt8Array = xn;
    function Dn(r) {
      return A(r) === "Int16Array";
    }
    u2.isInt16Array = Dn;
    function Rn(r) {
      return A(r) === "Int32Array";
    }
    u2.isInt32Array = Rn;
    function kn(r) {
      return A(r) === "Float32Array";
    }
    u2.isFloat32Array = kn;
    function Mn(r) {
      return A(r) === "Float64Array";
    }
    u2.isFloat64Array = Mn;
    function Nn(r) {
      return A(r) === "BigInt64Array";
    }
    u2.isBigInt64Array = Nn;
    function Cn(r) {
      return A(r) === "BigUint64Array";
    }
    u2.isBigUint64Array = Cn;
    function tr(r) {
      return b(r) === "[object Map]";
    }
    tr.working = typeof Map < "u" && tr(new Map);
    function $n(r) {
      return typeof Map > "u" ? false : tr.working ? tr(r) : r instanceof Map;
    }
    u2.isMap = $n;
    function nr(r) {
      return b(r) === "[object Set]";
    }
    nr.working = typeof Set < "u" && nr(new Set);
    function qn(r) {
      return typeof Set > "u" ? false : nr.working ? nr(r) : r instanceof Set;
    }
    u2.isSet = qn;
    function or(r) {
      return b(r) === "[object WeakMap]";
    }
    or.working = typeof WeakMap < "u" && or(new WeakMap);
    function Gn(r) {
      return typeof WeakMap > "u" ? false : or.working ? or(r) : r instanceof WeakMap;
    }
    u2.isWeakMap = Gn;
    function Cr(r) {
      return b(r) === "[object WeakSet]";
    }
    Cr.working = typeof WeakSet < "u" && Cr(new WeakSet);
    function Wn(r) {
      return Cr(r);
    }
    u2.isWeakSet = Wn;
    function ir(r) {
      return b(r) === "[object ArrayBuffer]";
    }
    ir.working = typeof ArrayBuffer < "u" && ir(new ArrayBuffer);
    function Je(r) {
      return typeof ArrayBuffer > "u" ? false : ir.working ? ir(r) : r instanceof ArrayBuffer;
    }
    u2.isArrayBuffer = Je;
    function ar(r) {
      return b(r) === "[object DataView]";
    }
    ar.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && ar(new DataView(new ArrayBuffer(1), 0, 1));
    function Le(r) {
      return typeof DataView > "u" ? false : ar.working ? ar(r) : r instanceof DataView;
    }
    u2.isDataView = Le;
    var Nr = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : undefined;
    function $2(r) {
      return b(r) === "[object SharedArrayBuffer]";
    }
    function He(r) {
      return typeof Nr > "u" ? false : (typeof $2.working > "u" && ($2.working = $2(new Nr)), $2.working ? $2(r) : r instanceof Nr);
    }
    u2.isSharedArrayBuffer = He;
    function _n(r) {
      return b(r) === "[object AsyncFunction]";
    }
    u2.isAsyncFunction = _n;
    function zn(r) {
      return b(r) === "[object Map Iterator]";
    }
    u2.isMapIterator = zn;
    function Vn(r) {
      return b(r) === "[object Set Iterator]";
    }
    u2.isSetIterator = Vn;
    function Jn(r) {
      return b(r) === "[object Generator]";
    }
    u2.isGeneratorObject = Jn;
    function Ln(r) {
      return b(r) === "[object WebAssembly.Module]";
    }
    u2.isWebAssemblyCompiledModule = Ln;
    function Ze(r) {
      return q2(r, jn);
    }
    u2.isNumberObject = Ze;
    function Ye(r) {
      return q2(r, Pn);
    }
    u2.isStringObject = Ye;
    function Ke(r) {
      return q2(r, wn);
    }
    u2.isBooleanObject = Ke;
    function Qe(r) {
      return We && q2(r, ze);
    }
    u2.isBigIntObject = Qe;
    function Xe(r) {
      return _e && q2(r, Ve);
    }
    u2.isSymbolObject = Xe;
    function Hn(r) {
      return Ze(r) || Ye(r) || Ke(r) || Qe(r) || Xe(r);
    }
    u2.isBoxedPrimitive = Hn;
    function Zn(r) {
      return typeof Uint8Array < "u" && (Je(r) || He(r));
    }
    u2.isAnyArrayBuffer = Zn;
    ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(r) {
      Object.defineProperty(u2, r, { enumerable: false, value: function() {
        throw new Error(r + " is not supported in userland");
      } });
    });
  });
  tt = p((Uo, et) => {
    et.exports = function(e) {
      return e && typeof e == "object" && typeof e.copy == "function" && typeof e.fill == "function" && typeof e.readUInt8 == "function";
    };
  });
  nt = p((xo, $r) => {
    typeof Object.create == "function" ? $r.exports = function(e, t) {
      t && (e.super_ = t, e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: false, writable: true, configurable: true } }));
    } : $r.exports = function(e, t) {
      if (t) {
        e.super_ = t;
        var n = function() {
        };
        n.prototype = t.prototype, e.prototype = new n, e.prototype.constructor = e;
      }
    };
  });
  yt = p((y2) => {
    var ot = Object.getOwnPropertyDescriptors || function(e) {
      for (var t = Object.keys(e), n = {}, o = 0;o < t.length; o++)
        n[t[o]] = Object.getOwnPropertyDescriptor(e, t[o]);
      return n;
    }, Yn = /%[sdj%]/g;
    y2.format = function(r) {
      if (!lr(r)) {
        for (var e = [], t = 0;t < arguments.length; t++)
          e.push(h2(arguments[t]));
        return e.join(" ");
      }
      for (var t = 1, n = arguments, o = n.length, i = String(r).replace(Yn, function(f) {
        if (f === "%%")
          return "%";
        if (t >= o)
          return f;
        switch (f) {
          case "%s":
            return String(n[t++]);
          case "%d":
            return Number(n[t++]);
          case "%j":
            try {
              return JSON.stringify(n[t++]);
            } catch {
              return "[Circular]";
            }
          default:
            return f;
        }
      }), a = n[t];t < o; a = n[++t])
        pr(a) || !M(a) ? i += " " + a : i += " " + h2(a);
      return i;
    };
    y2.deprecate = function(r, e) {
      if (typeof process < "u" && process.noDeprecation === true)
        return r;
      if (typeof process > "u")
        return function() {
          return y2.deprecate(r, e).apply(this, arguments);
        };
      var t = false;
      function n() {
        if (!t) {
          if (process.throwDeprecation)
            throw new Error(e);
          process.traceDeprecation ? console.trace(e) : console.error(e), t = true;
        }
        return r.apply(this, arguments);
      }
      return n;
    };
    var fr = {}, it = /^$/;
    process.env.NODE_DEBUG && (ur = process.env.NODE_DEBUG, ur = ur.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), it = new RegExp("^" + ur + "$", "i"));
    var ur;
    y2.debuglog = function(r) {
      if (r = r.toUpperCase(), !fr[r])
        if (it.test(r)) {
          var e = process.pid;
          fr[r] = function() {
            var t = y2.format.apply(y2, arguments);
            console.error("%s %d: %s", r, e, t);
          };
        } else
          fr[r] = function() {
          };
      return fr[r];
    };
    function h2(r, e) {
      var t = { seen: [], stylize: Qn };
      return arguments.length >= 3 && (t.depth = arguments[2]), arguments.length >= 4 && (t.colors = arguments[3]), _r(e) ? t.showHidden = e : e && y2._extend(t, e), w(t.showHidden) && (t.showHidden = false), w(t.depth) && (t.depth = 2), w(t.colors) && (t.colors = false), w(t.customInspect) && (t.customInspect = true), t.colors && (t.stylize = Kn), sr(t, r, t.depth);
    }
    y2.inspect = h2;
    h2.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] };
    h2.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" };
    function Kn(r, e) {
      var t = h2.styles[e];
      return t ? "\x1B[" + h2.colors[t][0] + "m" + r + "\x1B[" + h2.colors[t][1] + "m" : r;
    }
    function Qn(r, e) {
      return r;
    }
    function Xn(r) {
      var e = {};
      return r.forEach(function(t, n) {
        e[t] = true;
      }), e;
    }
    function sr(r, e, t) {
      if (r.customInspect && e && yr(e.inspect) && e.inspect !== y2.inspect && !(e.constructor && e.constructor.prototype === e)) {
        var n = e.inspect(t, r);
        return lr(n) || (n = sr(r, n, t)), n;
      }
      var o = ro(r, e);
      if (o)
        return o;
      var i = Object.keys(e), a = Xn(i);
      if (r.showHidden && (i = Object.getOwnPropertyNames(e)), W(e) && (i.indexOf("message") >= 0 || i.indexOf("description") >= 0))
        return qr(e);
      if (i.length === 0) {
        if (yr(e)) {
          var f = e.name ? ": " + e.name : "";
          return r.stylize("[Function" + f + "]", "special");
        }
        if (G2(e))
          return r.stylize(RegExp.prototype.toString.call(e), "regexp");
        if (cr(e))
          return r.stylize(Date.prototype.toString.call(e), "date");
        if (W(e))
          return qr(e);
      }
      var c = "", l = false, g2 = ["{", "}"];
      if (at(e) && (l = true, g2 = ["[", "]"]), yr(e)) {
        var S2 = e.name ? ": " + e.name : "";
        c = " [Function" + S2 + "]";
      }
      if (G2(e) && (c = " " + RegExp.prototype.toString.call(e)), cr(e) && (c = " " + Date.prototype.toUTCString.call(e)), W(e) && (c = " " + qr(e)), i.length === 0 && (!l || e.length == 0))
        return g2[0] + c + g2[1];
      if (t < 0)
        return G2(e) ? r.stylize(RegExp.prototype.toString.call(e), "regexp") : r.stylize("[Object]", "special");
      r.seen.push(e);
      var d;
      return l ? d = eo(r, e, t, a, i) : d = i.map(function(T2) {
        return Wr(r, e, t, a, T2, l);
      }), r.seen.pop(), to(d, c, g2);
    }
    function ro(r, e) {
      if (w(e))
        return r.stylize("undefined", "undefined");
      if (lr(e)) {
        var t = "'" + JSON.stringify(e).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return r.stylize(t, "string");
      }
      if (ft(e))
        return r.stylize("" + e, "number");
      if (_r(e))
        return r.stylize("" + e, "boolean");
      if (pr(e))
        return r.stylize("null", "null");
    }
    function qr(r) {
      return "[" + Error.prototype.toString.call(r) + "]";
    }
    function eo(r, e, t, n, o) {
      for (var i = [], a = 0, f = e.length;a < f; ++a)
        ut(e, String(a)) ? i.push(Wr(r, e, t, n, String(a), true)) : i.push("");
      return o.forEach(function(c) {
        c.match(/^\d+$/) || i.push(Wr(r, e, t, n, c, true));
      }), i;
    }
    function Wr(r, e, t, n, o, i) {
      var a, f, c;
      if (c = Object.getOwnPropertyDescriptor(e, o) || { value: e[o] }, c.get ? c.set ? f = r.stylize("[Getter/Setter]", "special") : f = r.stylize("[Getter]", "special") : c.set && (f = r.stylize("[Setter]", "special")), ut(n, o) || (a = "[" + o + "]"), f || (r.seen.indexOf(c.value) < 0 ? (pr(t) ? f = sr(r, c.value, null) : f = sr(r, c.value, t - 1), f.indexOf(`
`) > -1 && (i ? f = f.split(`
`).map(function(l) {
        return "  " + l;
      }).join(`
`).slice(2) : f = `
` + f.split(`
`).map(function(l) {
        return "   " + l;
      }).join(`
`))) : f = r.stylize("[Circular]", "special")), w(a)) {
        if (i && o.match(/^\d+$/))
          return f;
        a = JSON.stringify("" + o), a.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a = a.slice(1, -1), a = r.stylize(a, "name")) : (a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a = r.stylize(a, "string"));
      }
      return a + ": " + f;
    }
    function to(r, e, t) {
      var n = 0, o = r.reduce(function(i, a) {
        return n++, a.indexOf(`
`) >= 0 && n++, i + a.replace(/\u001b\[\d\d?m/g, "").length + 1;
      }, 0);
      return o > 60 ? t[0] + (e === "" ? "" : e + `
 `) + " " + r.join(`,
  `) + " " + t[1] : t[0] + e + " " + r.join(", ") + " " + t[1];
    }
    y2.types = rt();
    function at(r) {
      return Array.isArray(r);
    }
    y2.isArray = at;
    function _r(r) {
      return typeof r == "boolean";
    }
    y2.isBoolean = _r;
    function pr(r) {
      return r === null;
    }
    y2.isNull = pr;
    function no(r) {
      return r == null;
    }
    y2.isNullOrUndefined = no;
    function ft(r) {
      return typeof r == "number";
    }
    y2.isNumber = ft;
    function lr(r) {
      return typeof r == "string";
    }
    y2.isString = lr;
    function oo(r) {
      return typeof r == "symbol";
    }
    y2.isSymbol = oo;
    function w(r) {
      return r === undefined;
    }
    y2.isUndefined = w;
    function G2(r) {
      return M(r) && zr(r) === "[object RegExp]";
    }
    y2.isRegExp = G2;
    y2.types.isRegExp = G2;
    function M(r) {
      return typeof r == "object" && r !== null;
    }
    y2.isObject = M;
    function cr(r) {
      return M(r) && zr(r) === "[object Date]";
    }
    y2.isDate = cr;
    y2.types.isDate = cr;
    function W(r) {
      return M(r) && (zr(r) === "[object Error]" || r instanceof Error);
    }
    y2.isError = W;
    y2.types.isNativeError = W;
    function yr(r) {
      return typeof r == "function";
    }
    y2.isFunction = yr;
    function io(r) {
      return r === null || typeof r == "boolean" || typeof r == "number" || typeof r == "string" || typeof r == "symbol" || typeof r > "u";
    }
    y2.isPrimitive = io;
    y2.isBuffer = tt();
    function zr(r) {
      return Object.prototype.toString.call(r);
    }
    function Gr(r) {
      return r < 10 ? "0" + r.toString(10) : r.toString(10);
    }
    var ao = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    function fo() {
      var r = new Date, e = [Gr(r.getHours()), Gr(r.getMinutes()), Gr(r.getSeconds())].join(":");
      return [r.getDate(), ao[r.getMonth()], e].join(" ");
    }
    y2.log = function() {
      console.log("%s - %s", fo(), y2.format.apply(y2, arguments));
    };
    y2.inherits = nt();
    y2._extend = function(r, e) {
      if (!e || !M(e))
        return r;
      for (var t = Object.keys(e), n = t.length;n--; )
        r[t[n]] = e[t[n]];
      return r;
    };
    function ut(r, e) {
      return Object.prototype.hasOwnProperty.call(r, e);
    }
    var P2 = typeof Symbol < "u" ? Symbol("util.promisify.custom") : undefined;
    y2.promisify = function(e) {
      if (typeof e != "function")
        throw new TypeError('The "original" argument must be of type Function');
      if (P2 && e[P2]) {
        var t = e[P2];
        if (typeof t != "function")
          throw new TypeError('The "util.promisify.custom" argument must be of type Function');
        return Object.defineProperty(t, P2, { value: t, enumerable: false, writable: false, configurable: true }), t;
      }
      function t() {
        for (var n, o, i = new Promise(function(c, l) {
          n = c, o = l;
        }), a = [], f = 0;f < arguments.length; f++)
          a.push(arguments[f]);
        a.push(function(c, l) {
          c ? o(c) : n(l);
        });
        try {
          e.apply(this, a);
        } catch (c) {
          o(c);
        }
        return i;
      }
      return Object.setPrototypeOf(t, Object.getPrototypeOf(e)), P2 && Object.defineProperty(t, P2, { value: t, enumerable: false, writable: false, configurable: true }), Object.defineProperties(t, ot(e));
    };
    y2.promisify.custom = P2;
    function uo(r, e) {
      if (!r) {
        var t = new Error("Promise was rejected with a falsy value");
        t.reason = r, r = t;
      }
      return e(r);
    }
    function yo(r) {
      if (typeof r != "function")
        throw new TypeError('The "original" argument must be of type Function');
      function e() {
        for (var t = [], n = 0;n < arguments.length; n++)
          t.push(arguments[n]);
        var o = t.pop();
        if (typeof o != "function")
          throw new TypeError("The last argument must be of type Function");
        var i = this, a = function() {
          return o.apply(i, arguments);
        };
        r.apply(this, t).then(function(f) {
          process.nextTick(a.bind(null, null, f));
        }, function(f) {
          process.nextTick(uo.bind(null, f, a));
        });
      }
      return Object.setPrototypeOf(e, Object.getPrototypeOf(r)), Object.defineProperties(e, ot(r)), e;
    }
    y2.callbackify = yo;
  });
  E2 = {};
  At(E2, { TextDecoder: () => ct, TextEncoder: () => st, default: () => so });
  F(E2, mt(yt()));
  st = globalThis.TextEncoder;
  ct = globalThis.TextDecoder;
  so = { TextEncoder: st, TextDecoder: ct };
});

// node_modules/@colors/colors/lib/styles.js
var require_styles = __commonJS((exports, module) => {
  var styles = {};
  module["exports"] = styles;
  var codes = {
    reset: [0, 0],
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29],
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    gray: [90, 39],
    grey: [90, 39],
    brightRed: [91, 39],
    brightGreen: [92, 39],
    brightYellow: [93, 39],
    brightBlue: [94, 39],
    brightMagenta: [95, 39],
    brightCyan: [96, 39],
    brightWhite: [97, 39],
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    bgGray: [100, 49],
    bgGrey: [100, 49],
    bgBrightRed: [101, 49],
    bgBrightGreen: [102, 49],
    bgBrightYellow: [103, 49],
    bgBrightBlue: [104, 49],
    bgBrightMagenta: [105, 49],
    bgBrightCyan: [106, 49],
    bgBrightWhite: [107, 49],
    blackBG: [40, 49],
    redBG: [41, 49],
    greenBG: [42, 49],
    yellowBG: [43, 49],
    blueBG: [44, 49],
    magentaBG: [45, 49],
    cyanBG: [46, 49],
    whiteBG: [47, 49]
  };
  Object.keys(codes).forEach(function(key) {
    var val = codes[key];
    var style = styles[key] = [];
    style.open = "\x1B[" + val[0] + "m";
    style.close = "\x1B[" + val[1] + "m";
  });
});

// node:os
var exports_os = {};
__export(exports_os, {
  uptime: () => A,
  type: () => V3,
  totalmem: () => N3,
  tmpdir: () => U2,
  release: () => x2,
  platform: () => O2,
  networkInterfaces: () => j2,
  loadavg: () => y2,
  hostname: () => k2,
  homedir: () => _2,
  getNetworkInterfaces: () => B2,
  freemem: () => I2,
  endianness: () => L2,
  default: () => E3,
  cpus: () => b,
  arch: () => M,
  EOL: () => X2
});
var c, a, m, s, p2, d, l = (r, n) => () => (n || r((n = { exports: {} }).exports, n), n.exports), h2 = (r, n, t, i) => {
  if (n && typeof n == "object" || typeof n == "function")
    for (let o of s(n))
      !d.call(r, o) && o !== t && a(r, o, { get: () => n[o], enumerable: !(i = m(n, o)) || i.enumerable });
  return r;
}, g2 = (r, n, t) => (t = r != null ? c(p2(r)) : {}, h2(n || !r || !r.__esModule ? a(t, "default", { value: r, enumerable: true }) : t, r)), f, u2, E3, L2, k2, y2, A, I2, N3, b, V3, x2, M, O2, U2, X2, _2, j2, B2;
var init_os = __esm(() => {
  c = Object.create;
  a = Object.defineProperty;
  m = Object.getOwnPropertyDescriptor;
  s = Object.getOwnPropertyNames;
  p2 = Object.getPrototypeOf;
  d = Object.prototype.hasOwnProperty;
  f = l((e) => {
    e.endianness = function() {
      return "LE";
    };
    e.hostname = function() {
      return typeof location < "u" ? location.hostname : "";
    };
    e.loadavg = function() {
      return [];
    };
    e.uptime = function() {
      return 0;
    };
    e.freemem = function() {
      return Number.MAX_VALUE;
    };
    e.totalmem = function() {
      return Number.MAX_VALUE;
    };
    e.cpus = function() {
      return [];
    };
    e.type = function() {
      return "Browser";
    };
    e.release = function() {
      return typeof navigator < "u" ? navigator.appVersion : "";
    };
    e.networkInterfaces = e.getNetworkInterfaces = function() {
      return {};
    };
    e.arch = function() {
      return "javascript";
    };
    e.platform = function() {
      return "browser";
    };
    e.tmpdir = e.tmpDir = function() {
      return "/tmp";
    };
    e.EOL = `
`;
    e.homedir = function() {
      return "/";
    };
  });
  u2 = g2(f());
  E3 = u2.default;
  ({ endianness: L2, hostname: k2, loadavg: y2, uptime: A, freemem: I2, totalmem: N3, cpus: b, type: V3, release: x2, arch: M, platform: O2, tmpdir: U2, EOL: X2, homedir: _2, networkInterfaces: j2, getNetworkInterfaces: B2 } = u2.default);
});

// node_modules/@colors/colors/lib/system/has-flag.js
var require_has_flag = __commonJS((exports, module) => {
  module.exports = function(flag, argv) {
    argv = argv || process.argv || [];
    var terminatorPos = argv.indexOf("--");
    var prefix = /^-{1,2}/.test(flag) ? "" : "--";
    var pos = argv.indexOf(prefix + flag);
    return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
  };
});

// node_modules/@colors/colors/lib/system/supports-colors.js
var require_supports_colors = __commonJS((exports, module) => {
  var os = (init_os(), __toCommonJS(exports_os));
  var hasFlag = require_has_flag();
  var env = process.env;
  var forceColor = undefined;
  if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false")) {
    forceColor = false;
  } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
    forceColor = true;
  }
  if ("FORCE_COLOR" in env) {
    forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
  }
  function translateLevel(level) {
    if (level === 0) {
      return false;
    }
    return {
      level,
      hasBasic: true,
      has256: level >= 2,
      has16m: level >= 3
    };
  }
  function supportsColor(stream) {
    if (forceColor === false) {
      return 0;
    }
    if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
      return 3;
    }
    if (hasFlag("color=256")) {
      return 2;
    }
    if (stream && !stream.isTTY && forceColor !== true) {
      return 0;
    }
    var min = forceColor ? 1 : 0;
    if (process.platform === "win32") {
      var osRelease = os.release().split(".");
      if (Number(process.versions.node.split(".")[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
        return Number(osRelease[2]) >= 14931 ? 3 : 2;
      }
      return 1;
    }
    if ("CI" in env) {
      if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some(function(sign) {
        return sign in env;
      }) || env.CI_NAME === "codeship") {
        return 1;
      }
      return min;
    }
    if ("TEAMCITY_VERSION" in env) {
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
    }
    if ("TERM_PROGRAM" in env) {
      var version = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (env.TERM_PROGRAM) {
        case "iTerm.app":
          return version >= 3 ? 3 : 2;
        case "Hyper":
          return 3;
        case "Apple_Terminal":
          return 2;
      }
    }
    if (/-256(color)?$/i.test(env.TERM)) {
      return 2;
    }
    if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
      return 1;
    }
    if ("COLORTERM" in env) {
      return 1;
    }
    if (env.TERM === "dumb") {
      return min;
    }
    return min;
  }
  function getSupportLevel(stream) {
    var level = supportsColor(stream);
    return translateLevel(level);
  }
  module.exports = {
    supportsColor: getSupportLevel,
    stdout: getSupportLevel(process.stdout),
    stderr: getSupportLevel(process.stderr)
  };
});

// node_modules/@colors/colors/lib/custom/trap.js
var require_trap = __commonJS((exports, module) => {
  module["exports"] = function runTheTrap(text, options) {
    var result = "";
    text = text || "Run the trap, drop the bass";
    text = text.split("");
    var trap = {
      a: ["@", "Ą", "Ⱥ", "Ʌ", "Δ", "Λ", "Д"],
      b: ["ß", "Ɓ", "Ƀ", "ɮ", "β", "฿"],
      c: ["©", "Ȼ", "Ͼ"],
      d: ["Ð", "Ɗ", "Ԁ", "ԁ", "Ԃ", "ԃ"],
      e: [
        "Ë",
        "ĕ",
        "Ǝ",
        "ɘ",
        "Σ",
        "ξ",
        "Ҽ",
        "੬"
      ],
      f: ["Ӻ"],
      g: ["ɢ"],
      h: ["Ħ", "ƕ", "Ң", "Һ", "Ӈ", "Ԋ"],
      i: ["༏"],
      j: ["Ĵ"],
      k: ["ĸ", "Ҡ", "Ӄ", "Ԟ"],
      l: ["Ĺ"],
      m: ["ʍ", "Ӎ", "ӎ", "Ԡ", "ԡ", "൩"],
      n: ["Ñ", "ŋ", "Ɲ", "Ͷ", "Π", "Ҋ"],
      o: [
        "Ø",
        "õ",
        "ø",
        "Ǿ",
        "ʘ",
        "Ѻ",
        "ם",
        "۝",
        "๏"
      ],
      p: ["Ƿ", "Ҏ"],
      q: ["্"],
      r: ["®", "Ʀ", "Ȑ", "Ɍ", "ʀ", "Я"],
      s: ["§", "Ϟ", "ϟ", "Ϩ"],
      t: ["Ł", "Ŧ", "ͳ"],
      u: ["Ʊ", "Ս"],
      v: ["ט"],
      w: ["Ш", "Ѡ", "Ѽ", "൰"],
      x: ["Ҳ", "Ӿ", "Ӽ", "ӽ"],
      y: ["¥", "Ұ", "Ӌ"],
      z: ["Ƶ", "ɀ"]
    };
    text.forEach(function(c2) {
      c2 = c2.toLowerCase();
      var chars = trap[c2] || [" "];
      var rand = Math.floor(Math.random() * chars.length);
      if (typeof trap[c2] !== "undefined") {
        result += trap[c2][rand];
      } else {
        result += c2;
      }
    });
    return result;
  };
});

// node_modules/@colors/colors/lib/custom/zalgo.js
var require_zalgo = __commonJS((exports, module) => {
  module["exports"] = function zalgo(text, options) {
    text = text || "   he is here   ";
    var soul = {
      up: [
        "̍",
        "̎",
        "̄",
        "̅",
        "̿",
        "̑",
        "̆",
        "̐",
        "͒",
        "͗",
        "͑",
        "̇",
        "̈",
        "̊",
        "͂",
        "̓",
        "̈",
        "͊",
        "͋",
        "͌",
        "̃",
        "̂",
        "̌",
        "͐",
        "̀",
        "́",
        "̋",
        "̏",
        "̒",
        "̓",
        "̔",
        "̽",
        "̉",
        "ͣ",
        "ͤ",
        "ͥ",
        "ͦ",
        "ͧ",
        "ͨ",
        "ͩ",
        "ͪ",
        "ͫ",
        "ͬ",
        "ͭ",
        "ͮ",
        "ͯ",
        "̾",
        "͛",
        "͆",
        "̚"
      ],
      down: [
        "̖",
        "̗",
        "̘",
        "̙",
        "̜",
        "̝",
        "̞",
        "̟",
        "̠",
        "̤",
        "̥",
        "̦",
        "̩",
        "̪",
        "̫",
        "̬",
        "̭",
        "̮",
        "̯",
        "̰",
        "̱",
        "̲",
        "̳",
        "̹",
        "̺",
        "̻",
        "̼",
        "ͅ",
        "͇",
        "͈",
        "͉",
        "͍",
        "͎",
        "͓",
        "͔",
        "͕",
        "͖",
        "͙",
        "͚",
        "̣"
      ],
      mid: [
        "̕",
        "̛",
        "̀",
        "́",
        "͘",
        "̡",
        "̢",
        "̧",
        "̨",
        "̴",
        "̵",
        "̶",
        "͜",
        "͝",
        "͞",
        "͟",
        "͠",
        "͢",
        "̸",
        "̷",
        "͡",
        " ҉"
      ]
    };
    var all = [].concat(soul.up, soul.down, soul.mid);
    function randomNumber(range) {
      var r = Math.floor(Math.random() * range);
      return r;
    }
    function isChar(character) {
      var bool = false;
      all.filter(function(i) {
        bool = i === character;
      });
      return bool;
    }
    function heComes(text2, options2) {
      var result = "";
      var counts;
      var l2;
      options2 = options2 || {};
      options2["up"] = typeof options2["up"] !== "undefined" ? options2["up"] : true;
      options2["mid"] = typeof options2["mid"] !== "undefined" ? options2["mid"] : true;
      options2["down"] = typeof options2["down"] !== "undefined" ? options2["down"] : true;
      options2["size"] = typeof options2["size"] !== "undefined" ? options2["size"] : "maxi";
      text2 = text2.split("");
      for (l2 in text2) {
        if (isChar(l2)) {
          continue;
        }
        result = result + text2[l2];
        counts = { up: 0, down: 0, mid: 0 };
        switch (options2.size) {
          case "mini":
            counts.up = randomNumber(8);
            counts.mid = randomNumber(2);
            counts.down = randomNumber(8);
            break;
          case "maxi":
            counts.up = randomNumber(16) + 3;
            counts.mid = randomNumber(4) + 1;
            counts.down = randomNumber(64) + 3;
            break;
          default:
            counts.up = randomNumber(8) + 1;
            counts.mid = randomNumber(6) / 2;
            counts.down = randomNumber(8) + 1;
            break;
        }
        var arr = ["up", "mid", "down"];
        for (var d2 in arr) {
          var index = arr[d2];
          for (var i = 0;i <= counts[index]; i++) {
            if (options2[index]) {
              result = result + soul[index][randomNumber(soul[index].length)];
            }
          }
        }
      }
      return result;
    }
    return heComes(text, options);
  };
});

// node_modules/@colors/colors/lib/maps/america.js
var require_america = __commonJS((exports, module) => {
  module["exports"] = function(colors) {
    return function(letter, i, exploded) {
      if (letter === " ")
        return letter;
      switch (i % 3) {
        case 0:
          return colors.red(letter);
        case 1:
          return colors.white(letter);
        case 2:
          return colors.blue(letter);
      }
    };
  };
});

// node_modules/@colors/colors/lib/maps/zebra.js
var require_zebra = __commonJS((exports, module) => {
  module["exports"] = function(colors) {
    return function(letter, i, exploded) {
      return i % 2 === 0 ? letter : colors.inverse(letter);
    };
  };
});

// node_modules/@colors/colors/lib/maps/rainbow.js
var require_rainbow = __commonJS((exports, module) => {
  module["exports"] = function(colors) {
    var rainbowColors = ["red", "yellow", "green", "blue", "magenta"];
    return function(letter, i, exploded) {
      if (letter === " ") {
        return letter;
      } else {
        return colors[rainbowColors[i++ % rainbowColors.length]](letter);
      }
    };
  };
});

// node_modules/@colors/colors/lib/maps/random.js
var require_random = __commonJS((exports, module) => {
  module["exports"] = function(colors) {
    var available = [
      "underline",
      "inverse",
      "grey",
      "yellow",
      "red",
      "green",
      "blue",
      "white",
      "cyan",
      "magenta",
      "brightYellow",
      "brightRed",
      "brightGreen",
      "brightBlue",
      "brightWhite",
      "brightCyan",
      "brightMagenta"
    ];
    return function(letter, i, exploded) {
      return letter === " " ? letter : colors[available[Math.round(Math.random() * (available.length - 2))]](letter);
    };
  };
});

// node_modules/@colors/colors/lib/colors.js
var require_colors = __commonJS((exports, module) => {
  var colors = {};
  module["exports"] = colors;
  colors.themes = {};
  var util = (init_util(), __toCommonJS(exports_util));
  var ansiStyles = colors.styles = require_styles();
  var defineProps = Object.defineProperties;
  var newLineRegex = new RegExp(/[\r\n]+/g);
  colors.supportsColor = require_supports_colors().supportsColor;
  if (typeof colors.enabled === "undefined") {
    colors.enabled = colors.supportsColor() !== false;
  }
  colors.enable = function() {
    colors.enabled = true;
  };
  colors.disable = function() {
    colors.enabled = false;
  };
  colors.stripColors = colors.strip = function(str) {
    return ("" + str).replace(/\x1B\[\d+m/g, "");
  };
  var stylize = colors.stylize = function stylize(str, style) {
    if (!colors.enabled) {
      return str + "";
    }
    var styleMap = ansiStyles[style];
    if (!styleMap && style in colors) {
      return colors[style](str);
    }
    return styleMap.open + str + styleMap.close;
  };
  var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
  var escapeStringRegexp = function(str) {
    if (typeof str !== "string") {
      throw new TypeError("Expected a string");
    }
    return str.replace(matchOperatorsRe, "\\$&");
  };
  function build(_styles) {
    var builder = function builder() {
      return applyStyle.apply(builder, arguments);
    };
    builder._styles = _styles;
    builder.__proto__ = proto;
    return builder;
  }
  var styles = function() {
    var ret = {};
    ansiStyles.grey = ansiStyles.gray;
    Object.keys(ansiStyles).forEach(function(key) {
      ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), "g");
      ret[key] = {
        get: function() {
          return build(this._styles.concat(key));
        }
      };
    });
    return ret;
  }();
  var proto = defineProps(function colors() {
  }, styles);
  function applyStyle() {
    var args = Array.prototype.slice.call(arguments);
    var str = args.map(function(arg) {
      if (arg != null && arg.constructor === String) {
        return arg;
      } else {
        return util.inspect(arg);
      }
    }).join(" ");
    if (!colors.enabled || !str) {
      return str;
    }
    var newLinesPresent = str.indexOf(`
`) != -1;
    var nestedStyles = this._styles;
    var i = nestedStyles.length;
    while (i--) {
      var code = ansiStyles[nestedStyles[i]];
      str = code.open + str.replace(code.closeRe, code.open) + code.close;
      if (newLinesPresent) {
        str = str.replace(newLineRegex, function(match) {
          return code.close + match + code.open;
        });
      }
    }
    return str;
  }
  colors.setTheme = function(theme) {
    if (typeof theme === "string") {
      console.log("colors.setTheme now only accepts an object, not a string.  " + "If you are trying to set a theme from a file, it is now your (the " + "caller's) responsibility to require the file.  The old syntax " + "looked like colors.setTheme(__dirname + " + "'/../themes/generic-logging.js'); The new syntax looks like " + "colors.setTheme(require(__dirname + " + "'/../themes/generic-logging.js'));");
      return;
    }
    for (var style in theme) {
      (function(style2) {
        colors[style2] = function(str) {
          if (typeof theme[style2] === "object") {
            var out = str;
            for (var i in theme[style2]) {
              out = colors[theme[style2][i]](out);
            }
            return out;
          }
          return colors[theme[style2]](str);
        };
      })(style);
    }
  };
  function init() {
    var ret = {};
    Object.keys(styles).forEach(function(name) {
      ret[name] = {
        get: function() {
          return build([name]);
        }
      };
    });
    return ret;
  }
  var sequencer = function sequencer(map2, str) {
    var exploded = str.split("");
    exploded = exploded.map(map2);
    return exploded.join("");
  };
  colors.trap = require_trap();
  colors.zalgo = require_zalgo();
  colors.maps = {};
  colors.maps.america = require_america()(colors);
  colors.maps.zebra = require_zebra()(colors);
  colors.maps.rainbow = require_rainbow()(colors);
  colors.maps.random = require_random()(colors);
  for (map in colors.maps) {
    (function(map2) {
      colors[map2] = function(str) {
        return sequencer(colors.maps[map2], str);
      };
    })(map);
  }
  var map;
  defineProps(colors, init());
});

// node_modules/@colors/colors/safe.js
var require_safe = __commonJS((exports, module) => {
  var colors = require_colors();
  module["exports"] = colors;
});

// node_modules/triple-beam/config/cli.js
var require_cli = __commonJS((exports) => {
  exports.levels = {
    error: 0,
    warn: 1,
    help: 2,
    data: 3,
    info: 4,
    debug: 5,
    prompt: 6,
    verbose: 7,
    input: 8,
    silly: 9
  };
  exports.colors = {
    error: "red",
    warn: "yellow",
    help: "cyan",
    data: "grey",
    info: "green",
    debug: "blue",
    prompt: "grey",
    verbose: "cyan",
    input: "grey",
    silly: "magenta"
  };
});

// node_modules/triple-beam/config/npm.js
var require_npm = __commonJS((exports) => {
  exports.levels = {
    error: 0,
    warn: 1,
    info: 2,
    http: 3,
    verbose: 4,
    debug: 5,
    silly: 6
  };
  exports.colors = {
    error: "red",
    warn: "yellow",
    info: "green",
    http: "green",
    verbose: "cyan",
    debug: "blue",
    silly: "magenta"
  };
});

// node_modules/triple-beam/config/syslog.js
var require_syslog = __commonJS((exports) => {
  exports.levels = {
    emerg: 0,
    alert: 1,
    crit: 2,
    error: 3,
    warning: 4,
    notice: 5,
    info: 6,
    debug: 7
  };
  exports.colors = {
    emerg: "red",
    alert: "yellow",
    crit: "red",
    error: "red",
    warning: "red",
    notice: "yellow",
    info: "green",
    debug: "blue"
  };
});

// node_modules/triple-beam/config/index.js
var require_config = __commonJS((exports) => {
  Object.defineProperty(exports, "cli", {
    value: require_cli()
  });
  Object.defineProperty(exports, "npm", {
    value: require_npm()
  });
  Object.defineProperty(exports, "syslog", {
    value: require_syslog()
  });
});

// node_modules/triple-beam/index.js
var require_triple_beam = __commonJS((exports) => {
  Object.defineProperty(exports, "LEVEL", {
    value: Symbol.for("level")
  });
  Object.defineProperty(exports, "MESSAGE", {
    value: Symbol.for("message")
  });
  Object.defineProperty(exports, "SPLAT", {
    value: Symbol.for("splat")
  });
  Object.defineProperty(exports, "configs", {
    value: require_config()
  });
});

// node_modules/logform/dist/colorize.js
var require_colorize = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _classCallCheck(a2, n) {
    if (!(a2 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o = r[t];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var colors = require_safe();
  var _require = require_triple_beam();
  var LEVEL = _require.LEVEL;
  var MESSAGE = _require.MESSAGE;
  colors.enabled = true;
  var hasSpace = /\s+/;
  var Colorizer = /* @__PURE__ */ function() {
    function Colorizer2() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, Colorizer2);
      if (opts.colors) {
        this.addColors(opts.colors);
      }
      this.options = opts;
    }
    return _createClass(Colorizer2, [{
      key: "addColors",
      value: function addColors(clrs) {
        return Colorizer2.addColors(clrs);
      }
    }, {
      key: "colorize",
      value: function colorize(lookup, level, message) {
        if (typeof message === "undefined") {
          message = level;
        }
        if (!Array.isArray(Colorizer2.allColors[lookup])) {
          return colors[Colorizer2.allColors[lookup]](message);
        }
        for (var i = 0, len = Colorizer2.allColors[lookup].length;i < len; i++) {
          message = colors[Colorizer2.allColors[lookup][i]](message);
        }
        return message;
      }
    }, {
      key: "transform",
      value: function transform(info, opts) {
        if (opts.all && typeof info[MESSAGE] === "string") {
          info[MESSAGE] = this.colorize(info[LEVEL], info.level, info[MESSAGE]);
        }
        if (opts.level || opts.all || !opts.message) {
          info.level = this.colorize(info[LEVEL], info.level);
        }
        if (opts.all || opts.message) {
          info.message = this.colorize(info[LEVEL], info.level, info.message);
        }
        return info;
      }
    }], [{
      key: "addColors",
      value: function addColors(clrs) {
        var nextColors = Object.keys(clrs).reduce(function(acc, level) {
          acc[level] = hasSpace.test(clrs[level]) ? clrs[level].split(hasSpace) : clrs[level];
          return acc;
        }, {});
        Colorizer2.allColors = Object.assign({}, Colorizer2.allColors || {}, nextColors);
        return Colorizer2.allColors;
      }
    }]);
  }();
  module.exports = function(opts) {
    return new Colorizer(opts);
  };
  module.exports.Colorizer = module.exports.Format = Colorizer;
});

// node_modules/logform/dist/levels.js
var require_levels = __commonJS((exports, module) => {
  var _require = require_colorize();
  var Colorizer = _require.Colorizer;
  module.exports = function(config) {
    Colorizer.addColors(config.colors || config);
    return config;
  };
});

// node_modules/logform/dist/align.js
var require_align = __commonJS((exports, module) => {
  var format = require_format();
  module.exports = format(function(info) {
    info.message = "\t".concat(info.message);
    return info;
  });
});

// node_modules/logform/dist/pad-levels.js
var require_pad_levels = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _toConsumableArray(r) {
    return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
  }
  function _nonIterableSpread() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function _unsupportedIterableToArray(r, a2) {
    if (r) {
      if (typeof r == "string")
        return _arrayLikeToArray(r, a2);
      var t = {}.toString.call(r).slice(8, -1);
      return t === "Object" && r.constructor && (t = r.constructor.name), t === "Map" || t === "Set" ? Array.from(r) : t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a2) : undefined;
    }
  }
  function _iterableToArray(r) {
    if (typeof Symbol != "undefined" && r[Symbol.iterator] != null || r["@@iterator"] != null)
      return Array.from(r);
  }
  function _arrayWithoutHoles(r) {
    if (Array.isArray(r))
      return _arrayLikeToArray(r);
  }
  function _arrayLikeToArray(r, a2) {
    (a2 == null || a2 > r.length) && (a2 = r.length);
    for (var e = 0, n = Array(a2);e < a2; e++)
      n[e] = r[e];
    return n;
  }
  function _classCallCheck(a2, n) {
    if (!(a2 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o = r[t];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var _require = require_triple_beam();
  var configs = _require.configs;
  var LEVEL = _require.LEVEL;
  var MESSAGE = _require.MESSAGE;
  var Padder = /* @__PURE__ */ function() {
    function Padder2() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        levels: configs.npm.levels
      };
      _classCallCheck(this, Padder2);
      this.paddings = Padder2.paddingForLevels(opts.levels, opts.filler);
      this.options = opts;
    }
    return _createClass(Padder2, [{
      key: "transform",
      value: function transform(info, opts) {
        info.message = "".concat(this.paddings[info[LEVEL]]).concat(info.message);
        if (info[MESSAGE]) {
          info[MESSAGE] = "".concat(this.paddings[info[LEVEL]]).concat(info[MESSAGE]);
        }
        return info;
      }
    }], [{
      key: "getLongestLevel",
      value: function getLongestLevel(levels) {
        var lvls = Object.keys(levels).map(function(level) {
          return level.length;
        });
        return Math.max.apply(Math, _toConsumableArray(lvls));
      }
    }, {
      key: "paddingForLevel",
      value: function paddingForLevel(level, filler, maxLength) {
        var targetLen = maxLength + 1 - level.length;
        var rep = Math.floor(targetLen / filler.length);
        var padding = "".concat(filler).concat(filler.repeat(rep));
        return padding.slice(0, targetLen);
      }
    }, {
      key: "paddingForLevels",
      value: function paddingForLevels(levels) {
        var filler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : " ";
        var maxLength = Padder2.getLongestLevel(levels);
        return Object.keys(levels).reduce(function(acc, level) {
          acc[level] = Padder2.paddingForLevel(level, filler, maxLength);
          return acc;
        }, {});
      }
    }]);
  }();
  module.exports = function(opts) {
    return new Padder(opts);
  };
  module.exports.Padder = module.exports.Format = Padder;
});

// node_modules/logform/dist/cli.js
var require_cli2 = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _classCallCheck(a2, n) {
    if (!(a2 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o = r[t];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var _require = require_colorize();
  var Colorizer = _require.Colorizer;
  var _require2 = require_pad_levels();
  var Padder = _require2.Padder;
  var _require3 = require_triple_beam();
  var configs = _require3.configs;
  var MESSAGE = _require3.MESSAGE;
  var CliFormat = /* @__PURE__ */ function() {
    function CliFormat2() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, CliFormat2);
      if (!opts.levels) {
        opts.levels = configs.cli.levels;
      }
      this.colorizer = new Colorizer(opts);
      this.padder = new Padder(opts);
      this.options = opts;
    }
    return _createClass(CliFormat2, [{
      key: "transform",
      value: function transform(info, opts) {
        this.colorizer.transform(this.padder.transform(info, opts), opts);
        info[MESSAGE] = "".concat(info.level, ":").concat(info.message);
        return info;
      }
    }]);
  }();
  module.exports = function(opts) {
    return new CliFormat(opts);
  };
  module.exports.Format = CliFormat;
});

// node_modules/logform/dist/combine.js
var require_combine = __commonJS((exports, module) => {
  var format = require_format();
  function cascade(formats) {
    if (!formats.every(isValidFormat)) {
      return;
    }
    return function(info) {
      var obj = info;
      for (var i = 0;i < formats.length; i++) {
        obj = formats[i].transform(obj, formats[i].options);
        if (!obj) {
          return false;
        }
      }
      return obj;
    };
  }
  function isValidFormat(fmt) {
    if (typeof fmt.transform !== "function") {
      throw new Error(["No transform function found on format. Did you create a format instance?", "const myFormat = format(formatFn);", "const instance = myFormat();"].join(`
`));
    }
    return true;
  }
  module.exports = function() {
    for (var _len = arguments.length, formats = new Array(_len), _key = 0;_key < _len; _key++) {
      formats[_key] = arguments[_key];
    }
    var combinedFormat = format(cascade(formats));
    var instance = combinedFormat();
    instance.Format = combinedFormat.Format;
    return instance;
  };
  module.exports.cascade = cascade;
});

// node_modules/logform/dist/errors.js
var require_errors = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var format = require_format();
  var _require = require_triple_beam();
  var LEVEL = _require.LEVEL;
  var MESSAGE = _require.MESSAGE;
  module.exports = format(function(einfo, _ref) {
    var { stack, cause } = _ref;
    if (einfo instanceof Error) {
      var info = Object.assign({}, einfo, _defineProperty(_defineProperty(_defineProperty({
        level: einfo.level
      }, LEVEL, einfo[LEVEL] || einfo.level), "message", einfo.message), MESSAGE, einfo[MESSAGE] || einfo.message));
      if (stack)
        info.stack = einfo.stack;
      if (cause)
        info.cause = einfo.cause;
      return info;
    }
    if (!(einfo.message instanceof Error))
      return einfo;
    var err = einfo.message;
    Object.assign(einfo, err);
    einfo.message = err.message;
    einfo[MESSAGE] = err.message;
    if (stack)
      einfo.stack = err.stack;
    if (cause)
      einfo.cause = err.cause;
    return einfo;
  });
});

// node_modules/safe-stable-stringify/index.js
var require_safe_stable_stringify = __commonJS((exports, module) => {
  var { hasOwnProperty } = Object.prototype;
  var stringify = configure();
  stringify.configure = configure;
  stringify.stringify = stringify;
  stringify.default = stringify;
  exports.stringify = stringify;
  exports.configure = configure;
  module.exports = stringify;
  var strEscapeSequencesRegExp = /[\u0000-\u001f\u0022\u005c\ud800-\udfff]/;
  function strEscape(str) {
    if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) {
      return `"${str}"`;
    }
    return JSON.stringify(str);
  }
  function sort(array, comparator) {
    if (array.length > 200 || comparator) {
      return array.sort(comparator);
    }
    for (let i = 1;i < array.length; i++) {
      const currentValue = array[i];
      let position = i;
      while (position !== 0 && array[position - 1] > currentValue) {
        array[position] = array[position - 1];
        position--;
      }
      array[position] = currentValue;
    }
    return array;
  }
  var typedArrayPrototypeGetSymbolToStringTag = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Object.getPrototypeOf(new Int8Array)), Symbol.toStringTag).get;
  function isTypedArrayWithEntries(value) {
    return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0;
  }
  function stringifyTypedArray(array, separator, maximumBreadth) {
    if (array.length < maximumBreadth) {
      maximumBreadth = array.length;
    }
    const whitespace = separator === "," ? "" : " ";
    let res = `"0":${whitespace}${array[0]}`;
    for (let i = 1;i < maximumBreadth; i++) {
      res += `${separator}"${i}":${whitespace}${array[i]}`;
    }
    return res;
  }
  function getCircularValueOption(options) {
    if (hasOwnProperty.call(options, "circularValue")) {
      const circularValue = options.circularValue;
      if (typeof circularValue === "string") {
        return `"${circularValue}"`;
      }
      if (circularValue == null) {
        return circularValue;
      }
      if (circularValue === Error || circularValue === TypeError) {
        return {
          toString() {
            throw new TypeError("Converting circular structure to JSON");
          }
        };
      }
      throw new TypeError('The "circularValue" argument must be of type string or the value null or undefined');
    }
    return '"[Circular]"';
  }
  function getDeterministicOption(options) {
    let value;
    if (hasOwnProperty.call(options, "deterministic")) {
      value = options.deterministic;
      if (typeof value !== "boolean" && typeof value !== "function") {
        throw new TypeError('The "deterministic" argument must be of type boolean or comparator function');
      }
    }
    return value === undefined ? true : value;
  }
  function getBooleanOption(options, key) {
    let value;
    if (hasOwnProperty.call(options, key)) {
      value = options[key];
      if (typeof value !== "boolean") {
        throw new TypeError(`The "${key}" argument must be of type boolean`);
      }
    }
    return value === undefined ? true : value;
  }
  function getPositiveIntegerOption(options, key) {
    let value;
    if (hasOwnProperty.call(options, key)) {
      value = options[key];
      if (typeof value !== "number") {
        throw new TypeError(`The "${key}" argument must be of type number`);
      }
      if (!Number.isInteger(value)) {
        throw new TypeError(`The "${key}" argument must be an integer`);
      }
      if (value < 1) {
        throw new RangeError(`The "${key}" argument must be >= 1`);
      }
    }
    return value === undefined ? Infinity : value;
  }
  function getItemCount(number) {
    if (number === 1) {
      return "1 item";
    }
    return `${number} items`;
  }
  function getUniqueReplacerSet(replacerArray) {
    const replacerSet = new Set;
    for (const value of replacerArray) {
      if (typeof value === "string" || typeof value === "number") {
        replacerSet.add(String(value));
      }
    }
    return replacerSet;
  }
  function getStrictOption(options) {
    if (hasOwnProperty.call(options, "strict")) {
      const value = options.strict;
      if (typeof value !== "boolean") {
        throw new TypeError('The "strict" argument must be of type boolean');
      }
      if (value) {
        return (value2) => {
          let message = `Object can not safely be stringified. Received type ${typeof value2}`;
          if (typeof value2 !== "function")
            message += ` (${value2.toString()})`;
          throw new Error(message);
        };
      }
    }
  }
  function configure(options) {
    options = { ...options };
    const fail = getStrictOption(options);
    if (fail) {
      if (options.bigint === undefined) {
        options.bigint = false;
      }
      if (!("circularValue" in options)) {
        options.circularValue = Error;
      }
    }
    const circularValue = getCircularValueOption(options);
    const bigint = getBooleanOption(options, "bigint");
    const deterministic = getDeterministicOption(options);
    const comparator = typeof deterministic === "function" ? deterministic : undefined;
    const maximumDepth = getPositiveIntegerOption(options, "maximumDepth");
    const maximumBreadth = getPositiveIntegerOption(options, "maximumBreadth");
    function stringifyFnReplacer(key, parent, stack, replacer, spacer, indentation) {
      let value = parent[key];
      if (typeof value === "object" && value !== null && typeof value.toJSON === "function") {
        value = value.toJSON(key);
      }
      value = replacer.call(parent, key, value);
      switch (typeof value) {
        case "string":
          return strEscape(value);
        case "object": {
          if (value === null) {
            return "null";
          }
          if (stack.indexOf(value) !== -1) {
            return circularValue;
          }
          let res = "";
          let join = ",";
          const originalIndentation = indentation;
          if (Array.isArray(value)) {
            if (value.length === 0) {
              return "[]";
            }
            if (maximumDepth < stack.length + 1) {
              return '"[Array]"';
            }
            stack.push(value);
            if (spacer !== "") {
              indentation += spacer;
              res += `
${indentation}`;
              join = `,
${indentation}`;
            }
            const maximumValuesToStringify = Math.min(value.length, maximumBreadth);
            let i = 0;
            for (;i < maximumValuesToStringify - 1; i++) {
              const tmp2 = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation);
              res += tmp2 !== undefined ? tmp2 : "null";
              res += join;
            }
            const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation);
            res += tmp !== undefined ? tmp : "null";
            if (value.length - 1 > maximumBreadth) {
              const removedKeys = value.length - maximumBreadth - 1;
              res += `${join}"... ${getItemCount(removedKeys)} not stringified"`;
            }
            if (spacer !== "") {
              res += `
${originalIndentation}`;
            }
            stack.pop();
            return `[${res}]`;
          }
          let keys = Object.keys(value);
          const keyLength = keys.length;
          if (keyLength === 0) {
            return "{}";
          }
          if (maximumDepth < stack.length + 1) {
            return '"[Object]"';
          }
          let whitespace = "";
          let separator = "";
          if (spacer !== "") {
            indentation += spacer;
            join = `,
${indentation}`;
            whitespace = " ";
          }
          const maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth);
          if (deterministic && !isTypedArrayWithEntries(value)) {
            keys = sort(keys, comparator);
          }
          stack.push(value);
          for (let i = 0;i < maximumPropertiesToStringify; i++) {
            const key2 = keys[i];
            const tmp = stringifyFnReplacer(key2, value, stack, replacer, spacer, indentation);
            if (tmp !== undefined) {
              res += `${separator}${strEscape(key2)}:${whitespace}${tmp}`;
              separator = join;
            }
          }
          if (keyLength > maximumBreadth) {
            const removedKeys = keyLength - maximumBreadth;
            res += `${separator}"...":${whitespace}"${getItemCount(removedKeys)} not stringified"`;
            separator = join;
          }
          if (spacer !== "" && separator.length > 1) {
            res = `
${indentation}${res}
${originalIndentation}`;
          }
          stack.pop();
          return `{${res}}`;
        }
        case "number":
          return isFinite(value) ? String(value) : fail ? fail(value) : "null";
        case "boolean":
          return value === true ? "true" : "false";
        case "undefined":
          return;
        case "bigint":
          if (bigint) {
            return String(value);
          }
        default:
          return fail ? fail(value) : undefined;
      }
    }
    function stringifyArrayReplacer(key, value, stack, replacer, spacer, indentation) {
      if (typeof value === "object" && value !== null && typeof value.toJSON === "function") {
        value = value.toJSON(key);
      }
      switch (typeof value) {
        case "string":
          return strEscape(value);
        case "object": {
          if (value === null) {
            return "null";
          }
          if (stack.indexOf(value) !== -1) {
            return circularValue;
          }
          const originalIndentation = indentation;
          let res = "";
          let join = ",";
          if (Array.isArray(value)) {
            if (value.length === 0) {
              return "[]";
            }
            if (maximumDepth < stack.length + 1) {
              return '"[Array]"';
            }
            stack.push(value);
            if (spacer !== "") {
              indentation += spacer;
              res += `
${indentation}`;
              join = `,
${indentation}`;
            }
            const maximumValuesToStringify = Math.min(value.length, maximumBreadth);
            let i = 0;
            for (;i < maximumValuesToStringify - 1; i++) {
              const tmp2 = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation);
              res += tmp2 !== undefined ? tmp2 : "null";
              res += join;
            }
            const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation);
            res += tmp !== undefined ? tmp : "null";
            if (value.length - 1 > maximumBreadth) {
              const removedKeys = value.length - maximumBreadth - 1;
              res += `${join}"... ${getItemCount(removedKeys)} not stringified"`;
            }
            if (spacer !== "") {
              res += `
${originalIndentation}`;
            }
            stack.pop();
            return `[${res}]`;
          }
          stack.push(value);
          let whitespace = "";
          if (spacer !== "") {
            indentation += spacer;
            join = `,
${indentation}`;
            whitespace = " ";
          }
          let separator = "";
          for (const key2 of replacer) {
            const tmp = stringifyArrayReplacer(key2, value[key2], stack, replacer, spacer, indentation);
            if (tmp !== undefined) {
              res += `${separator}${strEscape(key2)}:${whitespace}${tmp}`;
              separator = join;
            }
          }
          if (spacer !== "" && separator.length > 1) {
            res = `
${indentation}${res}
${originalIndentation}`;
          }
          stack.pop();
          return `{${res}}`;
        }
        case "number":
          return isFinite(value) ? String(value) : fail ? fail(value) : "null";
        case "boolean":
          return value === true ? "true" : "false";
        case "undefined":
          return;
        case "bigint":
          if (bigint) {
            return String(value);
          }
        default:
          return fail ? fail(value) : undefined;
      }
    }
    function stringifyIndent(key, value, stack, spacer, indentation) {
      switch (typeof value) {
        case "string":
          return strEscape(value);
        case "object": {
          if (value === null) {
            return "null";
          }
          if (typeof value.toJSON === "function") {
            value = value.toJSON(key);
            if (typeof value !== "object") {
              return stringifyIndent(key, value, stack, spacer, indentation);
            }
            if (value === null) {
              return "null";
            }
          }
          if (stack.indexOf(value) !== -1) {
            return circularValue;
          }
          const originalIndentation = indentation;
          if (Array.isArray(value)) {
            if (value.length === 0) {
              return "[]";
            }
            if (maximumDepth < stack.length + 1) {
              return '"[Array]"';
            }
            stack.push(value);
            indentation += spacer;
            let res2 = `
${indentation}`;
            const join2 = `,
${indentation}`;
            const maximumValuesToStringify = Math.min(value.length, maximumBreadth);
            let i = 0;
            for (;i < maximumValuesToStringify - 1; i++) {
              const tmp2 = stringifyIndent(String(i), value[i], stack, spacer, indentation);
              res2 += tmp2 !== undefined ? tmp2 : "null";
              res2 += join2;
            }
            const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation);
            res2 += tmp !== undefined ? tmp : "null";
            if (value.length - 1 > maximumBreadth) {
              const removedKeys = value.length - maximumBreadth - 1;
              res2 += `${join2}"... ${getItemCount(removedKeys)} not stringified"`;
            }
            res2 += `
${originalIndentation}`;
            stack.pop();
            return `[${res2}]`;
          }
          let keys = Object.keys(value);
          const keyLength = keys.length;
          if (keyLength === 0) {
            return "{}";
          }
          if (maximumDepth < stack.length + 1) {
            return '"[Object]"';
          }
          indentation += spacer;
          const join = `,
${indentation}`;
          let res = "";
          let separator = "";
          let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth);
          if (isTypedArrayWithEntries(value)) {
            res += stringifyTypedArray(value, join, maximumBreadth);
            keys = keys.slice(value.length);
            maximumPropertiesToStringify -= value.length;
            separator = join;
          }
          if (deterministic) {
            keys = sort(keys, comparator);
          }
          stack.push(value);
          for (let i = 0;i < maximumPropertiesToStringify; i++) {
            const key2 = keys[i];
            const tmp = stringifyIndent(key2, value[key2], stack, spacer, indentation);
            if (tmp !== undefined) {
              res += `${separator}${strEscape(key2)}: ${tmp}`;
              separator = join;
            }
          }
          if (keyLength > maximumBreadth) {
            const removedKeys = keyLength - maximumBreadth;
            res += `${separator}"...": "${getItemCount(removedKeys)} not stringified"`;
            separator = join;
          }
          if (separator !== "") {
            res = `
${indentation}${res}
${originalIndentation}`;
          }
          stack.pop();
          return `{${res}}`;
        }
        case "number":
          return isFinite(value) ? String(value) : fail ? fail(value) : "null";
        case "boolean":
          return value === true ? "true" : "false";
        case "undefined":
          return;
        case "bigint":
          if (bigint) {
            return String(value);
          }
        default:
          return fail ? fail(value) : undefined;
      }
    }
    function stringifySimple(key, value, stack) {
      switch (typeof value) {
        case "string":
          return strEscape(value);
        case "object": {
          if (value === null) {
            return "null";
          }
          if (typeof value.toJSON === "function") {
            value = value.toJSON(key);
            if (typeof value !== "object") {
              return stringifySimple(key, value, stack);
            }
            if (value === null) {
              return "null";
            }
          }
          if (stack.indexOf(value) !== -1) {
            return circularValue;
          }
          let res = "";
          const hasLength = value.length !== undefined;
          if (hasLength && Array.isArray(value)) {
            if (value.length === 0) {
              return "[]";
            }
            if (maximumDepth < stack.length + 1) {
              return '"[Array]"';
            }
            stack.push(value);
            const maximumValuesToStringify = Math.min(value.length, maximumBreadth);
            let i = 0;
            for (;i < maximumValuesToStringify - 1; i++) {
              const tmp2 = stringifySimple(String(i), value[i], stack);
              res += tmp2 !== undefined ? tmp2 : "null";
              res += ",";
            }
            const tmp = stringifySimple(String(i), value[i], stack);
            res += tmp !== undefined ? tmp : "null";
            if (value.length - 1 > maximumBreadth) {
              const removedKeys = value.length - maximumBreadth - 1;
              res += `,"... ${getItemCount(removedKeys)} not stringified"`;
            }
            stack.pop();
            return `[${res}]`;
          }
          let keys = Object.keys(value);
          const keyLength = keys.length;
          if (keyLength === 0) {
            return "{}";
          }
          if (maximumDepth < stack.length + 1) {
            return '"[Object]"';
          }
          let separator = "";
          let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth);
          if (hasLength && isTypedArrayWithEntries(value)) {
            res += stringifyTypedArray(value, ",", maximumBreadth);
            keys = keys.slice(value.length);
            maximumPropertiesToStringify -= value.length;
            separator = ",";
          }
          if (deterministic) {
            keys = sort(keys, comparator);
          }
          stack.push(value);
          for (let i = 0;i < maximumPropertiesToStringify; i++) {
            const key2 = keys[i];
            const tmp = stringifySimple(key2, value[key2], stack);
            if (tmp !== undefined) {
              res += `${separator}${strEscape(key2)}:${tmp}`;
              separator = ",";
            }
          }
          if (keyLength > maximumBreadth) {
            const removedKeys = keyLength - maximumBreadth;
            res += `${separator}"...":"${getItemCount(removedKeys)} not stringified"`;
          }
          stack.pop();
          return `{${res}}`;
        }
        case "number":
          return isFinite(value) ? String(value) : fail ? fail(value) : "null";
        case "boolean":
          return value === true ? "true" : "false";
        case "undefined":
          return;
        case "bigint":
          if (bigint) {
            return String(value);
          }
        default:
          return fail ? fail(value) : undefined;
      }
    }
    function stringify2(value, replacer, space) {
      if (arguments.length > 1) {
        let spacer = "";
        if (typeof space === "number") {
          spacer = " ".repeat(Math.min(space, 10));
        } else if (typeof space === "string") {
          spacer = space.slice(0, 10);
        }
        if (replacer != null) {
          if (typeof replacer === "function") {
            return stringifyFnReplacer("", { "": value }, [], replacer, spacer, "");
          }
          if (Array.isArray(replacer)) {
            return stringifyArrayReplacer("", value, [], getUniqueReplacerSet(replacer), spacer, "");
          }
        }
        if (spacer.length !== 0) {
          return stringifyIndent("", value, [], spacer, "");
        }
      }
      return stringifySimple("", value, []);
    }
    return stringify2;
  }
});

// node_modules/logform/dist/json.js
var require_json = __commonJS((exports, module) => {
  var format = require_format();
  var _require = require_triple_beam();
  var MESSAGE = _require.MESSAGE;
  var stringify = require_safe_stable_stringify();
  function replacer(key, value) {
    if (typeof value === "bigint")
      return value.toString();
    return value;
  }
  module.exports = format(function(info, opts) {
    var jsonStringify = stringify.configure(opts);
    info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);
    return info;
  });
});

// node_modules/logform/dist/label.js
var require_label = __commonJS((exports, module) => {
  var format = require_format();
  module.exports = format(function(info, opts) {
    if (opts.message) {
      info.message = "[".concat(opts.label, "] ").concat(info.message);
      return info;
    }
    info.label = opts.label;
    return info;
  });
});

// node_modules/logform/dist/logstash.js
var require_logstash = __commonJS((exports, module) => {
  var format = require_format();
  var _require = require_triple_beam();
  var MESSAGE = _require.MESSAGE;
  var jsonStringify = require_safe_stable_stringify();
  module.exports = format(function(info) {
    var logstash = {};
    if (info.message) {
      logstash["@message"] = info.message;
      delete info.message;
    }
    if (info.timestamp) {
      logstash["@timestamp"] = info.timestamp;
      delete info.timestamp;
    }
    logstash["@fields"] = info;
    info[MESSAGE] = jsonStringify(logstash);
    return info;
  });
});

// node_modules/logform/dist/metadata.js
var require_metadata = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var format = require_format();
  function fillExcept(info, fillExceptKeys, metadataKey) {
    var savedKeys = fillExceptKeys.reduce(function(acc, key) {
      acc[key] = info[key];
      delete info[key];
      return acc;
    }, {});
    var metadata = Object.keys(info).reduce(function(acc, key) {
      acc[key] = info[key];
      delete info[key];
      return acc;
    }, {});
    Object.assign(info, savedKeys, _defineProperty({}, metadataKey, metadata));
    return info;
  }
  function fillWith(info, fillWithKeys, metadataKey) {
    info[metadataKey] = fillWithKeys.reduce(function(acc, key) {
      acc[key] = info[key];
      delete info[key];
      return acc;
    }, {});
    return info;
  }
  module.exports = format(function(info) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var metadataKey = "metadata";
    if (opts.key) {
      metadataKey = opts.key;
    }
    var fillExceptKeys = [];
    if (!opts.fillExcept && !opts.fillWith) {
      fillExceptKeys.push("level");
      fillExceptKeys.push("message");
    }
    if (opts.fillExcept) {
      fillExceptKeys = opts.fillExcept;
    }
    if (fillExceptKeys.length > 0) {
      return fillExcept(info, fillExceptKeys, metadataKey);
    }
    if (opts.fillWith) {
      return fillWith(info, opts.fillWith, metadataKey);
    }
    return info;
  });
});

// node_modules/ms/index.js
var require_ms = __commonJS((exports, module) => {
  var s2 = 1000;
  var m2 = s2 * 60;
  var h3 = m2 * 60;
  var d2 = h3 * 24;
  var w = d2 * 7;
  var y3 = d2 * 365.25;
  module.exports = function(val, options) {
    options = options || {};
    var type = typeof val;
    if (type === "string" && val.length > 0) {
      return parse(val);
    } else if (type === "number" && isFinite(val)) {
      return options.long ? fmtLong(val) : fmtShort(val);
    }
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(val));
  };
  function parse(str) {
    str = String(str);
    if (str.length > 100) {
      return;
    }
    var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);
    if (!match) {
      return;
    }
    var n = parseFloat(match[1]);
    var type = (match[2] || "ms").toLowerCase();
    switch (type) {
      case "years":
      case "year":
      case "yrs":
      case "yr":
      case "y":
        return n * y3;
      case "weeks":
      case "week":
      case "w":
        return n * w;
      case "days":
      case "day":
      case "d":
        return n * d2;
      case "hours":
      case "hour":
      case "hrs":
      case "hr":
      case "h":
        return n * h3;
      case "minutes":
      case "minute":
      case "mins":
      case "min":
      case "m":
        return n * m2;
      case "seconds":
      case "second":
      case "secs":
      case "sec":
      case "s":
        return n * s2;
      case "milliseconds":
      case "millisecond":
      case "msecs":
      case "msec":
      case "ms":
        return n;
      default:
        return;
    }
  }
  function fmtShort(ms) {
    var msAbs = Math.abs(ms);
    if (msAbs >= d2) {
      return Math.round(ms / d2) + "d";
    }
    if (msAbs >= h3) {
      return Math.round(ms / h3) + "h";
    }
    if (msAbs >= m2) {
      return Math.round(ms / m2) + "m";
    }
    if (msAbs >= s2) {
      return Math.round(ms / s2) + "s";
    }
    return ms + "ms";
  }
  function fmtLong(ms) {
    var msAbs = Math.abs(ms);
    if (msAbs >= d2) {
      return plural(ms, msAbs, d2, "day");
    }
    if (msAbs >= h3) {
      return plural(ms, msAbs, h3, "hour");
    }
    if (msAbs >= m2) {
      return plural(ms, msAbs, m2, "minute");
    }
    if (msAbs >= s2) {
      return plural(ms, msAbs, s2, "second");
    }
    return ms + " ms";
  }
  function plural(ms, msAbs, n, name) {
    var isPlural = msAbs >= n * 1.5;
    return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
  }
});

// node_modules/logform/dist/ms.js
var require_ms2 = __commonJS((exports, module) => {
  var _this = undefined;
  var format = require_format();
  var ms = require_ms();
  module.exports = format(function(info) {
    var curr = +new Date;
    _this.diff = curr - (_this.prevTime || curr);
    _this.prevTime = curr;
    info.ms = "+".concat(ms(_this.diff));
    return info;
  });
});

// node_modules/logform/dist/pretty-print.js
var require_pretty_print = __commonJS((exports, module) => {
  var inspect = (init_util(), __toCommonJS(exports_util)).inspect;
  var format = require_format();
  var _require = require_triple_beam();
  var LEVEL = _require.LEVEL;
  var MESSAGE = _require.MESSAGE;
  var SPLAT = _require.SPLAT;
  module.exports = format(function(info) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var stripped = Object.assign({}, info);
    delete stripped[LEVEL];
    delete stripped[MESSAGE];
    delete stripped[SPLAT];
    info[MESSAGE] = inspect(stripped, false, opts.depth || null, opts.colorize);
    return info;
  });
});

// node_modules/logform/dist/printf.js
var require_printf = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _classCallCheck(a2, n) {
    if (!(a2 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o = r[t];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var _require = require_triple_beam();
  var MESSAGE = _require.MESSAGE;
  var Printf = /* @__PURE__ */ function() {
    function Printf2(templateFn) {
      _classCallCheck(this, Printf2);
      this.template = templateFn;
    }
    return _createClass(Printf2, [{
      key: "transform",
      value: function transform(info) {
        info[MESSAGE] = this.template(info);
        return info;
      }
    }]);
  }();
  module.exports = function(opts) {
    return new Printf(opts);
  };
  module.exports.Printf = module.exports.Format = Printf;
});

// node_modules/logform/dist/simple.js
var require_simple = __commonJS((exports, module) => {
  var format = require_format();
  var _require = require_triple_beam();
  var MESSAGE = _require.MESSAGE;
  var jsonStringify = require_safe_stable_stringify();
  module.exports = format(function(info) {
    var stringifiedRest = jsonStringify(Object.assign({}, info, {
      level: undefined,
      message: undefined,
      splat: undefined
    }));
    var padding = info.padding && info.padding[info.level] || "";
    if (stringifiedRest !== "{}") {
      info[MESSAGE] = "".concat(info.level, ":").concat(padding, " ").concat(info.message, " ").concat(stringifiedRest);
    } else {
      info[MESSAGE] = "".concat(info.level, ":").concat(padding, " ").concat(info.message);
    }
    return info;
  });
});

// node_modules/logform/dist/splat.js
var require_splat = __commonJS((exports, module) => {
  function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, _typeof(o);
  }
  function _toConsumableArray(r) {
    return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
  }
  function _nonIterableSpread() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function _unsupportedIterableToArray(r, a2) {
    if (r) {
      if (typeof r == "string")
        return _arrayLikeToArray(r, a2);
      var t = {}.toString.call(r).slice(8, -1);
      return t === "Object" && r.constructor && (t = r.constructor.name), t === "Map" || t === "Set" ? Array.from(r) : t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a2) : undefined;
    }
  }
  function _iterableToArray(r) {
    if (typeof Symbol != "undefined" && r[Symbol.iterator] != null || r["@@iterator"] != null)
      return Array.from(r);
  }
  function _arrayWithoutHoles(r) {
    if (Array.isArray(r))
      return _arrayLikeToArray(r);
  }
  function _arrayLikeToArray(r, a2) {
    (a2 == null || a2 > r.length) && (a2 = r.length);
    for (var e = 0, n = Array(a2);e < a2; e++)
      n[e] = r[e];
    return n;
  }
  function _classCallCheck(a2, n) {
    if (!(a2 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o = r[t];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var util = (init_util(), __toCommonJS(exports_util));
  var _require = require_triple_beam();
  var SPLAT = _require.SPLAT;
  var formatRegExp = /%[scdjifoO%]/g;
  var escapedPercent = /%%/g;
  var Splatter = /* @__PURE__ */ function() {
    function Splatter2(opts) {
      _classCallCheck(this, Splatter2);
      this.options = opts;
    }
    return _createClass(Splatter2, [{
      key: "_splat",
      value: function _splat(info, tokens) {
        var msg = info.message;
        var splat = info[SPLAT] || info.splat || [];
        var percents = msg.match(escapedPercent);
        var escapes = percents && percents.length || 0;
        var expectedSplat = tokens.length - escapes;
        var extraSplat = expectedSplat - splat.length;
        var metas = extraSplat < 0 ? splat.splice(extraSplat, -1 * extraSplat) : [];
        var metalen = metas.length;
        if (metalen) {
          for (var i = 0;i < metalen; i++) {
            Object.assign(info, metas[i]);
          }
        }
        info.message = util.format.apply(util, [msg].concat(_toConsumableArray(splat)));
        return info;
      }
    }, {
      key: "transform",
      value: function transform(info) {
        var msg = info.message;
        var splat = info[SPLAT] || info.splat;
        if (!splat || !splat.length) {
          return info;
        }
        var tokens = msg && msg.match && msg.match(formatRegExp);
        if (!tokens && (splat || splat.length)) {
          var metas = splat.length > 1 ? splat.splice(0) : splat;
          var metalen = metas.length;
          if (metalen) {
            for (var i = 0;i < metalen; i++) {
              Object.assign(info, metas[i]);
            }
          }
          return info;
        }
        if (tokens) {
          return this._splat(info, tokens);
        }
        return info;
      }
    }]);
  }();
  module.exports = function(opts) {
    return new Splatter(opts);
  };
});

// node_modules/fecha/lib/fecha.umd.js
var require_fecha_umd = __commonJS((exports, module) => {
  (function(global2, factory) {
    typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : factory(global2.fecha = {});
  })(exports, function(exports2) {
    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|Z|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g;
    var twoDigitsOptional = "\\d\\d?";
    var twoDigits = "\\d\\d";
    var threeDigits = "\\d{3}";
    var fourDigits = "\\d{4}";
    var word = "[^\\s]+";
    var literal = /\[([^]*?)\]/gm;
    function shorten(arr, sLen) {
      var newArr = [];
      for (var i = 0, len = arr.length;i < len; i++) {
        newArr.push(arr[i].substr(0, sLen));
      }
      return newArr;
    }
    var monthUpdate = function(arrName) {
      return function(v, i18n) {
        var lowerCaseArr = i18n[arrName].map(function(v2) {
          return v2.toLowerCase();
        });
        var index = lowerCaseArr.indexOf(v.toLowerCase());
        if (index > -1) {
          return index;
        }
        return null;
      };
    };
    function assign(origObj) {
      var args = [];
      for (var _i = 1;_i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      for (var _a = 0, args_1 = args;_a < args_1.length; _a++) {
        var obj = args_1[_a];
        for (var key in obj) {
          origObj[key] = obj[key];
        }
      }
      return origObj;
    }
    var dayNames = [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday"
    ];
    var monthNames = [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December"
    ];
    var monthNamesShort = shorten(monthNames, 3);
    var dayNamesShort = shorten(dayNames, 3);
    var defaultI18n = {
      dayNamesShort,
      dayNames,
      monthNamesShort,
      monthNames,
      amPm: ["am", "pm"],
      DoFn: function(dayOfMonth) {
        return dayOfMonth + ["th", "st", "nd", "rd"][dayOfMonth % 10 > 3 ? 0 : (dayOfMonth - dayOfMonth % 10 !== 10 ? 1 : 0) * dayOfMonth % 10];
      }
    };
    var globalI18n = assign({}, defaultI18n);
    var setGlobalDateI18n = function(i18n) {
      return globalI18n = assign(globalI18n, i18n);
    };
    var regexEscape = function(str) {
      return str.replace(/[|\\{()[^$+*?.-]/g, "\\$&");
    };
    var pad = function(val, len) {
      if (len === undefined) {
        len = 2;
      }
      val = String(val);
      while (val.length < len) {
        val = "0" + val;
      }
      return val;
    };
    var formatFlags = {
      D: function(dateObj) {
        return String(dateObj.getDate());
      },
      DD: function(dateObj) {
        return pad(dateObj.getDate());
      },
      Do: function(dateObj, i18n) {
        return i18n.DoFn(dateObj.getDate());
      },
      d: function(dateObj) {
        return String(dateObj.getDay());
      },
      dd: function(dateObj) {
        return pad(dateObj.getDay());
      },
      ddd: function(dateObj, i18n) {
        return i18n.dayNamesShort[dateObj.getDay()];
      },
      dddd: function(dateObj, i18n) {
        return i18n.dayNames[dateObj.getDay()];
      },
      M: function(dateObj) {
        return String(dateObj.getMonth() + 1);
      },
      MM: function(dateObj) {
        return pad(dateObj.getMonth() + 1);
      },
      MMM: function(dateObj, i18n) {
        return i18n.monthNamesShort[dateObj.getMonth()];
      },
      MMMM: function(dateObj, i18n) {
        return i18n.monthNames[dateObj.getMonth()];
      },
      YY: function(dateObj) {
        return pad(String(dateObj.getFullYear()), 4).substr(2);
      },
      YYYY: function(dateObj) {
        return pad(dateObj.getFullYear(), 4);
      },
      h: function(dateObj) {
        return String(dateObj.getHours() % 12 || 12);
      },
      hh: function(dateObj) {
        return pad(dateObj.getHours() % 12 || 12);
      },
      H: function(dateObj) {
        return String(dateObj.getHours());
      },
      HH: function(dateObj) {
        return pad(dateObj.getHours());
      },
      m: function(dateObj) {
        return String(dateObj.getMinutes());
      },
      mm: function(dateObj) {
        return pad(dateObj.getMinutes());
      },
      s: function(dateObj) {
        return String(dateObj.getSeconds());
      },
      ss: function(dateObj) {
        return pad(dateObj.getSeconds());
      },
      S: function(dateObj) {
        return String(Math.round(dateObj.getMilliseconds() / 100));
      },
      SS: function(dateObj) {
        return pad(Math.round(dateObj.getMilliseconds() / 10), 2);
      },
      SSS: function(dateObj) {
        return pad(dateObj.getMilliseconds(), 3);
      },
      a: function(dateObj, i18n) {
        return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];
      },
      A: function(dateObj, i18n) {
        return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();
      },
      ZZ: function(dateObj) {
        var offset = dateObj.getTimezoneOffset();
        return (offset > 0 ? "-" : "+") + pad(Math.floor(Math.abs(offset) / 60) * 100 + Math.abs(offset) % 60, 4);
      },
      Z: function(dateObj) {
        var offset = dateObj.getTimezoneOffset();
        return (offset > 0 ? "-" : "+") + pad(Math.floor(Math.abs(offset) / 60), 2) + ":" + pad(Math.abs(offset) % 60, 2);
      }
    };
    var monthParse = function(v) {
      return +v - 1;
    };
    var emptyDigits = [null, twoDigitsOptional];
    var emptyWord = [null, word];
    var amPm = [
      "isPm",
      word,
      function(v, i18n) {
        var val = v.toLowerCase();
        if (val === i18n.amPm[0]) {
          return 0;
        } else if (val === i18n.amPm[1]) {
          return 1;
        }
        return null;
      }
    ];
    var timezoneOffset = [
      "timezoneOffset",
      "[^\\s]*?[\\+\\-]\\d\\d:?\\d\\d|[^\\s]*?Z?",
      function(v) {
        var parts = (v + "").match(/([+-]|\d\d)/gi);
        if (parts) {
          var minutes = +parts[1] * 60 + parseInt(parts[2], 10);
          return parts[0] === "+" ? minutes : -minutes;
        }
        return 0;
      }
    ];
    var parseFlags = {
      D: ["day", twoDigitsOptional],
      DD: ["day", twoDigits],
      Do: ["day", twoDigitsOptional + word, function(v) {
        return parseInt(v, 10);
      }],
      M: ["month", twoDigitsOptional, monthParse],
      MM: ["month", twoDigits, monthParse],
      YY: [
        "year",
        twoDigits,
        function(v) {
          var now = new Date;
          var cent = +("" + now.getFullYear()).substr(0, 2);
          return +("" + (+v > 68 ? cent - 1 : cent) + v);
        }
      ],
      h: ["hour", twoDigitsOptional, undefined, "isPm"],
      hh: ["hour", twoDigits, undefined, "isPm"],
      H: ["hour", twoDigitsOptional],
      HH: ["hour", twoDigits],
      m: ["minute", twoDigitsOptional],
      mm: ["minute", twoDigits],
      s: ["second", twoDigitsOptional],
      ss: ["second", twoDigits],
      YYYY: ["year", fourDigits],
      S: ["millisecond", "\\d", function(v) {
        return +v * 100;
      }],
      SS: ["millisecond", twoDigits, function(v) {
        return +v * 10;
      }],
      SSS: ["millisecond", threeDigits],
      d: emptyDigits,
      dd: emptyDigits,
      ddd: emptyWord,
      dddd: emptyWord,
      MMM: ["month", word, monthUpdate("monthNamesShort")],
      MMMM: ["month", word, monthUpdate("monthNames")],
      a: amPm,
      A: amPm,
      ZZ: timezoneOffset,
      Z: timezoneOffset
    };
    var globalMasks = {
      default: "ddd MMM DD YYYY HH:mm:ss",
      shortDate: "M/D/YY",
      mediumDate: "MMM D, YYYY",
      longDate: "MMMM D, YYYY",
      fullDate: "dddd, MMMM D, YYYY",
      isoDate: "YYYY-MM-DD",
      isoDateTime: "YYYY-MM-DDTHH:mm:ssZ",
      shortTime: "HH:mm",
      mediumTime: "HH:mm:ss",
      longTime: "HH:mm:ss.SSS"
    };
    var setGlobalDateMasks = function(masks) {
      return assign(globalMasks, masks);
    };
    var format = function(dateObj, mask, i18n) {
      if (mask === undefined) {
        mask = globalMasks["default"];
      }
      if (i18n === undefined) {
        i18n = {};
      }
      if (typeof dateObj === "number") {
        dateObj = new Date(dateObj);
      }
      if (Object.prototype.toString.call(dateObj) !== "[object Date]" || isNaN(dateObj.getTime())) {
        throw new Error("Invalid Date pass to format");
      }
      mask = globalMasks[mask] || mask;
      var literals = [];
      mask = mask.replace(literal, function($0, $1) {
        literals.push($1);
        return "@@@";
      });
      var combinedI18nSettings = assign(assign({}, globalI18n), i18n);
      mask = mask.replace(token, function($0) {
        return formatFlags[$0](dateObj, combinedI18nSettings);
      });
      return mask.replace(/@@@/g, function() {
        return literals.shift();
      });
    };
    function parse(dateStr, format2, i18n) {
      if (i18n === undefined) {
        i18n = {};
      }
      if (typeof format2 !== "string") {
        throw new Error("Invalid format in fecha parse");
      }
      format2 = globalMasks[format2] || format2;
      if (dateStr.length > 1000) {
        return null;
      }
      var today = new Date;
      var dateInfo = {
        year: today.getFullYear(),
        month: 0,
        day: 1,
        hour: 0,
        minute: 0,
        second: 0,
        millisecond: 0,
        isPm: null,
        timezoneOffset: null
      };
      var parseInfo = [];
      var literals = [];
      var newFormat = format2.replace(literal, function($0, $1) {
        literals.push(regexEscape($1));
        return "@@@";
      });
      var specifiedFields = {};
      var requiredFields = {};
      newFormat = regexEscape(newFormat).replace(token, function($0) {
        var info = parseFlags[$0];
        var field2 = info[0], regex = info[1], requiredField = info[3];
        if (specifiedFields[field2]) {
          throw new Error("Invalid format. " + field2 + " specified twice in format");
        }
        specifiedFields[field2] = true;
        if (requiredField) {
          requiredFields[requiredField] = true;
        }
        parseInfo.push(info);
        return "(" + regex + ")";
      });
      Object.keys(requiredFields).forEach(function(field2) {
        if (!specifiedFields[field2]) {
          throw new Error("Invalid format. " + field2 + " is required in specified format");
        }
      });
      newFormat = newFormat.replace(/@@@/g, function() {
        return literals.shift();
      });
      var matches = dateStr.match(new RegExp(newFormat, "i"));
      if (!matches) {
        return null;
      }
      var combinedI18nSettings = assign(assign({}, globalI18n), i18n);
      for (var i = 1;i < matches.length; i++) {
        var _a = parseInfo[i - 1], field = _a[0], parser = _a[2];
        var value = parser ? parser(matches[i], combinedI18nSettings) : +matches[i];
        if (value == null) {
          return null;
        }
        dateInfo[field] = value;
      }
      if (dateInfo.isPm === 1 && dateInfo.hour != null && +dateInfo.hour !== 12) {
        dateInfo.hour = +dateInfo.hour + 12;
      } else if (dateInfo.isPm === 0 && +dateInfo.hour === 12) {
        dateInfo.hour = 0;
      }
      var dateTZ;
      if (dateInfo.timezoneOffset == null) {
        dateTZ = new Date(dateInfo.year, dateInfo.month, dateInfo.day, dateInfo.hour, dateInfo.minute, dateInfo.second, dateInfo.millisecond);
        var validateFields = [
          ["month", "getMonth"],
          ["day", "getDate"],
          ["hour", "getHours"],
          ["minute", "getMinutes"],
          ["second", "getSeconds"]
        ];
        for (var i = 0, len = validateFields.length;i < len; i++) {
          if (specifiedFields[validateFields[i][0]] && dateInfo[validateFields[i][0]] !== dateTZ[validateFields[i][1]]()) {
            return null;
          }
        }
      } else {
        dateTZ = new Date(Date.UTC(dateInfo.year, dateInfo.month, dateInfo.day, dateInfo.hour, dateInfo.minute - dateInfo.timezoneOffset, dateInfo.second, dateInfo.millisecond));
        if (dateInfo.month > 11 || dateInfo.month < 0 || dateInfo.day > 31 || dateInfo.day < 1 || dateInfo.hour > 23 || dateInfo.hour < 0 || dateInfo.minute > 59 || dateInfo.minute < 0 || dateInfo.second > 59 || dateInfo.second < 0) {
          return null;
        }
      }
      return dateTZ;
    }
    var fecha = {
      format,
      parse,
      defaultI18n,
      setGlobalDateI18n,
      setGlobalDateMasks
    };
    exports2.assign = assign;
    exports2.default = fecha;
    exports2.format = format;
    exports2.parse = parse;
    exports2.defaultI18n = defaultI18n;
    exports2.setGlobalDateI18n = setGlobalDateI18n;
    exports2.setGlobalDateMasks = setGlobalDateMasks;
    Object.defineProperty(exports2, "__esModule", { value: true });
  });
});

// node_modules/logform/dist/timestamp.js
var require_timestamp = __commonJS((exports, module) => {
  var fecha = require_fecha_umd();
  var format = require_format();
  module.exports = format(function(info) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (opts.format) {
      info.timestamp = typeof opts.format === "function" ? opts.format() : fecha.format(new Date, opts.format);
    }
    if (!info.timestamp) {
      info.timestamp = new Date().toISOString();
    }
    if (opts.alias) {
      info[opts.alias] = info.timestamp;
    }
    return info;
  });
});

// node_modules/logform/dist/uncolorize.js
var require_uncolorize = __commonJS((exports, module) => {
  var colors = require_safe();
  var format = require_format();
  var _require = require_triple_beam();
  var MESSAGE = _require.MESSAGE;
  module.exports = format(function(info, opts) {
    if (opts.level !== false) {
      info.level = colors.strip(info.level);
    }
    if (opts.message !== false) {
      info.message = colors.strip(String(info.message));
    }
    if (opts.raw !== false && info[MESSAGE]) {
      info[MESSAGE] = colors.strip(String(info[MESSAGE]));
    }
    return info;
  });
});

// node_modules/logform/dist/browser.js
var require_browser2 = __commonJS((exports) => {
  var format = exports.format = require_format();
  exports.levels = require_levels();
  Object.defineProperty(format, "align", {
    value: require_align()
  });
  Object.defineProperty(format, "cli", {
    value: require_cli2()
  });
  Object.defineProperty(format, "colorize", {
    value: require_colorize()
  });
  Object.defineProperty(format, "combine", {
    value: require_combine()
  });
  Object.defineProperty(format, "errors", {
    value: require_errors()
  });
  Object.defineProperty(format, "json", {
    value: require_json()
  });
  Object.defineProperty(format, "label", {
    value: require_label()
  });
  Object.defineProperty(format, "logstash", {
    value: require_logstash()
  });
  Object.defineProperty(format, "metadata", {
    value: require_metadata()
  });
  Object.defineProperty(format, "ms", {
    value: require_ms2()
  });
  Object.defineProperty(format, "padLevels", {
    value: require_pad_levels()
  });
  Object.defineProperty(format, "prettyPrint", {
    value: require_pretty_print()
  });
  Object.defineProperty(format, "printf", {
    value: require_printf()
  });
  Object.defineProperty(format, "simple", {
    value: require_simple()
  });
  Object.defineProperty(format, "splat", {
    value: require_splat()
  });
  Object.defineProperty(format, "timestamp", {
    value: require_timestamp()
  });
  Object.defineProperty(format, "uncolorize", {
    value: require_uncolorize()
  });
});

// node_modules/winston/dist/winston/common.js
var require_common = __commonJS((exports) => {
  var _require = (init_util(), __toCommonJS(exports_util));
  var format = _require.format;
  exports.warn = {
    deprecated: function deprecated(prop) {
      return function() {
        throw new Error(format("{ %s } was removed in winston@3.0.0.", prop));
      };
    },
    useFormat: function useFormat(prop) {
      return function() {
        throw new Error([format("{ %s } was removed in winston@3.0.0.", prop), "Use a custom winston.format = winston.format(function) instead."].join(`
`));
      };
    },
    forFunctions: function forFunctions(obj, type, props) {
      props.forEach(function(prop) {
        obj[prop] = exports.warn[type](prop);
      });
    },
    forProperties: function forProperties(obj, type, props) {
      props.forEach(function(prop) {
        var notice = exports.warn[type](prop);
        Object.defineProperty(obj, prop, {
          get: notice,
          set: notice
        });
      });
    }
  };
});

// node_modules/winston/package.json
var require_package = __commonJS((exports, module) => {
  module.exports = {
    name: "winston",
    description: "A logger for just about everything.",
    version: "3.17.0",
    author: "Charlie Robbins <charlie.robbins@gmail.com>",
    maintainers: [
      "David Hyde <dabh@alumni.stanford.edu>"
    ],
    repository: {
      type: "git",
      url: "https://github.com/winstonjs/winston.git"
    },
    keywords: [
      "winston",
      "logger",
      "logging",
      "logs",
      "sysadmin",
      "bunyan",
      "pino",
      "loglevel",
      "tools",
      "json",
      "stream"
    ],
    dependencies: {
      "@dabh/diagnostics": "^2.0.2",
      "@colors/colors": "^1.6.0",
      async: "^3.2.3",
      "is-stream": "^2.0.0",
      logform: "^2.7.0",
      "one-time": "^1.0.0",
      "readable-stream": "^3.4.0",
      "safe-stable-stringify": "^2.3.1",
      "stack-trace": "0.0.x",
      "triple-beam": "^1.3.0",
      "winston-transport": "^4.9.0"
    },
    devDependencies: {
      "@babel/cli": "^7.23.9",
      "@babel/core": "^7.24.0",
      "@babel/preset-env": "^7.24.0",
      "@dabh/eslint-config-populist": "^4.4.0",
      "@types/node": "^20.11.24",
      "abstract-winston-transport": "^0.5.1",
      assume: "^2.2.0",
      "cross-spawn-async": "^2.2.5",
      eslint: "^8.57.0",
      hock: "^1.4.1",
      mocha: "^10.3.0",
      nyc: "^17.1.0",
      rimraf: "5.0.1",
      split2: "^4.1.0",
      "std-mocks": "^2.0.0",
      through2: "^4.0.2",
      "winston-compat": "^0.1.5"
    },
    main: "./lib/winston.js",
    browser: "./dist/winston",
    types: "./index.d.ts",
    scripts: {
      lint: "eslint lib/*.js lib/winston/*.js lib/winston/**/*.js --resolve-plugins-relative-to ./node_modules/@dabh/eslint-config-populist",
      test: "rimraf test/fixtures/logs/* && mocha",
      "test:coverage": "nyc npm run test:unit",
      "test:unit": "mocha test/unit",
      "test:integration": "mocha test/integration",
      build: "rimraf dist && babel lib -d dist",
      prepublishOnly: "npm run build"
    },
    engines: {
      node: ">= 12.0.0"
    },
    license: "MIT"
  };
});

// node_modules/util-deprecate/browser.js
var require_browser3 = __commonJS((exports, module) => {
  module.exports = deprecate;
  function deprecate(fn, msg) {
    if (config("noDeprecation")) {
      return fn;
    }
    var warned = false;
    function deprecated() {
      if (!warned) {
        if (config("throwDeprecation")) {
          throw new Error(msg);
        } else if (config("traceDeprecation")) {
          console.trace(msg);
        } else {
          console.warn(msg);
        }
        warned = true;
      }
      return fn.apply(this, arguments);
    }
    return deprecated;
  }
  function config(name) {
    try {
      if (!global.localStorage)
        return false;
    } catch (_3) {
      return false;
    }
    var val = global.localStorage[name];
    if (val == null)
      return false;
    return String(val).toLowerCase() === "true";
  }
});

// node:events
var exports_events = {};
__export(exports_events, {
  prototype: () => P2,
  once: () => M2,
  default: () => A2,
  EventEmitter: () => o
});
function x3(t) {
  console && console.warn && console.warn(t);
}
function o() {
  o.init.call(this);
}
function v(t) {
  if (typeof t != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
}
function m2(t) {
  return t._maxListeners === undefined ? o.defaultMaxListeners : t._maxListeners;
}
function y3(t, e, n, r) {
  var i, f2, s2;
  if (v(n), f2 = t._events, f2 === undefined ? (f2 = t._events = Object.create(null), t._eventsCount = 0) : (f2.newListener !== undefined && (t.emit("newListener", e, n.listener ? n.listener : n), f2 = t._events), s2 = f2[e]), s2 === undefined)
    s2 = f2[e] = n, ++t._eventsCount;
  else if (typeof s2 == "function" ? s2 = f2[e] = r ? [n, s2] : [s2, n] : r ? s2.unshift(n) : s2.push(n), i = m2(t), i > 0 && s2.length > i && !s2.warned) {
    s2.warned = true;
    var u3 = new Error("Possible EventEmitter memory leak detected. " + s2.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    u3.name = "MaxListenersExceededWarning", u3.emitter = t, u3.type = e, u3.count = s2.length, x3(u3);
  }
  return t;
}
function C() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function g3(t, e, n) {
  var r = { fired: false, wrapFn: undefined, target: t, type: e, listener: n }, i = C.bind(r);
  return i.listener = n, r.wrapFn = i, i;
}
function _3(t, e, n) {
  var r = t._events;
  if (r === undefined)
    return [];
  var i = r[e];
  return i === undefined ? [] : typeof i == "function" ? n ? [i.listener || i] : [i] : n ? R2(i) : b2(i, i.length);
}
function w(t) {
  var e = this._events;
  if (e !== undefined) {
    var n = e[t];
    if (typeof n == "function")
      return 1;
    if (n !== undefined)
      return n.length;
  }
  return 0;
}
function b2(t, e) {
  for (var n = new Array(e), r = 0;r < e; ++r)
    n[r] = t[r];
  return n;
}
function j3(t, e) {
  for (;e + 1 < t.length; e++)
    t[e] = t[e + 1];
  t.pop();
}
function R2(t) {
  for (var e = new Array(t.length), n = 0;n < e.length; ++n)
    e[n] = t[n].listener || t[n];
  return e;
}
function M2(t, e) {
  return new Promise(function(n, r) {
    function i(s2) {
      t.removeListener(e, f2), r(s2);
    }
    function f2() {
      typeof t.removeListener == "function" && t.removeListener("error", i), n([].slice.call(arguments));
    }
    E4(t, e, f2, { once: true }), e !== "error" && N4(t, i, { once: true });
  });
}
function N4(t, e, n) {
  typeof t.on == "function" && E4(t, "error", e, n);
}
function E4(t, e, n, r) {
  if (typeof t.on == "function")
    r.once ? t.once(e, n) : t.on(e, n);
  else if (typeof t.addEventListener == "function")
    t.addEventListener(e, function i(f2) {
      r.once && t.removeEventListener(e, i), n(f2);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t);
}
var a2, d2, l2, L3, h3 = 10, A2, P2;
var init_events = __esm(() => {
  a2 = typeof Reflect == "object" ? Reflect : null;
  d2 = a2 && typeof a2.apply == "function" ? a2.apply : function(e, n, r) {
    return Function.prototype.apply.call(e, n, r);
  };
  a2 && typeof a2.ownKeys == "function" ? l2 = a2.ownKeys : Object.getOwnPropertySymbols ? l2 = function(e) {
    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
  } : l2 = function(e) {
    return Object.getOwnPropertyNames(e);
  };
  L3 = Number.isNaN || function(e) {
    return e !== e;
  };
  o.EventEmitter = o;
  o.prototype._events = undefined;
  o.prototype._eventsCount = 0;
  o.prototype._maxListeners = undefined;
  Object.defineProperty(o, "defaultMaxListeners", { enumerable: true, get: function() {
    return h3;
  }, set: function(t) {
    if (typeof t != "number" || t < 0 || L3(t))
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
    h3 = t;
  } });
  o.init = function() {
    (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
  };
  o.prototype.setMaxListeners = function(e) {
    if (typeof e != "number" || e < 0 || L3(e))
      throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
    return this._maxListeners = e, this;
  };
  o.prototype.getMaxListeners = function() {
    return m2(this);
  };
  o.prototype.emit = function(e) {
    for (var n = [], r = 1;r < arguments.length; r++)
      n.push(arguments[r]);
    var i = e === "error", f2 = this._events;
    if (f2 !== undefined)
      i = i && f2.error === undefined;
    else if (!i)
      return false;
    if (i) {
      var s2;
      if (n.length > 0 && (s2 = n[0]), s2 instanceof Error)
        throw s2;
      var u3 = new Error("Unhandled error." + (s2 ? " (" + s2.message + ")" : ""));
      throw u3.context = s2, u3;
    }
    var c2 = f2[e];
    if (c2 === undefined)
      return false;
    if (typeof c2 == "function")
      d2(c2, this, n);
    else
      for (var p3 = c2.length, O3 = b2(c2, p3), r = 0;r < p3; ++r)
        d2(O3[r], this, n);
    return true;
  };
  o.prototype.addListener = function(e, n) {
    return y3(this, e, n, false);
  };
  o.prototype.on = o.prototype.addListener;
  o.prototype.prependListener = function(e, n) {
    return y3(this, e, n, true);
  };
  o.prototype.once = function(e, n) {
    return v(n), this.on(e, g3(this, e, n)), this;
  };
  o.prototype.prependOnceListener = function(e, n) {
    return v(n), this.prependListener(e, g3(this, e, n)), this;
  };
  o.prototype.removeListener = function(e, n) {
    var r, i, f2, s2, u3;
    if (v(n), i = this._events, i === undefined)
      return this;
    if (r = i[e], r === undefined)
      return this;
    if (r === n || r.listener === n)
      --this._eventsCount === 0 ? this._events = Object.create(null) : (delete i[e], i.removeListener && this.emit("removeListener", e, r.listener || n));
    else if (typeof r != "function") {
      for (f2 = -1, s2 = r.length - 1;s2 >= 0; s2--)
        if (r[s2] === n || r[s2].listener === n) {
          u3 = r[s2].listener, f2 = s2;
          break;
        }
      if (f2 < 0)
        return this;
      f2 === 0 ? r.shift() : j3(r, f2), r.length === 1 && (i[e] = r[0]), i.removeListener !== undefined && this.emit("removeListener", e, u3 || n);
    }
    return this;
  };
  o.prototype.off = o.prototype.removeListener;
  o.prototype.removeAllListeners = function(e) {
    var n, r, i;
    if (r = this._events, r === undefined)
      return this;
    if (r.removeListener === undefined)
      return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : r[e] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete r[e]), this;
    if (arguments.length === 0) {
      var f2 = Object.keys(r), s2;
      for (i = 0;i < f2.length; ++i)
        s2 = f2[i], s2 !== "removeListener" && this.removeAllListeners(s2);
      return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
    }
    if (n = r[e], typeof n == "function")
      this.removeListener(e, n);
    else if (n !== undefined)
      for (i = n.length - 1;i >= 0; i--)
        this.removeListener(e, n[i]);
    return this;
  };
  o.prototype.listeners = function(e) {
    return _3(this, e, true);
  };
  o.prototype.rawListeners = function(e) {
    return _3(this, e, false);
  };
  o.listenerCount = function(t, e) {
    return typeof t.listenerCount == "function" ? t.listenerCount(e) : w.call(t, e);
  };
  o.prototype.listenerCount = w;
  o.prototype.eventNames = function() {
    return this._eventsCount > 0 ? l2(this._events) : [];
  };
  A2 = o;
  P2 = o.prototype;
});

// node_modules/readable-stream/lib/internal/streams/stream-browser.js
var require_stream_browser = __commonJS((exports, module) => {
  module.exports = (init_events(), __toCommonJS(exports_events)).EventEmitter;
});

// node:buffer
var exports_buffer = {};
__export(exports_buffer, {
  transcode: () => at,
  resolveObjectURL: () => lt2,
  kStringMaxLength: () => K2,
  isUtf8: () => pt2,
  isAscii: () => ct2,
  default: () => export_default,
  createObjectURL: () => ft,
  constants: () => st2,
  btoa: () => ht,
  atob: () => ut,
  File: () => ot,
  Buffer: () => export_Buffer,
  Blob: () => nt2
});
function lt2(i) {
  throw new Error("Not implemented");
}
function at(i, r, t) {
  throw new Error("Not implemented");
}
var gr2, $2, mr, Ir, Fr2, Ar, P3 = (i, r) => () => (r || i((r = { exports: {} }).exports, r), r.exports), Ur2 = (i, r) => {
  for (var t in r)
    $2(i, t, { get: r[t], enumerable: true });
}, D2 = (i, r, t, e) => {
  if (r && typeof r == "object" || typeof r == "function")
    for (let n of Ir(r))
      !Ar.call(i, n) && n !== t && $2(i, n, { get: () => r[n], enumerable: !(e = mr(r, n)) || e.enumerable });
  return i;
}, x4 = (i, r, t) => (D2(i, r, "default"), t && D2(t, r, "default")), O3 = (i, r, t) => (t = i != null ? gr2(Fr2(i)) : {}, D2(r || !i || !i.__esModule ? $2(t, "default", { value: i, enumerable: true }) : t, i)), v2, rr, b3, w2, Br2, Er, K2, nt2, ot, ut, ht, ft, ct2 = (i) => ArrayBuffer.isView(i) ? i.every((r) => r < 128) : i.split("").every((r) => r.charCodeAt(0) < 128), pt2 = (i) => {
  throw new Error("Not implemented");
}, st2, export_Buffer, export_default;
var init_buffer = __esm(() => {
  gr2 = Object.create;
  $2 = Object.defineProperty;
  mr = Object.getOwnPropertyDescriptor;
  Ir = Object.getOwnPropertyNames;
  Fr2 = Object.getPrototypeOf;
  Ar = Object.prototype.hasOwnProperty;
  v2 = P3((L4) => {
    L4.byteLength = Tr;
    L4.toByteArray = _r;
    L4.fromByteArray = Nr;
    var d3 = [], B3 = [], Rr2 = typeof Uint8Array < "u" ? Uint8Array : Array, G2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (F2 = 0, Z2 = G2.length;F2 < Z2; ++F2)
      d3[F2] = G2[F2], B3[G2.charCodeAt(F2)] = F2;
    var F2, Z2;
    B3[45] = 62;
    B3[95] = 63;
    function Q2(i) {
      var r = i.length;
      if (r % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var t = i.indexOf("=");
      t === -1 && (t = r);
      var e = t === r ? 0 : 4 - t % 4;
      return [t, e];
    }
    function Tr(i) {
      var r = Q2(i), t = r[0], e = r[1];
      return (t + e) * 3 / 4 - e;
    }
    function Cr(i, r, t) {
      return (r + t) * 3 / 4 - t;
    }
    function _r(i) {
      var r, t = Q2(i), e = t[0], n = t[1], o2 = new Rr2(Cr(i, e, n)), u3 = 0, f2 = n > 0 ? e - 4 : e, c2;
      for (c2 = 0;c2 < f2; c2 += 4)
        r = B3[i.charCodeAt(c2)] << 18 | B3[i.charCodeAt(c2 + 1)] << 12 | B3[i.charCodeAt(c2 + 2)] << 6 | B3[i.charCodeAt(c2 + 3)], o2[u3++] = r >> 16 & 255, o2[u3++] = r >> 8 & 255, o2[u3++] = r & 255;
      return n === 2 && (r = B3[i.charCodeAt(c2)] << 2 | B3[i.charCodeAt(c2 + 1)] >> 4, o2[u3++] = r & 255), n === 1 && (r = B3[i.charCodeAt(c2)] << 10 | B3[i.charCodeAt(c2 + 1)] << 4 | B3[i.charCodeAt(c2 + 2)] >> 2, o2[u3++] = r >> 8 & 255, o2[u3++] = r & 255), o2;
    }
    function Sr(i) {
      return d3[i >> 18 & 63] + d3[i >> 12 & 63] + d3[i >> 6 & 63] + d3[i & 63];
    }
    function Lr(i, r, t) {
      for (var e, n = [], o2 = r;o2 < t; o2 += 3)
        e = (i[o2] << 16 & 16711680) + (i[o2 + 1] << 8 & 65280) + (i[o2 + 2] & 255), n.push(Sr(e));
      return n.join("");
    }
    function Nr(i) {
      for (var r, t = i.length, e = t % 3, n = [], o2 = 16383, u3 = 0, f2 = t - e;u3 < f2; u3 += o2)
        n.push(Lr(i, u3, u3 + o2 > f2 ? f2 : u3 + o2));
      return e === 1 ? (r = i[t - 1], n.push(d3[r >> 2] + d3[r << 4 & 63] + "==")) : e === 2 && (r = (i[t - 2] << 8) + i[t - 1], n.push(d3[r >> 10] + d3[r >> 4 & 63] + d3[r << 2 & 63] + "=")), n.join("");
    }
  });
  rr = P3((Y3) => {
    Y3.read = function(i, r, t, e, n) {
      var o2, u3, f2 = n * 8 - e - 1, c2 = (1 << f2) - 1, l3 = c2 >> 1, s2 = -7, p3 = t ? n - 1 : 0, U3 = t ? -1 : 1, E5 = i[r + p3];
      for (p3 += U3, o2 = E5 & (1 << -s2) - 1, E5 >>= -s2, s2 += f2;s2 > 0; o2 = o2 * 256 + i[r + p3], p3 += U3, s2 -= 8)
        ;
      for (u3 = o2 & (1 << -s2) - 1, o2 >>= -s2, s2 += e;s2 > 0; u3 = u3 * 256 + i[r + p3], p3 += U3, s2 -= 8)
        ;
      if (o2 === 0)
        o2 = 1 - l3;
      else {
        if (o2 === c2)
          return u3 ? NaN : (E5 ? -1 : 1) * (1 / 0);
        u3 = u3 + Math.pow(2, e), o2 = o2 - l3;
      }
      return (E5 ? -1 : 1) * u3 * Math.pow(2, o2 - e);
    };
    Y3.write = function(i, r, t, e, n, o2) {
      var u3, f2, c2, l3 = o2 * 8 - n - 1, s2 = (1 << l3) - 1, p3 = s2 >> 1, U3 = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, E5 = e ? 0 : o2 - 1, k3 = e ? 1 : -1, dr2 = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0;
      for (r = Math.abs(r), isNaN(r) || r === 1 / 0 ? (f2 = isNaN(r) ? 1 : 0, u3 = s2) : (u3 = Math.floor(Math.log(r) / Math.LN2), r * (c2 = Math.pow(2, -u3)) < 1 && (u3--, c2 *= 2), u3 + p3 >= 1 ? r += U3 / c2 : r += U3 * Math.pow(2, 1 - p3), r * c2 >= 2 && (u3++, c2 /= 2), u3 + p3 >= s2 ? (f2 = 0, u3 = s2) : u3 + p3 >= 1 ? (f2 = (r * c2 - 1) * Math.pow(2, n), u3 = u3 + p3) : (f2 = r * Math.pow(2, p3 - 1) * Math.pow(2, n), u3 = 0));n >= 8; i[t + E5] = f2 & 255, E5 += k3, f2 /= 256, n -= 8)
        ;
      for (u3 = u3 << n | f2, l3 += n;l3 > 0; i[t + E5] = u3 & 255, E5 += k3, u3 /= 256, l3 -= 8)
        ;
      i[t + E5 - k3] |= dr2 * 128;
    };
  });
  b3 = P3((_4) => {
    var j4 = v2(), T2 = rr(), tr = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    _4.Buffer = h4;
    _4.SlowBuffer = Pr;
    _4.INSPECT_MAX_BYTES = 50;
    var N5 = 2147483647;
    _4.kMaxLength = N5;
    h4.TYPED_ARRAY_SUPPORT = Mr();
    !h4.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function Mr() {
      try {
        let i = new Uint8Array(1), r = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(r, Uint8Array.prototype), Object.setPrototypeOf(i, r), i.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(h4.prototype, "parent", { enumerable: true, get: function() {
      if (!!h4.isBuffer(this))
        return this.buffer;
    } });
    Object.defineProperty(h4.prototype, "offset", { enumerable: true, get: function() {
      if (!!h4.isBuffer(this))
        return this.byteOffset;
    } });
    function m3(i) {
      if (i > N5)
        throw new RangeError('The value "' + i + '" is invalid for option "size"');
      let r = new Uint8Array(i);
      return Object.setPrototypeOf(r, h4.prototype), r;
    }
    function h4(i, r, t) {
      if (typeof i == "number") {
        if (typeof r == "string")
          throw new TypeError('The "string" argument must be of type string. Received type number');
        return X3(i);
      }
      return or(i, r, t);
    }
    h4.poolSize = 8192;
    function or(i, r, t) {
      if (typeof i == "string")
        return kr(i, r);
      if (ArrayBuffer.isView(i))
        return Dr(i);
      if (i == null)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof i);
      if (g4(i, ArrayBuffer) || i && g4(i.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (g4(i, SharedArrayBuffer) || i && g4(i.buffer, SharedArrayBuffer)))
        return W(i, r, t);
      if (typeof i == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      let e = i.valueOf && i.valueOf();
      if (e != null && e !== i)
        return h4.from(e, r, t);
      let n = $r(i);
      if (n)
        return n;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof i[Symbol.toPrimitive] == "function")
        return h4.from(i[Symbol.toPrimitive]("string"), r, t);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof i);
    }
    h4.from = function(i, r, t) {
      return or(i, r, t);
    };
    Object.setPrototypeOf(h4.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(h4, Uint8Array);
    function ur(i) {
      if (typeof i != "number")
        throw new TypeError('"size" argument must be of type number');
      if (i < 0)
        throw new RangeError('The value "' + i + '" is invalid for option "size"');
    }
    function br2(i, r, t) {
      return ur(i), i <= 0 ? m3(i) : r !== undefined ? typeof t == "string" ? m3(i).fill(r, t) : m3(i).fill(r) : m3(i);
    }
    h4.alloc = function(i, r, t) {
      return br2(i, r, t);
    };
    function X3(i) {
      return ur(i), m3(i < 0 ? 0 : V4(i) | 0);
    }
    h4.allocUnsafe = function(i) {
      return X3(i);
    };
    h4.allocUnsafeSlow = function(i) {
      return X3(i);
    };
    function kr(i, r) {
      if ((typeof r != "string" || r === "") && (r = "utf8"), !h4.isEncoding(r))
        throw new TypeError("Unknown encoding: " + r);
      let t = hr(i, r) | 0, e = m3(t), n = e.write(i, r);
      return n !== t && (e = e.slice(0, n)), e;
    }
    function q2(i) {
      let r = i.length < 0 ? 0 : V4(i.length) | 0, t = m3(r);
      for (let e = 0;e < r; e += 1)
        t[e] = i[e] & 255;
      return t;
    }
    function Dr(i) {
      if (g4(i, Uint8Array)) {
        let r = new Uint8Array(i);
        return W(r.buffer, r.byteOffset, r.byteLength);
      }
      return q2(i);
    }
    function W(i, r, t) {
      if (r < 0 || i.byteLength < r)
        throw new RangeError('"offset" is outside of buffer bounds');
      if (i.byteLength < r + (t || 0))
        throw new RangeError('"length" is outside of buffer bounds');
      let e;
      return r === undefined && t === undefined ? e = new Uint8Array(i) : t === undefined ? e = new Uint8Array(i, r) : e = new Uint8Array(i, r, t), Object.setPrototypeOf(e, h4.prototype), e;
    }
    function $r(i) {
      if (h4.isBuffer(i)) {
        let r = V4(i.length) | 0, t = m3(r);
        return t.length === 0 || i.copy(t, 0, 0, r), t;
      }
      if (i.length !== undefined)
        return typeof i.length != "number" || J2(i.length) ? m3(0) : q2(i);
      if (i.type === "Buffer" && Array.isArray(i.data))
        return q2(i.data);
    }
    function V4(i) {
      if (i >= N5)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + N5.toString(16) + " bytes");
      return i | 0;
    }
    function Pr(i) {
      return +i != i && (i = 0), h4.alloc(+i);
    }
    h4.isBuffer = function(r) {
      return r != null && r._isBuffer === true && r !== h4.prototype;
    };
    h4.compare = function(r, t) {
      if (g4(r, Uint8Array) && (r = h4.from(r, r.offset, r.byteLength)), g4(t, Uint8Array) && (t = h4.from(t, t.offset, t.byteLength)), !h4.isBuffer(r) || !h4.isBuffer(t))
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (r === t)
        return 0;
      let e = r.length, n = t.length;
      for (let o2 = 0, u3 = Math.min(e, n);o2 < u3; ++o2)
        if (r[o2] !== t[o2]) {
          e = r[o2], n = t[o2];
          break;
        }
      return e < n ? -1 : n < e ? 1 : 0;
    };
    h4.isEncoding = function(r) {
      switch (String(r).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    h4.concat = function(r, t) {
      if (!Array.isArray(r))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (r.length === 0)
        return h4.alloc(0);
      let e;
      if (t === undefined)
        for (t = 0, e = 0;e < r.length; ++e)
          t += r[e].length;
      let n = h4.allocUnsafe(t), o2 = 0;
      for (e = 0;e < r.length; ++e) {
        let u3 = r[e];
        if (g4(u3, Uint8Array))
          o2 + u3.length > n.length ? (h4.isBuffer(u3) || (u3 = h4.from(u3)), u3.copy(n, o2)) : Uint8Array.prototype.set.call(n, u3, o2);
        else if (h4.isBuffer(u3))
          u3.copy(n, o2);
        else
          throw new TypeError('"list" argument must be an Array of Buffers');
        o2 += u3.length;
      }
      return n;
    };
    function hr(i, r) {
      if (h4.isBuffer(i))
        return i.length;
      if (ArrayBuffer.isView(i) || g4(i, ArrayBuffer))
        return i.byteLength;
      if (typeof i != "string")
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof i);
      let t = i.length, e = arguments.length > 2 && arguments[2] === true;
      if (!e && t === 0)
        return 0;
      let n = false;
      for (;; )
        switch (r) {
          case "ascii":
          case "latin1":
          case "binary":
            return t;
          case "utf8":
          case "utf-8":
            return H3(i).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return t * 2;
          case "hex":
            return t >>> 1;
          case "base64":
            return xr(i).length;
          default:
            if (n)
              return e ? -1 : H3(i).length;
            r = ("" + r).toLowerCase(), n = true;
        }
    }
    h4.byteLength = hr;
    function Or(i, r, t) {
      let e = false;
      if ((r === undefined || r < 0) && (r = 0), r > this.length || ((t === undefined || t > this.length) && (t = this.length), t <= 0) || (t >>>= 0, r >>>= 0, t <= r))
        return "";
      for (i || (i = "utf8");; )
        switch (i) {
          case "hex":
            return Jr(this, r, t);
          case "utf8":
          case "utf-8":
            return cr(this, r, t);
          case "ascii":
            return Vr(this, r, t);
          case "latin1":
          case "binary":
            return zr(this, r, t);
          case "base64":
            return Hr(this, r, t);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Kr2(this, r, t);
          default:
            if (e)
              throw new TypeError("Unknown encoding: " + i);
            i = (i + "").toLowerCase(), e = true;
        }
    }
    h4.prototype._isBuffer = true;
    function A3(i, r, t) {
      let e = i[r];
      i[r] = i[t], i[t] = e;
    }
    h4.prototype.swap16 = function() {
      let r = this.length;
      if (r % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let t = 0;t < r; t += 2)
        A3(this, t, t + 1);
      return this;
    };
    h4.prototype.swap32 = function() {
      let r = this.length;
      if (r % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let t = 0;t < r; t += 4)
        A3(this, t, t + 3), A3(this, t + 1, t + 2);
      return this;
    };
    h4.prototype.swap64 = function() {
      let r = this.length;
      if (r % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let t = 0;t < r; t += 8)
        A3(this, t, t + 7), A3(this, t + 1, t + 6), A3(this, t + 2, t + 5), A3(this, t + 3, t + 4);
      return this;
    };
    h4.prototype.toString = function() {
      let r = this.length;
      return r === 0 ? "" : arguments.length === 0 ? cr(this, 0, r) : Or.apply(this, arguments);
    };
    h4.prototype.toLocaleString = h4.prototype.toString;
    h4.prototype.equals = function(r) {
      if (!h4.isBuffer(r))
        throw new TypeError("Argument must be a Buffer");
      return this === r ? true : h4.compare(this, r) === 0;
    };
    h4.prototype.inspect = function() {
      let r = "", t = _4.INSPECT_MAX_BYTES;
      return r = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(), this.length > t && (r += " ... "), "<Buffer " + r + ">";
    };
    tr && (h4.prototype[tr] = h4.prototype.inspect);
    h4.prototype.compare = function(r, t, e, n, o2) {
      if (g4(r, Uint8Array) && (r = h4.from(r, r.offset, r.byteLength)), !h4.isBuffer(r))
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof r);
      if (t === undefined && (t = 0), e === undefined && (e = r ? r.length : 0), n === undefined && (n = 0), o2 === undefined && (o2 = this.length), t < 0 || e > r.length || n < 0 || o2 > this.length)
        throw new RangeError("out of range index");
      if (n >= o2 && t >= e)
        return 0;
      if (n >= o2)
        return -1;
      if (t >= e)
        return 1;
      if (t >>>= 0, e >>>= 0, n >>>= 0, o2 >>>= 0, this === r)
        return 0;
      let u3 = o2 - n, f2 = e - t, c2 = Math.min(u3, f2), l3 = this.slice(n, o2), s2 = r.slice(t, e);
      for (let p3 = 0;p3 < c2; ++p3)
        if (l3[p3] !== s2[p3]) {
          u3 = l3[p3], f2 = s2[p3];
          break;
        }
      return u3 < f2 ? -1 : f2 < u3 ? 1 : 0;
    };
    function fr(i, r, t, e, n) {
      if (i.length === 0)
        return -1;
      if (typeof t == "string" ? (e = t, t = 0) : t > 2147483647 ? t = 2147483647 : t < -2147483648 && (t = -2147483648), t = +t, J2(t) && (t = n ? 0 : i.length - 1), t < 0 && (t = i.length + t), t >= i.length) {
        if (n)
          return -1;
        t = i.length - 1;
      } else if (t < 0)
        if (n)
          t = 0;
        else
          return -1;
      if (typeof r == "string" && (r = h4.from(r, e)), h4.isBuffer(r))
        return r.length === 0 ? -1 : ir(i, r, t, e, n);
      if (typeof r == "number")
        return r = r & 255, typeof Uint8Array.prototype.indexOf == "function" ? n ? Uint8Array.prototype.indexOf.call(i, r, t) : Uint8Array.prototype.lastIndexOf.call(i, r, t) : ir(i, [r], t, e, n);
      throw new TypeError("val must be string, number or Buffer");
    }
    function ir(i, r, t, e, n) {
      let o2 = 1, u3 = i.length, f2 = r.length;
      if (e !== undefined && (e = String(e).toLowerCase(), e === "ucs2" || e === "ucs-2" || e === "utf16le" || e === "utf-16le")) {
        if (i.length < 2 || r.length < 2)
          return -1;
        o2 = 2, u3 /= 2, f2 /= 2, t /= 2;
      }
      function c2(s2, p3) {
        return o2 === 1 ? s2[p3] : s2.readUInt16BE(p3 * o2);
      }
      let l3;
      if (n) {
        let s2 = -1;
        for (l3 = t;l3 < u3; l3++)
          if (c2(i, l3) === c2(r, s2 === -1 ? 0 : l3 - s2)) {
            if (s2 === -1 && (s2 = l3), l3 - s2 + 1 === f2)
              return s2 * o2;
          } else
            s2 !== -1 && (l3 -= l3 - s2), s2 = -1;
      } else
        for (t + f2 > u3 && (t = u3 - f2), l3 = t;l3 >= 0; l3--) {
          let s2 = true;
          for (let p3 = 0;p3 < f2; p3++)
            if (c2(i, l3 + p3) !== c2(r, p3)) {
              s2 = false;
              break;
            }
          if (s2)
            return l3;
        }
      return -1;
    }
    h4.prototype.includes = function(r, t, e) {
      return this.indexOf(r, t, e) !== -1;
    };
    h4.prototype.indexOf = function(r, t, e) {
      return fr(this, r, t, e, true);
    };
    h4.prototype.lastIndexOf = function(r, t, e) {
      return fr(this, r, t, e, false);
    };
    function Gr(i, r, t, e) {
      t = Number(t) || 0;
      let n = i.length - t;
      e ? (e = Number(e), e > n && (e = n)) : e = n;
      let o2 = r.length;
      e > o2 / 2 && (e = o2 / 2);
      let u3;
      for (u3 = 0;u3 < e; ++u3) {
        let f2 = parseInt(r.substr(u3 * 2, 2), 16);
        if (J2(f2))
          return u3;
        i[t + u3] = f2;
      }
      return u3;
    }
    function Yr(i, r, t, e) {
      return M3(H3(r, i.length - t), i, t, e);
    }
    function jr(i, r, t, e) {
      return M3(rt2(r), i, t, e);
    }
    function qr(i, r, t, e) {
      return M3(xr(r), i, t, e);
    }
    function Wr(i, r, t, e) {
      return M3(tt2(r, i.length - t), i, t, e);
    }
    h4.prototype.write = function(r, t, e, n) {
      if (t === undefined)
        n = "utf8", e = this.length, t = 0;
      else if (e === undefined && typeof t == "string")
        n = t, e = this.length, t = 0;
      else if (isFinite(t))
        t = t >>> 0, isFinite(e) ? (e = e >>> 0, n === undefined && (n = "utf8")) : (n = e, e = undefined);
      else
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      let o2 = this.length - t;
      if ((e === undefined || e > o2) && (e = o2), r.length > 0 && (e < 0 || t < 0) || t > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      n || (n = "utf8");
      let u3 = false;
      for (;; )
        switch (n) {
          case "hex":
            return Gr(this, r, t, e);
          case "utf8":
          case "utf-8":
            return Yr(this, r, t, e);
          case "ascii":
          case "latin1":
          case "binary":
            return jr(this, r, t, e);
          case "base64":
            return qr(this, r, t, e);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Wr(this, r, t, e);
          default:
            if (u3)
              throw new TypeError("Unknown encoding: " + n);
            n = ("" + n).toLowerCase(), u3 = true;
        }
    };
    h4.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function Hr(i, r, t) {
      return r === 0 && t === i.length ? j4.fromByteArray(i) : j4.fromByteArray(i.slice(r, t));
    }
    function cr(i, r, t) {
      t = Math.min(i.length, t);
      let e = [], n = r;
      for (;n < t; ) {
        let o2 = i[n], u3 = null, f2 = o2 > 239 ? 4 : o2 > 223 ? 3 : o2 > 191 ? 2 : 1;
        if (n + f2 <= t) {
          let c2, l3, s2, p3;
          switch (f2) {
            case 1:
              o2 < 128 && (u3 = o2);
              break;
            case 2:
              c2 = i[n + 1], (c2 & 192) === 128 && (p3 = (o2 & 31) << 6 | c2 & 63, p3 > 127 && (u3 = p3));
              break;
            case 3:
              c2 = i[n + 1], l3 = i[n + 2], (c2 & 192) === 128 && (l3 & 192) === 128 && (p3 = (o2 & 15) << 12 | (c2 & 63) << 6 | l3 & 63, p3 > 2047 && (p3 < 55296 || p3 > 57343) && (u3 = p3));
              break;
            case 4:
              c2 = i[n + 1], l3 = i[n + 2], s2 = i[n + 3], (c2 & 192) === 128 && (l3 & 192) === 128 && (s2 & 192) === 128 && (p3 = (o2 & 15) << 18 | (c2 & 63) << 12 | (l3 & 63) << 6 | s2 & 63, p3 > 65535 && p3 < 1114112 && (u3 = p3));
          }
        }
        u3 === null ? (u3 = 65533, f2 = 1) : u3 > 65535 && (u3 -= 65536, e.push(u3 >>> 10 & 1023 | 55296), u3 = 56320 | u3 & 1023), e.push(u3), n += f2;
      }
      return Xr(e);
    }
    var er = 4096;
    function Xr(i) {
      let r = i.length;
      if (r <= er)
        return String.fromCharCode.apply(String, i);
      let t = "", e = 0;
      for (;e < r; )
        t += String.fromCharCode.apply(String, i.slice(e, e += er));
      return t;
    }
    function Vr(i, r, t) {
      let e = "";
      t = Math.min(i.length, t);
      for (let n = r;n < t; ++n)
        e += String.fromCharCode(i[n] & 127);
      return e;
    }
    function zr(i, r, t) {
      let e = "";
      t = Math.min(i.length, t);
      for (let n = r;n < t; ++n)
        e += String.fromCharCode(i[n]);
      return e;
    }
    function Jr(i, r, t) {
      let e = i.length;
      (!r || r < 0) && (r = 0), (!t || t < 0 || t > e) && (t = e);
      let n = "";
      for (let o2 = r;o2 < t; ++o2)
        n += it[i[o2]];
      return n;
    }
    function Kr2(i, r, t) {
      let e = i.slice(r, t), n = "";
      for (let o2 = 0;o2 < e.length - 1; o2 += 2)
        n += String.fromCharCode(e[o2] + e[o2 + 1] * 256);
      return n;
    }
    h4.prototype.slice = function(r, t) {
      let e = this.length;
      r = ~~r, t = t === undefined ? e : ~~t, r < 0 ? (r += e, r < 0 && (r = 0)) : r > e && (r = e), t < 0 ? (t += e, t < 0 && (t = 0)) : t > e && (t = e), t < r && (t = r);
      let n = this.subarray(r, t);
      return Object.setPrototypeOf(n, h4.prototype), n;
    };
    function a3(i, r, t) {
      if (i % 1 !== 0 || i < 0)
        throw new RangeError("offset is not uint");
      if (i + r > t)
        throw new RangeError("Trying to access beyond buffer length");
    }
    h4.prototype.readUintLE = h4.prototype.readUIntLE = function(r, t, e) {
      r = r >>> 0, t = t >>> 0, e || a3(r, t, this.length);
      let n = this[r], o2 = 1, u3 = 0;
      for (;++u3 < t && (o2 *= 256); )
        n += this[r + u3] * o2;
      return n;
    };
    h4.prototype.readUintBE = h4.prototype.readUIntBE = function(r, t, e) {
      r = r >>> 0, t = t >>> 0, e || a3(r, t, this.length);
      let n = this[r + --t], o2 = 1;
      for (;t > 0 && (o2 *= 256); )
        n += this[r + --t] * o2;
      return n;
    };
    h4.prototype.readUint8 = h4.prototype.readUInt8 = function(r, t) {
      return r = r >>> 0, t || a3(r, 1, this.length), this[r];
    };
    h4.prototype.readUint16LE = h4.prototype.readUInt16LE = function(r, t) {
      return r = r >>> 0, t || a3(r, 2, this.length), this[r] | this[r + 1] << 8;
    };
    h4.prototype.readUint16BE = h4.prototype.readUInt16BE = function(r, t) {
      return r = r >>> 0, t || a3(r, 2, this.length), this[r] << 8 | this[r + 1];
    };
    h4.prototype.readUint32LE = h4.prototype.readUInt32LE = function(r, t) {
      return r = r >>> 0, t || a3(r, 4, this.length), (this[r] | this[r + 1] << 8 | this[r + 2] << 16) + this[r + 3] * 16777216;
    };
    h4.prototype.readUint32BE = h4.prototype.readUInt32BE = function(r, t) {
      return r = r >>> 0, t || a3(r, 4, this.length), this[r] * 16777216 + (this[r + 1] << 16 | this[r + 2] << 8 | this[r + 3]);
    };
    h4.prototype.readBigUInt64LE = I3(function(r) {
      r = r >>> 0, C2(r, "offset");
      let t = this[r], e = this[r + 7];
      (t === undefined || e === undefined) && S2(r, this.length - 8);
      let n = t + this[++r] * 2 ** 8 + this[++r] * 2 ** 16 + this[++r] * 2 ** 24, o2 = this[++r] + this[++r] * 2 ** 8 + this[++r] * 2 ** 16 + e * 2 ** 24;
      return BigInt(n) + (BigInt(o2) << BigInt(32));
    });
    h4.prototype.readBigUInt64BE = I3(function(r) {
      r = r >>> 0, C2(r, "offset");
      let t = this[r], e = this[r + 7];
      (t === undefined || e === undefined) && S2(r, this.length - 8);
      let n = t * 2 ** 24 + this[++r] * 2 ** 16 + this[++r] * 2 ** 8 + this[++r], o2 = this[++r] * 2 ** 24 + this[++r] * 2 ** 16 + this[++r] * 2 ** 8 + e;
      return (BigInt(n) << BigInt(32)) + BigInt(o2);
    });
    h4.prototype.readIntLE = function(r, t, e) {
      r = r >>> 0, t = t >>> 0, e || a3(r, t, this.length);
      let n = this[r], o2 = 1, u3 = 0;
      for (;++u3 < t && (o2 *= 256); )
        n += this[r + u3] * o2;
      return o2 *= 128, n >= o2 && (n -= Math.pow(2, 8 * t)), n;
    };
    h4.prototype.readIntBE = function(r, t, e) {
      r = r >>> 0, t = t >>> 0, e || a3(r, t, this.length);
      let n = t, o2 = 1, u3 = this[r + --n];
      for (;n > 0 && (o2 *= 256); )
        u3 += this[r + --n] * o2;
      return o2 *= 128, u3 >= o2 && (u3 -= Math.pow(2, 8 * t)), u3;
    };
    h4.prototype.readInt8 = function(r, t) {
      return r = r >>> 0, t || a3(r, 1, this.length), this[r] & 128 ? (255 - this[r] + 1) * -1 : this[r];
    };
    h4.prototype.readInt16LE = function(r, t) {
      r = r >>> 0, t || a3(r, 2, this.length);
      let e = this[r] | this[r + 1] << 8;
      return e & 32768 ? e | 4294901760 : e;
    };
    h4.prototype.readInt16BE = function(r, t) {
      r = r >>> 0, t || a3(r, 2, this.length);
      let e = this[r + 1] | this[r] << 8;
      return e & 32768 ? e | 4294901760 : e;
    };
    h4.prototype.readInt32LE = function(r, t) {
      return r = r >>> 0, t || a3(r, 4, this.length), this[r] | this[r + 1] << 8 | this[r + 2] << 16 | this[r + 3] << 24;
    };
    h4.prototype.readInt32BE = function(r, t) {
      return r = r >>> 0, t || a3(r, 4, this.length), this[r] << 24 | this[r + 1] << 16 | this[r + 2] << 8 | this[r + 3];
    };
    h4.prototype.readBigInt64LE = I3(function(r) {
      r = r >>> 0, C2(r, "offset");
      let t = this[r], e = this[r + 7];
      (t === undefined || e === undefined) && S2(r, this.length - 8);
      let n = this[r + 4] + this[r + 5] * 2 ** 8 + this[r + 6] * 2 ** 16 + (e << 24);
      return (BigInt(n) << BigInt(32)) + BigInt(t + this[++r] * 2 ** 8 + this[++r] * 2 ** 16 + this[++r] * 2 ** 24);
    });
    h4.prototype.readBigInt64BE = I3(function(r) {
      r = r >>> 0, C2(r, "offset");
      let t = this[r], e = this[r + 7];
      (t === undefined || e === undefined) && S2(r, this.length - 8);
      let n = (t << 24) + this[++r] * 2 ** 16 + this[++r] * 2 ** 8 + this[++r];
      return (BigInt(n) << BigInt(32)) + BigInt(this[++r] * 2 ** 24 + this[++r] * 2 ** 16 + this[++r] * 2 ** 8 + e);
    });
    h4.prototype.readFloatLE = function(r, t) {
      return r = r >>> 0, t || a3(r, 4, this.length), T2.read(this, r, true, 23, 4);
    };
    h4.prototype.readFloatBE = function(r, t) {
      return r = r >>> 0, t || a3(r, 4, this.length), T2.read(this, r, false, 23, 4);
    };
    h4.prototype.readDoubleLE = function(r, t) {
      return r = r >>> 0, t || a3(r, 8, this.length), T2.read(this, r, true, 52, 8);
    };
    h4.prototype.readDoubleBE = function(r, t) {
      return r = r >>> 0, t || a3(r, 8, this.length), T2.read(this, r, false, 52, 8);
    };
    function y4(i, r, t, e, n, o2) {
      if (!h4.isBuffer(i))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (r > n || r < o2)
        throw new RangeError('"value" argument is out of bounds');
      if (t + e > i.length)
        throw new RangeError("Index out of range");
    }
    h4.prototype.writeUintLE = h4.prototype.writeUIntLE = function(r, t, e, n) {
      if (r = +r, t = t >>> 0, e = e >>> 0, !n) {
        let f2 = Math.pow(2, 8 * e) - 1;
        y4(this, r, t, e, f2, 0);
      }
      let o2 = 1, u3 = 0;
      for (this[t] = r & 255;++u3 < e && (o2 *= 256); )
        this[t + u3] = r / o2 & 255;
      return t + e;
    };
    h4.prototype.writeUintBE = h4.prototype.writeUIntBE = function(r, t, e, n) {
      if (r = +r, t = t >>> 0, e = e >>> 0, !n) {
        let f2 = Math.pow(2, 8 * e) - 1;
        y4(this, r, t, e, f2, 0);
      }
      let o2 = e - 1, u3 = 1;
      for (this[t + o2] = r & 255;--o2 >= 0 && (u3 *= 256); )
        this[t + o2] = r / u3 & 255;
      return t + e;
    };
    h4.prototype.writeUint8 = h4.prototype.writeUInt8 = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 1, 255, 0), this[t] = r & 255, t + 1;
    };
    h4.prototype.writeUint16LE = h4.prototype.writeUInt16LE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 2, 65535, 0), this[t] = r & 255, this[t + 1] = r >>> 8, t + 2;
    };
    h4.prototype.writeUint16BE = h4.prototype.writeUInt16BE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 2, 65535, 0), this[t] = r >>> 8, this[t + 1] = r & 255, t + 2;
    };
    h4.prototype.writeUint32LE = h4.prototype.writeUInt32LE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 4, 4294967295, 0), this[t + 3] = r >>> 24, this[t + 2] = r >>> 16, this[t + 1] = r >>> 8, this[t] = r & 255, t + 4;
    };
    h4.prototype.writeUint32BE = h4.prototype.writeUInt32BE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 4, 4294967295, 0), this[t] = r >>> 24, this[t + 1] = r >>> 16, this[t + 2] = r >>> 8, this[t + 3] = r & 255, t + 4;
    };
    function pr(i, r, t, e, n) {
      wr(r, e, n, i, t, 7);
      let o2 = Number(r & BigInt(4294967295));
      i[t++] = o2, o2 = o2 >> 8, i[t++] = o2, o2 = o2 >> 8, i[t++] = o2, o2 = o2 >> 8, i[t++] = o2;
      let u3 = Number(r >> BigInt(32) & BigInt(4294967295));
      return i[t++] = u3, u3 = u3 >> 8, i[t++] = u3, u3 = u3 >> 8, i[t++] = u3, u3 = u3 >> 8, i[t++] = u3, t;
    }
    function sr(i, r, t, e, n) {
      wr(r, e, n, i, t, 7);
      let o2 = Number(r & BigInt(4294967295));
      i[t + 7] = o2, o2 = o2 >> 8, i[t + 6] = o2, o2 = o2 >> 8, i[t + 5] = o2, o2 = o2 >> 8, i[t + 4] = o2;
      let u3 = Number(r >> BigInt(32) & BigInt(4294967295));
      return i[t + 3] = u3, u3 = u3 >> 8, i[t + 2] = u3, u3 = u3 >> 8, i[t + 1] = u3, u3 = u3 >> 8, i[t] = u3, t + 8;
    }
    h4.prototype.writeBigUInt64LE = I3(function(r, t = 0) {
      return pr(this, r, t, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    h4.prototype.writeBigUInt64BE = I3(function(r, t = 0) {
      return sr(this, r, t, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    h4.prototype.writeIntLE = function(r, t, e, n) {
      if (r = +r, t = t >>> 0, !n) {
        let c2 = Math.pow(2, 8 * e - 1);
        y4(this, r, t, e, c2 - 1, -c2);
      }
      let o2 = 0, u3 = 1, f2 = 0;
      for (this[t] = r & 255;++o2 < e && (u3 *= 256); )
        r < 0 && f2 === 0 && this[t + o2 - 1] !== 0 && (f2 = 1), this[t + o2] = (r / u3 >> 0) - f2 & 255;
      return t + e;
    };
    h4.prototype.writeIntBE = function(r, t, e, n) {
      if (r = +r, t = t >>> 0, !n) {
        let c2 = Math.pow(2, 8 * e - 1);
        y4(this, r, t, e, c2 - 1, -c2);
      }
      let o2 = e - 1, u3 = 1, f2 = 0;
      for (this[t + o2] = r & 255;--o2 >= 0 && (u3 *= 256); )
        r < 0 && f2 === 0 && this[t + o2 + 1] !== 0 && (f2 = 1), this[t + o2] = (r / u3 >> 0) - f2 & 255;
      return t + e;
    };
    h4.prototype.writeInt8 = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 1, 127, -128), r < 0 && (r = 255 + r + 1), this[t] = r & 255, t + 1;
    };
    h4.prototype.writeInt16LE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 2, 32767, -32768), this[t] = r & 255, this[t + 1] = r >>> 8, t + 2;
    };
    h4.prototype.writeInt16BE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 2, 32767, -32768), this[t] = r >>> 8, this[t + 1] = r & 255, t + 2;
    };
    h4.prototype.writeInt32LE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 4, 2147483647, -2147483648), this[t] = r & 255, this[t + 1] = r >>> 8, this[t + 2] = r >>> 16, this[t + 3] = r >>> 24, t + 4;
    };
    h4.prototype.writeInt32BE = function(r, t, e) {
      return r = +r, t = t >>> 0, e || y4(this, r, t, 4, 2147483647, -2147483648), r < 0 && (r = 4294967295 + r + 1), this[t] = r >>> 24, this[t + 1] = r >>> 16, this[t + 2] = r >>> 8, this[t + 3] = r & 255, t + 4;
    };
    h4.prototype.writeBigInt64LE = I3(function(r, t = 0) {
      return pr(this, r, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    h4.prototype.writeBigInt64BE = I3(function(r, t = 0) {
      return sr(this, r, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function lr(i, r, t, e, n, o2) {
      if (t + e > i.length)
        throw new RangeError("Index out of range");
      if (t < 0)
        throw new RangeError("Index out of range");
    }
    function ar(i, r, t, e, n) {
      return r = +r, t = t >>> 0, n || lr(i, r, t, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), T2.write(i, r, t, e, 23, 4), t + 4;
    }
    h4.prototype.writeFloatLE = function(r, t, e) {
      return ar(this, r, t, true, e);
    };
    h4.prototype.writeFloatBE = function(r, t, e) {
      return ar(this, r, t, false, e);
    };
    function yr(i, r, t, e, n) {
      return r = +r, t = t >>> 0, n || lr(i, r, twrite(i, r, t, e, 52, 8), t + 8;
    }
    h4.prototype.writeDoubleLE = function(r, t, e) {
      return yr(this, r, t, true, e);
    };
    h4.prototype.writeDoubleBE = function(r, t, e) {
      return yr(this, r, t, false, e);
    };
    h4.prototype.copy = function(r, t, e, n) {
      if (!h4.isBuffer(r))
        throw new TypeError("argument should be a Buffer");
      if (e || (e = 0), !n && n !== 0 && (n = this.length), t >= r.length && (t = r.length), t || (t = 0), n > 0 && n < e && (n = e), n === e || r.length === 0 || this.length === 0)
        return 0;
      if (t < 0)
        throw new RangeError("targetStart out of bounds");
      if (e < 0 || e >= this.length)
        throw new RangeError("Index out of range");
      if (n < 0)
        throw new RangeError("sourceEnd out of bounds");
      n > this.length && (n = this.length), r.length - t < n - e && (n = r.length - t + e);
      let o2 = n - e;
      return this === r && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(t, e, n) : Uint8Array.prototype.set.call(r, this.subarray(e, n), t), o2;
    };
    h4.prototype.fill = function(r, t, e, n) {
      if (typeof r == "string") {
        if (typeof t == "string" ? (n = t, t = 0, e = this.length) : typeof e == "string" && (n = e, e = this.length), n !== undefined && typeof n != "string")
          throw new TypeError("encoding must be a string");
        if (typeof n == "string" && !h4.isEncoding(n))
          throw new TypeError("Unknown encoding: " + n);
        if (r.length === 1) {
          let u3 = r.charCodeAt(0);
          (n === "utf8" && u3 < 128 || n === "latin1") && (r = u3);
        }
      } else
        typeof r == "number" ? r = r & 255 : typeof r == "boolean" && (r = Number(r));
      if (t < 0 || this.length < t || this.length < e)
        throw new RangeError("Out of range index");
      if (e <= t)
        return this;
      t = t >>> 0, e = e === undefined ? this.length : e >>> 0, r || (r = 0);
      let o2;
      if (typeof r == "number")
        for (o2 = t;o2 < e; ++o2)
          this[o2] = r;
      else {
        let u3 = h4.isBuffer(r) ? r : h4.from(r, n), f2 = u3.length;
        if (f2 === 0)
          throw new TypeError('The value "' + r + '" is invalid for argument "value"');
        for (o2 = 0;o2 < e - t; ++o2)
          this[o2 + t] = u3[o2 % f2];
      }
      return this;
    };
    var R3 = {};
    function z(i, r, t) {
      R3[i] = class extends t {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: r.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${i}]`, this.stack, delete this.name;
        }
        get code() {
          return i;
        }
        set code(n) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: n, writable: true });
        }
        toString() {
          return `${this.name} [${i}]: ${this.message}`;
        }
      };
    }
    z("ERR_BUFFER_OUT_OF_BOUNDS", function(i) {
      return i ? `${i} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError);
    z("ERR_INVALID_ARG_TYPE", function(i, r) {
      return `The "${i}" argument must be of type number. Received type ${typeof r}`;
    }, TypeError);
    z("ERR_OUT_OF_RANGE", function(i, r, t) {
      let e = `The value of "${i}" is out of range.`, n = t;
      return Number.isInteger(t) && Math.abs(t) > 2 ** 32 ? n = nr(String(t)) : typeof t == "bigint" && (n = String(t), (t > BigInt(2) ** BigInt(32) || t < -(BigInt(2) ** BigInt(32))) && (n = nr(n)), n += "n"), e += ` It must be ${r}. Received ${n}`, e;
    }, RangeError);
    function nr(i) {
      let r = "", t = i.length, e = i[0] === "-" ? 1 : 0;
      for (;t >= e + 4; t -= 3)
        r = `_${i.slice(t - 3, t)}${r}`;
      return `${i.slice(0, t)}${r}`;
    }
    function Zr2(i, r, t) {
      C2(r, "offset"), (i[r] === undefined || i[r + t] === undefined) && S2(r, i.length - (t + 1));
    }
    function wr(i, r, t, e, n, o2) {
      if (i > t || i < r) {
        let u3 = typeof r == "bigint" ? "n" : "", f2;
        throw o2 > 3 ? r === 0 || r === BigInt(0) ? f2 = `>= 0${u3} and < 2${u3} ** ${(o2 + 1) * 8}${u3}` : f2 = `>= -(2${u3} ** ${(o2 + 1) * 8 - 1}${u3}) and < 2 ** ${(o2 + 1) * 8 - 1}${u3}` : f2 = `>= ${r}${u3} and <= ${t}${u3}`, new R3.ERR_OUT_OF_RANGE("value", f2, i);
      }
      Zr2(e, n, o2);
    }
    function C2(i, r) {
      if (typeof i != "number")
        throw new R3.ERR_INVALID_ARG_TYPE(r, "number", i);
    }
    function S2(i, r, t) {
      throw Math.floor(i) !== i ? (C2(i, t), new R3.ERR_OUT_OF_RANGE(t || "offset", "an integer", i)) : r < 0 ? new R3.ERR_BUFFER_OUT_OF_BOUNDS : new R3.ERR_OUT_OF_RANGE(t || "offset", `>= ${t ? 1 : 0} and <= ${r}`, i);
    }
    var Qr = /[^+/0-9A-Za-z-_]/g;
    function vr(i) {
      if (i = i.split("=")[0], i = i.trim().replace(Qr, ""), i.length < 2)
        return "";
      for (;i.length % 4 !== 0; )
        i = i + "=";
      return i;
    }
    function H3(i, r) {
      r = r || 1 / 0;
      let t, e = i.length, n = null, o2 = [];
      for (let u3 = 0;u3 < e; ++u3) {
        if (t = i.charCodeAt(u3), t > 55295 && t < 57344) {
          if (!n) {
            if (t > 56319) {
              (r -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            } else if (u3 + 1 === e) {
              (r -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            }
            n = t;
            continue;
          }
          if (t < 56320) {
            (r -= 3) > -1 && o2.push(239, 191, 189), n = t;
            continue;
          }
          t = (n - 55296 << 10 | t - 56320) + 65536;
        } else
          n && (r -= 3) > -1 && o2.push(239, 191, 189);
        if (n = null, t < 128) {
          if ((r -= 1) < 0)
            break;
          o2.push(t);
        } else if (t < 2048) {
          if ((r -= 2) < 0)
            break;
          o2.push(t >> 6 | 192, t & 63 | 128);
        } else if (t < 65536) {
          if ((r -= 3) < 0)
            break;
          o2.push(t >> 12 | 224, t >> 6 & 63 | 128, t & 63 | 128);
        } else if (t < 1114112) {
          if ((r -= 4) < 0)
            break;
          o2.push(t >> 18 | 240, t >> 12 & 63 | 128, t >> 6 & 63 | 128, t & 63 | 128);
        } else
          throw new Error("Invalid code point");
      }
      return o2;
    }
    function rt2(i) {
      let r = [];
      for (let t = 0;t < i.length; ++t)
        r.push(i.charCodeAt(t) & 255);
      return r;
    }
    function tt2(i, r) {
      let t, e, n, o2 = [];
      for (let u3 = 0;u3 < i.length && !((r -= 2) < 0); ++u3)
        t = i.charCodeAt(u3), e = t >> 8, n = t % 256, o2.push(n), o2.push(e);
      return o2;
    }
    function xr(i) {
      return j4.toByteArray(vr(i));
    }
    function M3(i, r, t, e) {
      let n;
      for (n = 0;n < e && !(n + t >= r.length || n >= i.length); ++n)
        r[n + t] = i[n];
      return n;
    }
    function g4(i, r) {
      return i instanceof r || i != null && i.constructor != null && i.constructor.name != null && i.constructor.name === r.name;
    }
    function J2(i) {
      return i !== i;
    }
    var it = function() {
      let i = "0123456789abcdef", r = new Array(256);
      for (let t = 0;t < 16; ++t) {
        let e = t * 16;
        for (let n = 0;n < 16; ++n)
          r[e + n] = i[t] + i[n];
      }
      return r;
    }();
    function I3(i) {
      return typeof BigInt > "u" ? et : i;
    }
    function et() {
      throw new Error("BigInt not supported");
    }
  });
  w2 = {};
  Ur2(w2, { Blob: () => nt2, Buffer: () => Er.Buffer, File: () => ot, atob: () => ut, btoa: () => ht, constants: () => st2, createObjectURL: () => ft, default: () => Br2.Buffer, isAscii: () => ct2, isUtf8: () => pt2, kStringMaxLength: () => K2, resolveObjectURL: () => lt2, transcode: () => at });
  x4(w2, O3(b3()));
  Br2 = O3(b3());
  Er = O3(b3());
  K2 = 2 ** 32 - 1;
  ({ Blob: nt2, File: ot, atob: ut, btoa: ht } = globalThis);
  ({ createObjectURL: ft } = URL);
  st2 = { __proto__: null, MAX_LENGTH: K2, MAX_STRING_LENGTH: K2, BYTES_PER_ELEMENT: 1 };
  export_Buffer = Er.Buffer;
  export_default = Br2.Buffer;
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
});

// node_modules/readable-stream/lib/internal/streams/destroy.js
var require_destroy = __commonJS((exports, module) => {
  function destroy(err, cb) {
    var _this = this;
    var readableDestroyed = this._readableState && this._readableState.destroyed;
    var writableDestroyed = this._writableState && this._writableState.destroyed;
    if (readableDestroyed || writableDestroyed) {
      if (cb) {
        cb(err);
      } else if (err) {
        if (!this._writableState) {
          process.nextTick(emitErrorNT, this, err);
        } else if (!this._writableState.errorEmitted) {
          this._writableState.errorEmitted = true;
          process.nextTick(emitErrorNT, this, err);
        }
      }
      return this;
    }
    if (this._readableState) {
      this._readableState.destroyed = true;
    }
    if (this._writableState) {
      this._writableState.destroyed = true;
    }
    this._destroy(err || null, function(err2) {
      if (!cb && err2) {
        if (!_this._writableState) {
          process.nextTick(emitErrorAndCloseNT, _this, err2);
        } else if (!_this._writableState.errorEmitted) {
          _this._writableState.errorEmitted = true;
          process.nextTick(emitErrorAndCloseNT, _this, err2);
        } else {
          process.nextTick(emitCloseNT, _this);
        }
      } else if (cb) {
        process.nextTick(emitCloseNT, _this);
        cb(err2);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    });
    return this;
  }
  function emitErrorAndCloseNT(self2, err) {
    emitErrorNT(self2, err);
    emitCloseNT(self2);
  }
  function emitCloseNT(self2) {
    if (self2._writableState && !self2._writableState.emitClose)
      return;
    if (self2._readableState && !self2._readableState.emitClose)
      return;
    self2.emit("close");
  }
  function undestroy() {
    if (this._readableState) {
      this._readableState.destroyed = false;
      this._readableState.reading = false;
      this._readableState.ended = false;
      this._readableState.endEmitted = false;
    }
    if (this._writableState) {
      this._writableState.destroyed = false;
      this._writableState.ended = false;
      this._writableState.ending = false;
      this._writableState.finalCalled = false;
      this._writableState.prefinished = false;
      this._writableState.finished = false;
      this._writableState.errorEmitted = false;
    }
  }
  function emitErrorNT(self2, err) {
    self2.emit("error", err);
  }
  function errorOrDestroy(stream, err) {
    var rState = stream._readableState;
    var wState = stream._writableState;
    if (rState && rState.autoDestroy || wState && wState.autoDestroy)
      stream.destroy(err);
    else
      stream.emit("error", err);
  }
  module.exports = {
    destroy,
    undestroy,
    errorOrDestroy
  };
});

// node_modules/readable-stream/errors-browser.js
var require_errors_browser = __commonJS((exports, module) => {
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var codes = {};
  function createErrorType(code, message, Base) {
    if (!Base) {
      Base = Error;
    }
    function getMessage(arg1, arg2, arg3) {
      if (typeof message === "string") {
        return message;
      } else {
        return message(arg1, arg2, arg3);
      }
    }
    var NodeError = /* @__PURE__ */ function(_Base) {
      _inheritsLoose(NodeError2, _Base);
      function NodeError2(arg1, arg2, arg3) {
        return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
      }
      return NodeError2;
    }(Base);
    NodeError.prototype.name = Base.name;
    NodeError.prototype.code = code;
    codes[code] = NodeError;
  }
  function oneOf(expected, thing) {
    if (Array.isArray(expected)) {
      var len = expected.length;
      expected = expected.map(function(i) {
        return String(i);
      });
      if (len > 2) {
        return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1];
      } else if (len === 2) {
        return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
      } else {
        return "of ".concat(thing, " ").concat(expected[0]);
      }
    } else {
      return "of ".concat(thing, " ").concat(String(expected));
    }
  }
  function startsWith(str, search, pos) {
    return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
  }
  function endsWith(str, search, this_len) {
    if (this_len === undefined || this_len > str.length) {
      this_len = str.length;
    }
    return str.substring(this_len - search.length, this_len) === search;
  }
  function includes(str, search, start) {
    if (typeof start !== "number") {
      start = 0;
    }
    if (start + search.length > str.length) {
      return false;
    } else {
      return str.indexOf(search, start) !== -1;
    }
  }
  createErrorType("ERR_INVALID_OPT_VALUE", function(name, value) {
    return 'The value "' + value + '" is invalid for option "' + name + '"';
  }, TypeError);
  createErrorType("ERR_INVALID_ARG_TYPE", function(name, expected, actual) {
    var determiner;
    if (typeof expected === "string" && startsWith(expected, "not ")) {
      determiner = "must not be";
      expected = expected.replace(/^not /, "");
    } else {
      determiner = "must be";
    }
    var msg;
    if (endsWith(name, " argument")) {
      msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
    } else {
      var type = includes(name, ".") ? "property" : "argument";
      msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
    }
    msg += ". Received type ".concat(typeof actual);
    return msg;
  }, TypeError);
  createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
  createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function(name) {
    return "The " + name + " method is not implemented";
  });
  createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
  createErrorType("ERR_STREAM_DESTROYED", function(name) {
    return "Cannot call " + name + " after a stream was destroyed";
  });
  createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
  createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
  createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
  createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
  createErrorType("ERR_UNKNOWN_ENCODING", function(arg) {
    return "Unknown encoding: " + arg;
  }, TypeError);
  createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
  exports.codes = codes;
});

// node_modules/readable-stream/lib/internal/streams/state.js
var require_state = __commonJS((exports, module) => {
  var ERR_INVALID_OPT_VALUE = require_errors_browser().codes.ERR_INVALID_OPT_VALUE;
  function highWaterMarkFrom(options, isDuplex, duplexKey) {
    return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
  }
  function getHighWaterMark(state, options, duplexKey, isDuplex) {
    var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
    if (hwm != null) {
      if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
        var name = isDuplex ? duplexKey : "highWaterMark";
        throw new ERR_INVALID_OPT_VALUE(name, hwm);
      }
      return Math.floor(hwm);
    }
    return state.objectMode ? 16 : 16 * 1024;
  }
  module.exports = {
    getHighWaterMark
  };
});

// node_modules/inherits/inherits_browser.js
var require_inherits_browser = __commonJS((exports, module) => {
  if (typeof Object.create === "function") {
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    };
  } else {
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor;
        ctor.prototype.constructor = ctor;
      }
    };
  }
});

// node_modules/readable-stream/lib/internal/streams/buffer_list.js
var require_buffer_list = __commonJS((exports, module) => {
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys.push.apply(keys, symbols);
    }
    return keys;
  }
  function _objectSpread(target) {
    for (var i = 1;i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  var _require = (init_buffer(), __toCommonJS(exports_buffer));
  var Buffer2 = _require.Buffer;
  var _require2 = (init_util(), __toCommonJS(exports_util));
  var inspect = _require2.inspect;
  var custom = inspect && inspect.custom || "inspect";
  function copyBuffer(src, target, offset) {
    Buffer2.prototype.copy.call(src, target, offset);
  }
  module.exports = /* @__PURE__ */ function() {
    function BufferList() {
      _classCallCheck(this, BufferList);
      this.head = null;
      this.tail = null;
      this.length = 0;
    }
    _createClass(BufferList, [{
      key: "push",
      value: function push(v3) {
        var entry = {
          data: v3,
          next: null
        };
        if (this.length > 0)
          this.tail.next = entry;
        else
          this.head = entry;
        this.tail = entry;
        ++this.length;
      }
    }, {
      key: "unshift",
      value: function unshift(v3) {
        var entry = {
          data: v3,
          next: this.head
        };
        if (this.length === 0)
          this.tail = entry;
        this.head = entry;
        ++this.length;
      }
    }, {
      key: "shift",
      value: function shift() {
        if (this.length === 0)
          return;
        var ret = this.head.data;
        if (this.length === 1)
          this.head = this.tail = null;
        else
          this.head = this.head.next;
        --this.length;
        return ret;
      }
    }, {
      key: "clear",
      value: function clear() {
        this.head = this.tail = null;
        this.length = 0;
      }
    }, {
      key: "join",
      value: function join(s2) {
        if (this.length === 0)
          return "";
        var p3 = this.head;
        var ret = "" + p3.data;
        while (p3 = p3.next)
          ret += s2 + p3.data;
        return ret;
      }
    }, {
      key: "concat",
      value: function concat(n) {
        if (this.length === 0)
          return Buffer2.alloc(0);
        var ret = Buffer2.allocUnsafe(n >>> 0);
        var p3 = this.head;
        var i = 0;
        while (p3) {
          copyBuffer(p3.data, ret, i);
          i += p3.data.length;
          p3 = p3.next;
        }
        return ret;
      }
    }, {
      key: "consume",
      value: function consume(n, hasStrings) {
        var ret;
        if (n < this.head.data.length) {
          ret = this.head.data.slice(0, n);
          this.head.data = this.head.data.slice(n);
        } else if (n === this.head.data.length) {
          ret = this.shift();
        } else {
          ret = hasStrings ? this._getString(n) : this._getBuffer(n);
        }
        return ret;
      }
    }, {
      key: "first",
      value: function first() {
        return this.head.data;
      }
    }, {
      key: "_getString",
      value: function _getString(n) {
        var p3 = this.head;
        var c2 = 1;
        var ret = p3.data;
        n -= ret.length;
        while (p3 = p3.next) {
          var str = p3.data;
          var nb = n > str.length ? str.length : n;
          if (nb === str.length)
            ret += str;
          else
            ret += str.slice(0, n);
          n -= nb;
          if (n === 0) {
            if (nb === str.length) {
              ++c2;
              if (p3.next)
                this.head = p3.next;
              else
                this.head = this.tail = null;
            } else {
              this.head = p3;
              p3.data = str.slice(nb);
            }
            break;
          }
          ++c2;
        }
        this.length -= c2;
        return ret;
      }
    }, {
      key: "_getBuffer",
      value: function _getBuffer(n) {
        var ret = Buffer2.allocUnsafe(n);
        var p3 = this.head;
        var c2 = 1;
        p3.data.copy(ret);
        n -= p3.data.length;
        while (p3 = p3.next) {
          var buf = p3.data;
          var nb = n > buf.length ? buf.length : n;
          buf.copy(ret, ret.length - n, 0, nb);
          n -= nb;
          if (n === 0) {
            if (nb === buf.length) {
              ++c2;
              if (p3.next)
                this.head = p3.next;
              else
                this.head = this.tail = null;
            } else {
              this.head = p3;
              p3.data = buf.slice(nb);
            }
            break;
          }
          ++c2;
        }
        this.length -= c2;
        return ret;
      }
    }, {
      key: custom,
      value: function value(_4, options) {
        return inspect(this, _objectSpread(_objectSpread({}, options), {}, {
          depth: 0,
          customInspect: false
        }));
      }
    }]);
    return BufferList;
  }();
});

// node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS((exports, module) => {
  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
  var buffer = (init_buffer(), __toCommonJS(exports_buffer));
  var Buffer2 = buffer.Buffer;
  function copyProps(src, dst) {
    for (var key in src) {
      dst[key] = src[key];
    }
  }
  if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
    module.exports = buffer;
  } else {
    copyProps(buffer, exports);
    exports.Buffer = SafeBuffer;
  }
  function SafeBuffer(arg, encodingOrOffset, length) {
    return Buffer2(arg, encodingOrOffset, length);
  }
  SafeBuffer.prototype = Object.create(Buffer2.prototype);
  copyProps(Buffer2, SafeBuffer);
  SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === "number") {
      throw new TypeError("Argument must not be a number");
    }
    return Buffer2(arg, encodingOrOffset, length);
  };
  SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== "number") {
      throw new TypeError("Argument must be a number");
    }
    var buf = Buffer2(size);
    if (fill !== undefined) {
      if (typeof encoding === "string") {
        buf.fill(fill, encoding);
      } else {
        buf.fill(fill);
      }
    } else {
      buf.fill(0);
    }
    return buf;
  };
  SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== "number") {
      throw new TypeError("Argument must be a number");
    }
    return Buffer2(size);
  };
  SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== "number") {
      throw new TypeError("Argument must be a number");
    }
    return buffer.SlowBuffer(size);
  };
});

// node_modules/string_decoder/lib/string_decoder.js
var require_string_decoder = __commonJS((exports) => {
  var Buffer2 = require_safe_buffer().Buffer;
  var isEncoding = Buffer2.isEncoding || function(encoding) {
    encoding = "" + encoding;
    switch (encoding && encoding.toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
      case "raw":
        return true;
      default:
        return false;
    }
  };
  function _normalizeEncoding(enc) {
    if (!enc)
      return "utf8";
    var retried;
    while (true) {
      switch (enc) {
        case "utf8":
        case "utf-8":
          return "utf8";
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return "utf16le";
        case "latin1":
        case "binary":
          return "latin1";
        case "base64":
        case "ascii":
        case "hex":
          return enc;
        default:
          if (retried)
            return;
          enc = ("" + enc).toLowerCase();
          retried = true;
      }
    }
  }
  function normalizeEncoding(enc) {
    var nenc = _normalizeEncoding(enc);
    if (typeof nenc !== "string" && (Buffer2.isEncoding === isEncoding || !isEncoding(enc)))
      throw new Error("Unknown encoding: " + enc);
    return nenc || enc;
  }
  exports.StringDecoder = StringDecoder;
  function StringDecoder(encoding) {
    this.encoding = normalizeEncoding(encoding);
    var nb;
    switch (this.encoding) {
      case "utf16le":
        this.text = utf16Text;
        this.end = utf16End;
        nb = 4;
        break;
      case "utf8":
        this.fillLast = utf8FillLast;
        nb = 4;
        break;
      case "base64":
        this.text = base64Text;
        this.end = base64End;
        nb = 3;
        break;
      default:
        this.write = simpleWrite;
        this.end = simpleEnd;
        return;
    }
    this.lastNeed = 0;
    this.lastTotal = 0;
    this.lastChar = Buffer2.allocUnsafe(nb);
  }
  StringDecoder.prototype.write = function(buf) {
    if (buf.length === 0)
      return "";
    var r;
    var i;
    if (this.lastNeed) {
      r = this.fillLast(buf);
      if (r === undefined)
        return "";
      i = this.lastNeed;
      this.lastNeed = 0;
    } else {
      i = 0;
    }
    if (i < buf.length)
      return r ? r + this.text(buf, i) : this.text(buf, i);
    return r || "";
  };
  StringDecoder.prototype.end = utf8End;
  StringDecoder.prototype.text = utf8Text;
  StringDecoder.prototype.fillLast = function(buf) {
    if (this.lastNeed <= buf.length) {
      buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
      return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
    this.lastNeed -= buf.length;
  };
  function utf8CheckByte(byte) {
    if (byte <= 127)
      return 0;
    else if (byte >> 5 === 6)
      return 2;
    else if (byte >> 4 === 14)
      return 3;
    else if (byte >> 3 === 30)
      return 4;
    return byte >> 6 === 2 ? -1 : -2;
  }
  function utf8CheckIncomplete(self2, buf, i) {
    var j4 = buf.length - 1;
    if (j4 < i)
      return 0;
    var nb = utf8CheckByte(buf[j4]);
    if (nb >= 0) {
      if (nb > 0)
        self2.lastNeed = nb - 1;
      return nb;
    }
    if (--j4 < i || nb === -2)
      return 0;
    nb = utf8CheckByte(buf[j4]);
    if (nb >= 0) {
      if (nb > 0)
        self2.lastNeed = nb - 2;
      return nb;
    }
    if (--j4 < i || nb === -2)
      return 0;
    nb = utf8CheckByte(buf[j4]);
    if (nb >= 0) {
      if (nb > 0) {
        if (nb === 2)
          nb = 0;
        else
          self2.lastNeed = nb - 3;
      }
      return nb;
    }
    return 0;
  }
  function utf8CheckExtraBytes(self2, buf, p3) {
    if ((buf[0] & 192) !== 128) {
      self2.lastNeed = 0;
      return "�";
    }
    if (self2.lastNeed > 1 && buf.length > 1) {
      if ((buf[1] & 192) !== 128) {
        self2.lastNeed = 1;
        return "�";
      }
      if (self2.lastNeed > 2 && buf.length > 2) {
        if ((buf[2] & 192) !== 128) {
          self2.lastNeed = 2;
          return "�";
        }
      }
    }
  }
  function utf8FillLast(buf) {
    var p3 = this.lastTotal - this.lastNeed;
    var r = utf8CheckExtraBytes(this, buf, p3);
    if (r !== undefined)
      return r;
    if (this.lastNeed <= buf.length) {
      buf.copy(this.lastChar, p3, 0, this.lastNeed);
      return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, p3, 0, buf.length);
    this.lastNeed -= buf.length;
  }
  function utf8Text(buf, i) {
    var total = utf8CheckIncomplete(this, buf, i);
    if (!this.lastNeed)
      return buf.toString("utf8", i);
    this.lastTotal = total;
    var end = buf.length - (total - this.lastNeed);
    buf.copy(this.lastChar, 0, end);
    return buf.toString("utf8", i, end);
  }
  function utf8End(buf) {
    var r = buf && buf.length ? this.write(buf) : "";
    if (this.lastNeed)
      return r + "�";
    return r;
  }
  function utf16Text(buf, i) {
    if ((buf.length - i) % 2 === 0) {
      var r = buf.toString("utf16le", i);
      if (r) {
        var c2 = r.charCodeAt(r.length - 1);
        if (c2 >= 55296 && c2 <= 56319) {
          this.lastNeed = 2;
          this.lastTotal = 4;
          this.lastChar[0] = buf[buf.length - 2];
          this.lastChar[1] = buf[buf.length - 1];
          return r.slice(0, -1);
        }
      }
      return r;
    }
    this.lastNeed = 1;
    this.lastTotal = 2;
    this.lastChar[0] = buf[buf.length - 1];
    return buf.toString("utf16le", i, buf.length - 1);
  }
  function utf16End(buf) {
    var r = buf && buf.length ? this.write(buf) : "";
    if (this.lastNeed) {
      var end = this.lastTotal - this.lastNeed;
      return r + this.lastChar.toString("utf16le", 0, end);
    }
    return r;
  }
  function base64Text(buf, i) {
    var n = (buf.length - i) % 3;
    if (n === 0)
      return buf.toString("base64", i);
    this.lastNeed = 3 - n;
    this.lastTotal = 3;
    if (n === 1) {
      this.lastChar[0] = buf[buf.length - 1];
    } else {
      this.lastChar[0] = buf[buf.length - 2];
      this.lastChar[1] = buf[buf.length - 1];
    }
    return buf.toString("base64", i, buf.length - n);
  }
  function base64End(buf) {
    var r = buf && buf.length ? this.write(buf) : "";
    if (this.lastNeed)
      return r + this.lastChar.toString("base64", 0, 3 - this.lastNeed);
    return r;
  }
  function simpleWrite(buf) {
    return buf.toString(this.encoding);
  }
  function simpleEnd(buf) {
    return buf && buf.length ? this.write(buf) : "";
  }
});

// node_modules/readable-stream/lib/internal/streams/end-of-stream.js
var require_end_of_stream = __commonJS((exports, module) => {
  var ERR_STREAM_PREMATURE_CLOSE = require_errors_browser().codes.ERR_STREAM_PREMATURE_CLOSE;
  function once(callback) {
    var called = false;
    return function() {
      if (called)
        return;
      called = true;
      for (var _len = arguments.length, args = new Array(_len), _key = 0;_key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      callback.apply(this, args);
    };
  }
  function noop() {
  }
  function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === "function";
  }
  function eos(stream, opts, callback) {
    if (typeof opts === "function")
      return eos(stream, null, opts);
    if (!opts)
      opts = {};
    callback = once(callback || noop);
    var readable = opts.readable || opts.readable !== false && stream.readable;
    var writable = opts.writable || opts.writable !== false && stream.writable;
    var onlegacyfinish = function onlegacyfinish() {
      if (!stream.writable)
        onfinish();
    };
    var writableEnded = stream._writableState && stream._writableState.finished;
    var onfinish = function onfinish() {
      writable = false;
      writableEnded = true;
      if (!readable)
        callback.call(stream);
    };
    var readableEnded = stream._readableState && stream._readableState.endEmitted;
    var onend = function onend() {
      readable = false;
      readableEnded = true;
      if (!writable)
        callback.call(stream);
    };
    var onerror = function onerror(err) {
      callback.call(stream, err);
    };
    var onclose = function onclose() {
      var err;
      if (readable && !readableEnded) {
        if (!stream._readableState || !stream._readableState.ended)
          err = new ERR_STREAM_PREMATURE_CLOSE;
        return callback.call(stream, err);
      }
      if (writable && !writableEnded) {
        if (!stream._writableState || !stream._writableState.ended)
          err = new ERR_STREAM_PREMATURE_CLOSE;
        return callback.call(stream, err);
      }
    };
    var onrequest = function onrequest() {
      stream.req.on("finish", onfinish);
    };
    if (isRequest(stream)) {
      stream.on("complete", onfinish);
      stream.on("abort", onclose);
      if (stream.req)
        onrequest();
      else
        stream.on("request", onrequest);
    } else if (writable && !stream._writableState) {
      stream.on("end", onlegacyfinish);
      stream.on("close", onlegacyfinish);
    }
    stream.on("end", onend);
    stream.on("finish", onfinish);
    if (opts.error !== false)
      stream.on("error", onerror);
    stream.on("close", onclose);
    return function() {
      stream.removeListener("complete", onfinish);
      stream.removeListener("abort", onclose);
      stream.removeListener("request", onrequest);
      if (stream.req)
        stream.req.removeListener("finish", onfinish);
      stream.removeListener("end", onlegacyfinish);
      stream.removeListener("close", onlegacyfinish);
      stream.removeListener("finish", onfinish);
      stream.removeListener("end", onend);
      stream.removeListener("error", onerror);
      stream.removeListener("close", onclose);
    };
  }
  module.exports = eos;
});

// node_modules/readable-stream/lib/internal/streams/async_iterator.js
var require_async_iterator = __commonJS((exports, module) => {
  var _Object$setPrototypeO;
  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  var finished = require_end_of_stream();
  var kLastResolve = Symbol("lastResolve");
  var kLastReject = Symbol("lastReject");
  var kError = Symbol("error");
  var kEnded = Symbol("ended");
  var kLastPromise = Symbol("lastPromise");
  var kHandlePromise = Symbol("handlePromise");
  var kStream = Symbol("stream");
  function createIterResult(value, done) {
    return {
      value,
      done
    };
  }
  function readAndResolve(iter) {
    var resolve = iter[kLastResolve];
    if (resolve !== null) {
      var data = iter[kStream].read();
      if (data !== null) {
        iter[kLastPromise] = null;
        iter[kLastResolve] = null;
        iter[kLastReject] = null;
        resolve(createIterResult(data, false));
      }
    }
  }
  function onReadable(iter) {
    process.nextTick(readAndResolve, iter);
  }
  function wrapForNext(lastPromise, iter) {
    return function(resolve, reject) {
      lastPromise.then(function() {
        if (iter[kEnded]) {
          resolve(createIterResult(undefined, true));
          return;
        }
        iter[kHandlePromise](resolve, reject);
      }, reject);
    };
  }
  var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
  });
  var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
    get stream() {
      return this[kStream];
    },
    next: function next() {
      var _this = this;
      var error = this[kError];
      if (error !== null) {
        return Promise.reject(error);
      }
      if (this[kEnded]) {
        return Promise.resolve(createIterResult(undefined, true));
      }
      if (this[kStream].destroyed) {
        return new Promise(function(resolve, reject) {
          process.nextTick(function() {
            if (_this[kError]) {
              reject(_this[kError]);
            } else {
              resolve(createIterResult(undefined, true));
            }
          });
        });
      }
      var lastPromise = this[kLastPromise];
      var promise;
      if (lastPromise) {
        promise = new Promise(wrapForNext(lastPromise, this));
      } else {
        var data = this[kStream].read();
        if (data !== null) {
          return Promise.resolve(createIterResult(data, false));
        }
        promise = new Promise(this[kHandlePromise]);
      }
      this[kLastPromise] = promise;
      return promise;
    }
  }, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
    return this;
  }), _defineProperty(_Object$setPrototypeO, "return", function _return() {
    var _this2 = this;
    return new Promise(function(resolve, reject) {
      _this2[kStream].destroy(null, function(err) {
        if (err) {
          reject(err);
          return;
        }
        resolve(createIterResult(undefined, true));
      });
    });
  }), _Object$setPrototypeO), AsyncIteratorPrototype);
  var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
    var _Object$create;
    var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
      value: stream,
      writable: true
    }), _defineProperty(_Object$create, kLastResolve, {
      value: null,
      writable: true
    }), _defineProperty(_Object$create, kLastReject, {
      value: null,
      writable: true
    }), _defineProperty(_Object$create, kError, {
      value: null,
      writable: true
    }), _defineProperty(_Object$create, kEnded, {
      value: stream._readableState.endEmitted,
      writable: true
    }), _defineProperty(_Object$create, kHandlePromise, {
      value: function value(resolve, reject) {
        var data = iterator[kStream].read();
        if (data) {
          iterator[kLastPromise] = null;
          iterator[kLastResolve] = null;
          iterator[kLastReject] = null;
          resolve(createIterResult(data, false));
        } else {
          iterator[kLastResolve] = resolve;
          iterator[kLastReject] = reject;
        }
      },
      writable: true
    }), _Object$create));
    iterator[kLastPromise] = null;
    finished(stream, function(err) {
      if (err && err.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var reject = iterator[kLastReject];
        if (reject !== null) {
          iterator[kLastPromise] = null;
          iterator[kLastResolve] = null;
          iterator[kLastReject] = null;
          reject(err);
        }
        iterator[kError] = err;
        return;
      }
      var resolve = iterator[kLastResolve];
      if (resolve !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(undefined, true));
      }
      iterator[kEnded] = true;
    });
    stream.on("readable", onReadable.bind(null, iterator));
    return iterator;
  };
  module.exports = createReadableStreamAsyncIterator;
});

// node_modules/readable-stream/lib/internal/streams/from-browser.js
var require_from_browser = __commonJS((exports, module) => {
  module.exports = function() {
    throw new Error("Readable.from is not available in the browser");
  };
});

// node_modules/readable-stream/lib/_stream_readable.js
var require__stream_readable = __commonJS((exports, module) => {
  module.exports = Readable;
  var Duplex;
  Readable.ReadableState = ReadableState;
  var EE = (init_events(), __toCommonJS(exports_events)).EventEmitter;
  var EElistenerCount = function EElistenerCount(emitter, type) {
    return emitter.listeners(type).length;
  };
  var Stream = require_stream_browser();
  var Buffer2 = (init_buffer(), __toCommonJS(exports_buffer)).Buffer;
  var OurUint8Array = (typeof global !== "undefined" ? global : typeof window !== "undefined" ? window : typeof self !== "undefined" ? self : {}).Uint8Array || function() {
  };
  function _uint8ArrayToBuffer(chunk) {
    return Buffer2.from(chunk);
  }
  function _isUint8Array(obj) {
    return Buffer2.isBuffer(obj) || obj instanceof OurUint8Array;
  }
  var debugUtil = (init_util(), __toCommonJS(exports_util));
  var debug;
  if (debugUtil && debugUtil.debuglog) {
    debug = debugUtil.debuglog("stream");
  } else {
    debug = function debug() {
    };
  }
  var BufferList = require_buffer_list();
  var destroyImpl = require_destroy();
  var _require = require_state();
  var getHighWaterMark = _require.getHighWaterMark;
  var _require$codes = require_errors_browser().codes;
  var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
  var ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF;
  var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
  var ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
  var StringDecoder;
  var createReadableStreamAsyncIterator;
  var from;
  require_inherits_browser()(Readable, Stream);
  var errorOrDestroy = destroyImpl.errorOrDestroy;
  var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
  function prependListener(emitter, event, fn) {
    if (typeof emitter.prependListener === "function")
      return emitter.prependListener(event, fn);
    if (!emitter._events || !emitter._events[event])
      emitter.on(event, fn);
    else if (Array.isArray(emitter._events[event]))
      emitter._events[event].unshift(fn);
    else
      emitter._events[event] = [fn, emitter._events[event]];
  }
  function ReadableState(options, stream, isDuplex) {
    Duplex = Duplex || require__stream_duplex();
    options = options || {};
    if (typeof isDuplex !== "boolean")
      isDuplex = stream instanceof Duplex;
    this.objectMode = !!options.objectMode;
    if (isDuplex)
      this.objectMode = this.objectMode || !!options.readableObjectMode;
    this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex);
    this.buffer = new BufferList;
    this.length = 0;
    this.pipes = null;
    this.pipesCount = 0;
    this.flowing = null;
    this.ended = false;
    this.endEmitted = false;
    this.reading = false;
    this.sync = true;
    this.needReadable = false;
    this.emittedReadable = false;
    this.readableListening = false;
    this.resumeScheduled = false;
    this.paused = true;
    this.emitClose = options.emitClose !== false;
    this.autoDestroy = !!options.autoDestroy;
    this.destroyed = false;
    this.defaultEncoding = options.defaultEncoding || "utf8";
    this.awaitDrain = 0;
    this.readingMore = false;
    this.decoder = null;
    this.encoding = null;
    if (options.encoding) {
      if (!StringDecoder)
        StringDecoder = require_string_decoder().StringDecoder;
      this.decoder = new StringDecoder(options.encoding);
      this.encoding = options.encoding;
    }
  }
  function Readable(options) {
    Duplex = Duplex || require__stream_duplex();
    if (!(this instanceof Readable))
      return new Readable(options);
    var isDuplex = this instanceof Duplex;
    this._readableState = new ReadableState(options, this, isDuplex);
    this.readable = true;
    if (options) {
      if (typeof options.read === "function")
        this._read = options.read;
      if (typeof options.destroy === "function")
        this._destroy = options.destroy;
    }
    Stream.call(this);
  }
  Object.defineProperty(Readable.prototype, "destroyed", {
    enumerable: false,
    get: function get() {
      if (this._readableState === undefined) {
        return false;
      }
      return this._readableState.destroyed;
    },
    set: function set(value) {
      if (!this._readableState) {
        return;
      }
      this._readableState.destroyed = value;
    }
  });
  Readable.prototype.destroy = destroyImpl.destroy;
  Readable.prototype._undestroy = destroyImpl.undestroy;
  Readable.prototype._destroy = function(err, cb) {
    cb(err);
  };
  Readable.prototype.push = function(chunk, encoding) {
    var state = this._readableState;
    var skipChunkCheck;
    if (!state.objectMode) {
      if (typeof chunk === "string") {
        encoding = encoding || state.defaultEncoding;
        if (encoding !== state.encoding) {
          chunk = Buffer2.from(chunk, encoding);
          encoding = "";
        }
        skipChunkCheck = true;
      }
    } else {
      skipChunkCheck = true;
    }
    return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
  };
  Readable.prototype.unshift = function(chunk) {
    return readableAddChunk(this, chunk, null, true, false);
  };
  function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
    debug("readableAddChunk", chunk);
    var state = stream._readableState;
    if (chunk === null) {
      state.reading = false;
      onEofChunk(stream, state);
    } else {
      var er;
      if (!skipChunkCheck)
        er = chunkInvalid(state, chunk);
      if (er) {
        errorOrDestroy(stream, er);
      } else if (state.objectMode || chunk && chunk.length > 0) {
        if (typeof chunk !== "string" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer2.prototype) {
          chunk = _uint8ArrayToBuffer(chunk);
        }
        if (addToFront) {
          if (state.endEmitted)
            errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT);
          else
            addChunk(stream, state, chunk, true);
        } else if (state.ended) {
          errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF);
        } else if (state.destroyed) {
          return false;
        } else {
          state.reading = false;
          if (state.decoder && !encoding) {
            chunk = state.decoder.write(chunk);
            if (state.objectMode || chunk.length !== 0)
              addChunk(stream, state, chunk, false);
            else
              maybeReadMore(stream, state);
          } else {
            addChunk(stream, state, chunk, false);
          }
        }
      } else if (!addToFront) {
        state.reading = false;
        maybeReadMore(stream, state);
      }
    }
    return !state.ended && (state.length < state.highWaterMark || state.length === 0);
  }
  function addChunk(stream, state, chunk, addToFront) {
    if (state.flowing && state.length === 0 && !state.sync) {
      state.awaitDrain = 0;
      stream.emit("data", chunk);
    } else {
      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront)
        state.buffer.unshift(chunk);
      else
        state.buffer.push(chunk);
      if (state.needReadable)
        emitReadable(stream);
    }
    maybeReadMore(stream, state);
  }
  function chunkInvalid(state, chunk) {
    var er;
    if (!_isUint8Array(chunk) && typeof chunk !== "string" && chunk !== undefined && !state.objectMode) {
      er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk);
    }
    return er;
  }
  Readable.prototype.isPaused = function() {
    return this._readableState.flowing === false;
  };
  Readable.prototype.setEncoding = function(enc) {
    if (!StringDecoder)
      StringDecoder = require_string_decoder().StringDecoder;
    var decoder = new StringDecoder(enc);
    this._readableState.decoder = decoder;
    this._readableState.encoding = this._readableState.decoder.encoding;
    var p3 = this._readableState.buffer.head;
    var content = "";
    while (p3 !== null) {
      content += decoder.write(p3.data);
      p3 = p3.next;
    }
    this._readableState.buffer.clear();
    if (content !== "")
      this._readableState.buffer.push(content);
    this._readableState.length = content.length;
    return this;
  };
  var MAX_HWM = 1073741824;
  function computeNewHighWaterMark(n) {
    if (n >= MAX_HWM) {
      n = MAX_HWM;
    } else {
      n--;
      n |= n >>> 1;
      n |= n >>> 2;
      n |= n >>> 4;
      n |= n >>> 8;
      n |= n >>> 16;
      n++;
    }
    return n;
  }
  function howMuchToRead(n, state) {
    if (n <= 0 || state.length === 0 && state.ended)
      return 0;
    if (state.objectMode)
      return 1;
    if (n !== n) {
      if (state.flowing && state.length)
        return state.buffer.head.data.length;
      else
        return state.length;
    }
    if (n > state.highWaterMark)
      state.highWaterMark = computeNewHighWaterMark(n);
    if (n <= state.length)
      return n;
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    }
    return state.length;
  }
  Readable.prototype.read = function(n) {
    debug("read", n);
    n = parseInt(n, 10);
    var state = this._readableState;
    var nOrig = n;
    if (n !== 0)
      state.emittedReadable = false;
    if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
      debug("read: emitReadable", state.length, state.ended);
      if (state.length === 0 && state.ended)
        endReadable(this);
      else
        emitReadable(this);
      return null;
    }
    n = howMuchToRead(n, state);
    if (n === 0 && state.ended) {
      if (state.length === 0)
        endReadable(this);
      return null;
    }
    var doRead = state.needReadable;
    debug("need readable", doRead);
    if (state.length === 0 || state.length - n < state.highWaterMark) {
      doRead = true;
      debug("length less than watermark", doRead);
    }
    if (state.ended || state.reading) {
      doRead = false;
      debug("reading or ended", doRead);
    } else if (doRead) {
      debug("do read");
      state.reading = true;
      state.sync = true;
      if (state.length === 0)
        state.needReadable = true;
      this._read(state.highWaterMark);
      state.sync = false;
      if (!state.reading)
        n = howMuchToRead(nOrig, state);
    }
    var ret;
    if (n > 0)
      ret = fromList(n, state);
    else
      ret = null;
    if (ret === null) {
      state.needReadable = state.length <= state.highWaterMark;
      n = 0;
    } else {
      state.length -= n;
      state.awaitDrain = 0;
    }
    if (state.length === 0) {
      if (!state.ended)
        state.needReadable = true;
      if (nOrig !== n && state.ended)
        endReadable(this);
    }
    if (ret !== null)
      this.emit("data", ret);
    return ret;
  };
  function onEofChunk(stream, state) {
    debug("onEofChunk");
    if (state.ended)
      return;
    if (state.decoder) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) {
        state.buffer.push(chunk);
        state.length += state.objectMode ? 1 : chunk.length;
      }
    }
    state.ended = true;
    if (state.sync) {
      emitReadable(stream);
    } else {
      state.needReadable = false;
      if (!state.emittedReadable) {
        state.emittedReadable = true;
        emitReadable_(stream);
      }
    }
  }
  function emitReadable(stream) {
    var state = stream._readableState;
    debug("emitReadable", state.needReadable, state.emittedReadable);
    state.needReadable = false;
    if (!state.emittedReadable) {
      debug("emitReadable", state.flowing);
      state.emittedReadable = true;
      process.nextTick(emitReadable_, stream);
    }
  }
  function emitReadable_(stream) {
    var state = stream._readableState;
    debug("emitReadable_", state.destroyed, state.length, state.ended);
    if (!state.destroyed && (state.length || state.ended)) {
      stream.emit("readable");
      state.emittedReadable = false;
    }
    state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
    flow(stream);
  }
  function maybeReadMore(stream, state) {
    if (!state.readingMore) {
      state.readingMore = true;
      process.nextTick(maybeReadMore_, stream, state);
    }
  }
  function maybeReadMore_(stream, state) {
    while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
      var len = state.length;
      debug("maybeReadMore read 0");
      stream.read(0);
      if (len === state.length)
        break;
    }
    state.readingMore = false;
  }
  Readable.prototype._read = function(n) {
    errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
  };
  Readable.prototype.pipe = function(dest, pipeOpts) {
    var src = this;
    var state = this._readableState;
    switch (state.pipesCount) {
      case 0:
        state.pipes = dest;
        break;
      case 1:
        state.pipes = [state.pipes, dest];
        break;
      default:
        state.pipes.push(dest);
        break;
    }
    state.pipesCount += 1;
    debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
    var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
    var endFn = doEnd ? onend : unpipe;
    if (state.endEmitted)
      process.nextTick(endFn);
    else
      src.once("end", endFn);
    dest.on("unpipe", onunpipe);
    function onunpipe(readable, unpipeInfo) {
      debug("onunpipe");
      if (readable === src) {
        if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
          unpipeInfo.hasUnpiped = true;
          cleanup();
        }
      }
    }
    function onend() {
      debug("onend");
      dest.end();
    }
    var ondrain = pipeOnDrain(src);
    dest.on("drain", ondrain);
    var cleanedUp = false;
    function cleanup() {
      debug("cleanup");
      dest.removeListener("close", onclose);
      dest.removeListener("finish", onfinish);
      dest.removeListener("drain", ondrain);
      dest.removeListener("error", onerror);
      dest.removeListener("unpipe", onunpipe);
      src.removeListener("end", onend);
      src.removeListener("end", unpipe);
      src.removeListener("data", ondata);
      cleanedUp = true;
      if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
        ondrain();
    }
    src.on("data", ondata);
    function ondata(chunk) {
      debug("ondata");
      var ret = dest.write(chunk);
      debug("dest.write", ret);
      if (ret === false) {
        if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
          debug("false write response, pause", state.awaitDrain);
          state.awaitDrain++;
        }
        src.pause();
      }
    }
    function onerror(er) {
      debug("onerror", er);
      unpipe();
      dest.removeListener("error", onerror);
      if (EElistenerCount(dest, "error") === 0)
        errorOrDestroy(dest, er);
    }
    prependListener(dest, "error", onerror);
    function onclose() {
      dest.removeListener("finish", onfinish);
      unpipe();
    }
    dest.once("close", onclose);
    function onfinish() {
      debug("onfinish");
      dest.removeListener("close", onclose);
      unpipe();
    }
    dest.once("finish", onfinish);
    function unpipe() {
      debug("unpipe");
      src.unpipe(dest);
    }
    dest.emit("pipe", src);
    if (!state.flowing) {
      debug("pipe resume");
      src.resume();
    }
    return dest;
  };
  function pipeOnDrain(src) {
    return function pipeOnDrainFunctionResult() {
      var state = src._readableState;
      debug("pipeOnDrain", state.awaitDrain);
      if (state.awaitDrain)
        state.awaitDrain--;
      if (state.awaitDrain === 0 && EElistenerCount(src, "data")) {
        state.flowing = true;
        flow(src);
      }
    };
  }
  Readable.prototype.unpipe = function(dest) {
    var state = this._readableState;
    var unpipeInfo = {
      hasUnpiped: false
    };
    if (state.pipesCount === 0)
      return this;
    if (state.pipesCount === 1) {
      if (dest && dest !== state.pipes)
        return this;
      if (!dest)
        dest = state.pipes;
      state.pipes = null;
      state.pipesCount = 0;
      state.flowing = false;
      if (dest)
        dest.emit("unpipe", this, unpipeInfo);
      return this;
    }
    if (!dest) {
      var dests = state.pipes;
      var len = state.pipesCount;
      state.pipes = null;
      state.pipesCount = 0;
      state.flowing = false;
      for (var i = 0;i < len; i++)
        dests[i].emit("unpipe", this, {
          hasUnpiped: false
        });
      return this;
    }
    var index = indexOf(state.pipes, dest);
    if (index === -1)
      return this;
    state.pipes.splice(index, 1);
    state.pipesCount -= 1;
    if (state.pipesCount === 1)
      state.pipes = state.pipes[0];
    dest.emit("unpipe", this, unpipeInfo);
    return this;
  };
  Readable.prototype.on = function(ev, fn) {
    var res = Stream.prototype.on.call(this, ev, fn);
    var state = this._readableState;
    if (ev === "data") {
      state.readableListening = this.listenerCount("readable") > 0;
      if (state.flowing !== false)
        this.resume();
    } else if (ev === "readable") {
      if (!state.endEmitted && !state.readableListening) {
        state.readableListening = state.needReadable = true;
        state.flowing = false;
        state.emittedReadable = false;
        debug("on readable", state.length, state.reading);
        if (state.length) {
          emitReadable(this);
        } else if (!state.reading) {
          process.nextTick(nReadingNextTick, this);
        }
      }
    }
    return res;
  };
  Readable.prototype.addListener = Readable.prototype.on;
  Readable.prototype.removeListener = function(ev, fn) {
    var res = Stream.prototype.removeListener.call(this, ev, fn);
    if (ev === "readable") {
      process.nextTick(updateReadableListening, this);
    }
    return res;
  };
  Readable.prototype.removeAllListeners = function(ev) {
    var res = Stream.prototype.removeAllListeners.apply(this, arguments);
    if (ev === "readable" || ev === undefined) {
      process.nextTick(updateReadableListening, this);
    }
    return res;
  };
  function updateReadableListening(self2) {
    var state = self2._readableState;
    state.readableListening = self2.listenerCount("readable") > 0;
    if (state.resumeScheduled && !state.paused) {
      state.flowing = true;
    } else if (self2.listenerCount("data") > 0) {
      self2.resume();
    }
  }
  function nReadingNextTick(self2) {
    debug("readable nexttick read 0");
    self2.read(0);
  }
  Readable.prototype.resume = function() {
    var state = this._readableState;
    if (!state.flowing) {
      debug("resume");
      state.flowing = !state.readableListening;
      resume(this, state);
    }
    state.paused = false;
    return this;
  };
  function resume(stream, state) {
    if (!state.resumeScheduled) {
      state.resumeScheduled = true;
      process.nextTick(resume_, stream, state);
    }
  }
  function resume_(stream, state) {
    debug("resume", state.reading);
    if (!state.reading) {
      stream.read(0);
    }
    state.resumeScheduled = false;
    stream.emit("resume");
    flow(stream);
    if (state.flowing && !state.reading)
      stream.read(0);
  }
  Readable.prototype.pause = function() {
    debug("call pause flowing=%j", this._readableState.flowing);
    if (this._readableState.flowing !== false) {
      debug("pause");
      this._readableState.flowing = false;
      this.emit("pause");
    }
    this._readableState.paused = true;
    return this;
  };
  function flow(stream) {
    var state = stream._readableState;
    debug("flow", state.flowing);
    while (state.flowing && stream.read() !== null)
      ;
  }
  Readable.prototype.wrap = function(stream) {
    var _this = this;
    var state = this._readableState;
    var paused = false;
    stream.on("end", function() {
      debug("wrapped end");
      if (state.decoder && !state.ended) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length)
          _this.push(chunk);
      }
      _this.push(null);
    });
    stream.on("data", function(chunk) {
      debug("wrapped data");
      if (state.decoder)
        chunk = state.decoder.write(chunk);
      if (state.objectMode && (chunk === null || chunk === undefined))
        return;
      else if (!state.objectMode && (!chunk || !chunk.length))
        return;
      var ret = _this.push(chunk);
      if (!ret) {
        paused = true;
        stream.pause();
      }
    });
    for (var i in stream) {
      if (this[i] === undefined && typeof stream[i] === "function") {
        this[i] = function methodWrap(method) {
          return function methodWrapReturnFunction() {
            return stream[method].apply(stream, arguments);
          };
        }(i);
      }
    }
    for (var n = 0;n < kProxyEvents.length; n++) {
      stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
    }
    this._read = function(n2) {
      debug("wrapped _read", n2);
      if (paused) {
        paused = false;
        stream.resume();
      }
    };
    return this;
  };
  if (typeof Symbol === "function") {
    Readable.prototype[Symbol.asyncIterator] = function() {
      if (createReadableStreamAsyncIterator === undefined) {
        createReadableStreamAsyncIterator = require_async_iterator();
      }
      return createReadableStreamAsyncIterator(this);
    };
  }
  Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
    enumerable: false,
    get: function get() {
      return this._readableState.highWaterMark;
    }
  });
  Object.defineProperty(Readable.prototype, "readableBuffer", {
    enumerable: false,
    get: function get() {
      return this._readableState && this._readableState.buffer;
    }
  });
  Object.defineProperty(Readable.prototype, "readableFlowing", {
    enumerable: false,
    get: function get() {
      return this._readableState.flowing;
    },
    set: function set(state) {
      if (this._readableState) {
        this._readableState.flowing = state;
      }
    }
  });
  Readable._fromList = fromList;
  Object.defineProperty(Readable.prototype, "readableLength", {
    enumerable: false,
    get: function get() {
      return this._readableState.length;
    }
  });
  function fromList(n, state) {
    if (state.length === 0)
      return null;
    var ret;
    if (state.objectMode)
      ret = state.buffer.shift();
    else if (!n || n >= state.length) {
      if (state.decoder)
        ret = state.buffer.join("");
      else if (state.buffer.length === 1)
        ret = state.buffer.first();
      else
        ret = state.buffer.concat(state.length);
      state.buffer.clear();
    } else {
      ret = state.buffer.consume(n, state.decoder);
    }
    return ret;
  }
  function endReadable(stream) {
    var state = stream._readableState;
    debug("endReadable", state.endEmitted);
    if (!state.endEmitted) {
      state.ended = true;
      process.nextTick(endReadableNT, state, stream);
    }
  }
  function endReadableNT(state, stream) {
    debug("endReadableNT", state.endEmitted, state.length);
    if (!state.endEmitted && state.length === 0) {
      state.endEmitted = true;
      stream.readable = false;
      stream.emit("end");
      if (state.autoDestroy) {
        var wState = stream._writableState;
        if (!wState || wState.autoDestroy && wState.finished) {
          stream.destroy();
        }
      }
    }
  }
  if (typeof Symbol === "function") {
    Readable.from = function(iterable, opts) {
      if (from === undefined) {
        from = require_from_browser();
      }
      return from(Readable, iterable, opts);
    };
  }
  function indexOf(xs, x5) {
    for (var i = 0, l3 = xs.length;i < l3; i++) {
      if (xs[i] === x5)
        return i;
    }
    return -1;
  }
});

// node_modules/readable-stream/lib/_stream_duplex.js
var require__stream_duplex = __commonJS((exports, module) => {
  var objectKeys = Object.keys || function(obj) {
    var keys2 = [];
    for (var key in obj)
      keys2.push(key);
    return keys2;
  };
  module.exports = Duplex;
  var Readable = require__stream_readable();
  var Writable = require__stream_writable();
  require_inherits_browser()(Duplex, Readable);
  {
    keys = objectKeys(Writable.prototype);
    for (v3 = 0;v3 < keys.length; v3++) {
      method = keys[v3];
      if (!Duplex.prototype[method])
        Duplex.prototype[method] = Writable.prototype[method];
    }
  }
  var keys;
  var method;
  var v3;
  function Duplex(options) {
    if (!(this instanceof Duplex))
      return new Duplex(options);
    Readable.call(this, options);
    Writable.call(this, options);
    this.allowHalfOpen = true;
    if (options) {
      if (options.readable === false)
        this.readable = false;
      if (options.writable === false)
        this.writable = false;
      if (options.allowHalfOpen === false) {
        this.allowHalfOpen = false;
        this.once("end", onend);
      }
    }
  }
  Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
    enumerable: false,
    get: function get() {
      return this._writableState.highWaterMark;
    }
  });
  Object.defineProperty(Duplex.prototype, "writableBuffer", {
    enumerable: false,
    get: function get() {
      return this._writableState && this._writableState.getBuffer();
    }
  });
  Object.defineProperty(Duplex.prototype, "writableLength", {
    enumerable: false,
    get: function get() {
      return this._writableState.length;
    }
  });
  function onend() {
    if (this._writableState.ended)
      return;
    process.nextTick(onEndNT, this);
  }
  function onEndNT(self2) {
    self2.end();
  }
  Object.defineProperty(Duplex.prototype, "destroyed", {
    enumerable: false,
    get: function get() {
      if (this._readableState === undefined || this._writableState === undefined) {
        return false;
      }
      return this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function set(value) {
      if (this._readableState === undefined || this._writableState === undefined) {
        return;
      }
      this._readableState.destroyed = value;
      this._writableState.destroyed = value;
    }
  });
});

// node_modules/readable-stream/lib/_stream_writable.js
var require__stream_writable = __commonJS((exports, module) => {
  module.exports = Writable;
  function CorkedRequest(state) {
    var _this = this;
    this.next = null;
    this.entry = null;
    this.finish = function() {
      onCorkedFinish(_this, state);
    };
  }
  var Duplex;
  Writable.WritableState = WritableState;
  var internalUtil = {
    deprecate: require_browser3()
  };
  var Stream = require_stream_browser();
  var Buffer2 = (init_buffer(), __toCommonJS(exports_buffer)).Buffer;
  var OurUint8Array = (typeof global !== "undefined" ? global : typeof window !== "undefined" ? window : typeof self !== "undefined" ? self : {}).Uint8Array || function() {
  };
  function _uint8ArrayToBuffer(chunk) {
    return Buffer2.from(chunk);
  }
  function _isUint8Array(obj) {
    return Buffer2.isBuffer(obj) || obj instanceof OurUint8Array;
  }
  var destroyImpl = require_destroy();
  var _require = require_state();
  var getHighWaterMark = _require.getHighWaterMark;
  var _require$codes = require_errors_browser().codes;
  var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
  var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
  var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
  var ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE;
  var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
  var ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES;
  var ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END;
  var ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
  var errorOrDestroy = destroyImpl.errorOrDestroy;
  require_inherits_browser()(Writable, Stream);
  function nop() {
  }
  function WritableState(options, stream, isDuplex) {
    Duplex = Duplex || require__stream_duplex();
    options = options || {};
    if (typeof isDuplex !== "boolean")
      isDuplex = stream instanceof Duplex;
    this.objectMode = !!options.objectMode;
    if (isDuplex)
      this.objectMode = this.objectMode || !!options.writableObjectMode;
    this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex);
    this.finalCalled = false;
    this.needDrain = false;
    this.ending = false;
    this.ended = false;
    this.finished = false;
    this.destroyed = false;
    var noDecode = options.decodeStrings === false;
    this.decodeStrings = !noDecode;
    this.defaultEncoding = options.defaultEncoding || "utf8";
    this.length = 0;
    this.writing = false;
    this.corked = 0;
    this.sync = true;
    this.bufferProcessing = false;
    this.onwrite = function(er) {
      onwrite(stream, er);
    };
    this.writecb = null;
    this.writelen = 0;
    this.bufferedRequest = null;
    this.lastBufferedRequest = null;
    this.pendingcb = 0;
    this.prefinished = false;
    this.errorEmitted = false;
    this.emitClose = options.emitClose !== false;
    this.autoDestroy = !!options.autoDestroy;
    this.bufferedRequestCount = 0;
    this.corkedRequestsFree = new CorkedRequest(this);
  }
  WritableState.prototype.getBuffer = function getBuffer() {
    var current = this.bufferedRequest;
    var out = [];
    while (current) {
      out.push(current);
      current = current.next;
    }
    return out;
  };
  (function() {
    try {
      Object.defineProperty(WritableState.prototype, "buffer", {
        get: internalUtil.deprecate(function writableStateBufferGetter() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer " + "instead.", "DEP0003")
      });
    } catch (_4) {
    }
  })();
  var realHasInstance;
  if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
    realHasInstance = Function.prototype[Symbol.hasInstance];
    Object.defineProperty(Writable, Symbol.hasInstance, {
      value: function value(object) {
        if (realHasInstance.call(this, object))
          return true;
        if (this !== Writable)
          return false;
        return object && object._writableState instanceof WritableState;
      }
    });
  } else {
    realHasInstance = function realHasInstance(object) {
      return object instanceof this;
    };
  }
  function Writable(options) {
    Duplex = Duplex || require__stream_duplex();
    var isDuplex = this instanceof Duplex;
    if (!isDuplex && !realHasInstance.call(Writable, this))
      return new Writable(options);
    this._writableState = new WritableState(options, this, isDuplex);
    this.writable = true;
    if (options) {
      if (typeof options.write === "function")
        this._write = options.write;
      if (typeof options.writev === "function")
        this._writev = options.writev;
      if (typeof options.destroy === "function")
        this._destroy = options.destroy;
      if (typeof options.final === "function")
        this._final = options.final;
    }
    Stream.call(this);
  }
  Writable.prototype.pipe = function() {
    errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE);
  };
  function writeAfterEnd(stream, cb) {
    var er = new ERR_STREAM_WRITE_AFTER_END;
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
  }
  function validChunk(stream, state, chunk, cb) {
    var er;
    if (chunk === null) {
      er = new ERR_STREAM_NULL_VALUES;
    } else if (typeof chunk !== "string" && !state.objectMode) {
      er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk);
    }
    if (er) {
      errorOrDestroy(stream, er);
      process.nextTick(cb, er);
      return false;
    }
    return true;
  }
  Writable.prototype.write = function(chunk, encoding, cb) {
    var state = this._writableState;
    var ret = false;
    var isBuf = !state.objectMode && _isUint8Array(chunk);
    if (isBuf && !Buffer2.isBuffer(chunk)) {
      chunk = _uint8ArrayToBuffer(chunk);
    }
    if (typeof encoding === "function") {
      cb = encoding;
      encoding = null;
    }
    if (isBuf)
      encoding = "buffer";
    else if (!encoding)
      encoding = state.defaultEncoding;
    if (typeof cb !== "function")
      cb = nop;
    if (state.ending)
      writeAfterEnd(this, cb);
    else if (isBuf || validChunk(this, state, chunk, cb)) {
      state.pendingcb++;
      ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
    }
    return ret;
  };
  Writable.prototype.cork = function() {
    this._writableState.corked++;
  };
  Writable.prototype.uncork = function() {
    var state = this._writableState;
    if (state.corked) {
      state.corked--;
      if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest)
        clearBuffer(this, state);
    }
  };
  Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
    if (typeof encoding === "string")
      encoding = encoding.toLowerCase();
    if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
      throw new ERR_UNKNOWN_ENCODING(encoding);
    this._writableState.defaultEncoding = encoding;
    return this;
  };
  Object.defineProperty(Writable.prototype, "writableBuffer", {
    enumerable: false,
    get: function get() {
      return this._writableState && this._writableState.getBuffer();
    }
  });
  function decodeChunk(state, chunk, encoding) {
    if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
      chunk = Buffer2.from(chunk, encoding);
    }
    return chunk;
  }
  Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
    enumerable: false,
    get: function get() {
      return this._writableState.highWaterMark;
    }
  });
  function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
    if (!isBuf) {
      var newChunk = decodeChunk(state, chunk, encoding);
      if (chunk !== newChunk) {
        isBuf = true;
        encoding = "buffer";
        chunk = newChunk;
      }
    }
    var len = state.objectMode ? 1 : chunk.length;
    state.length += len;
    var ret = state.length < state.highWaterMark;
    if (!ret)
      state.needDrain = true;
    if (state.writing || state.corked) {
      var last = state.lastBufferedRequest;
      state.lastBufferedRequest = {
        chunk,
        encoding,
        isBuf,
        callback: cb,
        next: null
      };
      if (last) {
        last.next = state.lastBufferedRequest;
      } else {
        state.bufferedRequest = state.lastBufferedRequest;
      }
      state.bufferedRequestCount += 1;
    } else {
      doWrite(stream, state, false, len, chunk, encoding, cb);
    }
    return ret;
  }
  function doWrite(stream, state, writev, len, chunk, encoding, cb) {
    state.writelen = len;
    state.writecb = cb;
    state.writing = true;
    state.sync = true;
    if (state.destroyed)
      state.onwrite(new ERR_STREAM_DESTROYED("write"));
    else if (writev)
      stream._writev(chunk, state.onwrite);
    else
      stream._write(chunk, encoding, state.onwrite);
    state.sync = false;
  }
  function onwriteError(stream, state, sync, er, cb) {
    --state.pendingcb;
    if (sync) {
      process.nextTick(cb, er);
      process.nextTick(finishMaybe, stream, state);
      stream._writableState.errorEmitted = true;
      errorOrDestroy(stream, er);
    } else {
      cb(er);
      stream._writableState.errorEmitted = true;
      errorOrDestroy(stream, er);
      finishMaybe(stream, state);
    }
  }
  function onwriteStateUpdate(state) {
    state.writing = false;
    state.writecb = null;
    state.length -= state.writelen;
    state.writelen = 0;
  }
  function onwrite(stream, er) {
    var state = stream._writableState;
    var sync = state.sync;
    var cb = state.writecb;
    if (typeof cb !== "function")
      throw new ERR_MULTIPLE_CALLBACK;
    onwriteStateUpdate(state);
    if (er)
      onwriteError(stream, state, sync, er, cb);
    else {
      var finished = needFinish(state) || stream.destroyed;
      if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
        clearBuffer(stream, state);
      }
      if (sync) {
        process.nextTick(afterWrite, stream, state, finished, cb);
      } else {
        afterWrite(stream, state, finished, cb);
      }
    }
  }
  function afterWrite(stream, state, finished, cb) {
    if (!finished)
      onwriteDrain(stream, state);
    state.pendingcb--;
    cb();
    finishMaybe(stream, state);
  }
  function onwriteDrain(stream, state) {
    if (state.length === 0 && state.needDrain) {
      state.needDrain = false;
      stream.emit("drain");
    }
  }
  function clearBuffer(stream, state) {
    state.bufferProcessing = true;
    var entry = state.bufferedRequest;
    if (stream._writev && entry && entry.next) {
      var l3 = state.bufferedRequestCount;
      var buffer = new Array(l3);
      var holder = state.corkedRequestsFree;
      holder.entry = entry;
      var count = 0;
      var allBuffers = true;
      while (entry) {
        buffer[count] = entry;
        if (!entry.isBuf)
          allBuffers = false;
        entry = entry.next;
        count += 1;
      }
      buffer.allBuffers = allBuffers;
      doWrite(stream, state, true, state.length, buffer, "", holder.finish);
      state.pendingcb++;
      state.lastBufferedRequest = null;
      if (holder.next) {
        state.corkedRequestsFree = holder.next;
        holder.next = null;
      } else {
        state.corkedRequestsFree = new CorkedRequest(state);
      }
      state.bufferedRequestCount = 0;
    } else {
      while (entry) {
        var chunk = entry.chunk;
        var encoding = entry.encoding;
        var cb = entry.callback;
        var len = state.objectMode ? 1 : chunk.length;
        doWrite(stream, state, false, len, chunk, encoding, cb);
        entry = entry.next;
        state.bufferedRequestCount--;
        if (state.writing) {
          break;
        }
      }
      if (entry === null)
        state.lastBufferedRequest = null;
    }
    state.bufferedRequest = entry;
    state.bufferProcessing = false;
  }
  Writable.prototype._write = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
  };
  Writable.prototype._writev = null;
  Writable.prototype.end = function(chunk, encoding, cb) {
    var state = this._writableState;
    if (typeof chunk === "function") {
      cb = chunk;
      chunk = null;
      encoding = null;
    } else if (typeof encoding === "function") {
      cb = encoding;
      encoding = null;
    }
    if (chunk !== null && chunk !== undefined)
      this.write(chunk, encoding);
    if (state.corked) {
      state.corked = 1;
      this.uncork();
    }
    if (!state.ending)
      endWritable(this, state, cb);
    return this;
  };
  Object.defineProperty(Writable.prototype, "writableLength", {
    enumerable: false,
    get: function get() {
      return this._writableState.length;
    }
  });
  function needFinish(state) {
    return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
  }
  function callFinal(stream, state) {
    stream._final(function(err) {
      state.pendingcb--;
      if (err) {
        errorOrDestroy(stream, err);
      }
      state.prefinished = true;
      stream.emit("prefinish");
      finishMaybe(stream, state);
    });
  }
  function prefinish(stream, state) {
    if (!state.prefinished && !state.finalCalled) {
      if (typeof stream._final === "function" && !state.destroyed) {
        state.pendingcb++;
        state.finalCalled = true;
        process.nextTick(callFinal, stream, state);
      } else {
        state.prefinished = true;
        stream.emit("prefinish");
      }
    }
  }
  function finishMaybe(stream, state) {
    var need = needFinish(state);
    if (need) {
      prefinish(stream, state);
      if (state.pendingcb === 0) {
        state.finished = true;
        stream.emit("finish");
        if (state.autoDestroy) {
          var rState = stream._readableState;
          if (!rState || rState.autoDestroy && rState.endEmitted) {
            stream.destroy();
          }
        }
      }
    }
    return need;
  }
  function endWritable(stream, state, cb) {
    state.ending = true;
    finishMaybe(stream, state);
    if (cb) {
      if (state.finished)
        process.nextTick(cb);
      else
        stream.once("finish", cb);
    }
    state.ended = true;
    stream.writable = false;
  }
  function onCorkedFinish(corkReq, state, err) {
    var entry = corkReq.entry;
    corkReq.entry = null;
    while (entry) {
      var cb = entry.callback;
      state.pendingcb--;
      cb(err);
      entry = entry.next;
    }
    state.corkedRequestsFree.next = corkReq;
  }
  Object.defineProperty(Writable.prototype, "destroyed", {
    enumerable: false,
    get: function get() {
      if (this._writableState === undefined) {
        return false;
      }
      return this._writableState.destroyed;
    },
    set: function set(value) {
      if (!this._writableState) {
        return;
      }
      this._writableState.destroyed = value;
    }
  });
  Writable.prototype.destroy = destroyImpl.destroy;
  Writable.prototype._undestroy = destroyImpl.undestroy;
  Writable.prototype._destroy = function(err, cb) {
    cb(err);
  };
});

// node_modules/winston-transport/dist/modern.js
var require_modern = __commonJS((exports, module) => {
  var util = (init_util(), __toCommonJS(exports_util));
  var Writable = require__stream_writable();
  var _require = require_triple_beam();
  var LEVEL = _require.LEVEL;
  var TransportStream = module.exports = function TransportStream() {
    var _this = this;
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    Writable.call(this, { objectMode: true, highWaterMark: options.highWaterMark });
    this.format = options.format;
    this.level = options.level;
    this.handleExceptions = options.handleExceptions;
    this.handleRejections = options.handleRejections;
    this.silent = options.silent;
    if (options.log)
      this.log = options.log;
    if (options.logv)
      this.logv = options.logv;
    if (options.close)
      this.close = options.close;
    this.once("pipe", function(logger) {
      _this.levels = logger.levels;
      _this.parent = logger;
    });
    this.once("unpipe", function(src) {
      if (src === _this.parent) {
        _this.parent = null;
        if (_this.close) {
          _this.close();
        }
      }
    });
  };
  util.inherits(TransportStream, Writable);
  TransportStream.prototype._write = function _write(info, enc, callback) {
    if (this.silent || info.exception === true && !this.handleExceptions) {
      return callback(null);
    }
    var level = this.level || this.parent && this.parent.level;
    if (!level || this.levels[level] >= this.levels[info[LEVEL]]) {
      if (info && !this.format) {
        return this.log(info, callback);
      }
      var errState = undefined;
      var transformed = undefined;
      try {
        transformed = this.format.transform(Object.assign({}, info), this.format.options);
      } catch (err) {
        errState = err;
      }
      if (errState || !transformed) {
        callback();
        if (errState)
          throw errState;
        return;
      }
      return this.log(transformed, callback);
    }
    this._writableState.sync = false;
    return callback(null);
  };
  TransportStream.prototype._writev = function _writev(chunks, callback) {
    if (this.logv) {
      var infos = chunks.filter(this._accept, this);
      if (!infos.length) {
        return callback(null);
      }
      return this.logv(infos, callback);
    }
    for (var i = 0;i < chunks.length; i++) {
      if (!this._accept(chunks[i]))
        continue;
      if (chunks[i].chunk && !this.format) {
        this.log(chunks[i].chunk, chunks[i].callback);
        continue;
      }
      var errState = undefined;
      var transformed = undefined;
      try {
        transformed = this.format.transform(Object.assign({}, chunks[i].chunk), this.format.options);
      } catch (err) {
        errState = err;
      }
      if (errState || !transformed) {
        chunks[i].callback();
        if (errState) {
          callback(null);
          throw errState;
        }
      } else {
        this.log(transformed, chunks[i].callback);
      }
    }
    return callback(null);
  };
  TransportStream.prototype._accept = function _accept(write) {
    var info = write.chunk;
    if (this.silent) {
      return false;
    }
    var level = this.level || this.parent && this.parent.level;
    if (info.exception === true || !level || this.levels[level] >= this.levels[info[LEVEL]]) {
      if (this.handleExceptions || info.exception !== true) {
        return true;
      }
    }
    return false;
  };
  TransportStream.prototype._nop = function _nop() {
    return;
  };
});

// node_modules/winston-transport/dist/legacy.js
var require_legacy = __commonJS((exports, module) => {
  var util = (init_util(), __toCommonJS(exports_util));
  var _require = require_triple_beam();
  var LEVEL = _require.LEVEL;
  var TransportStream = require_modern();
  var LegacyTransportStream = module.exports = function LegacyTransportStream() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    TransportStream.call(this, options);
    if (!options.transport || typeof options.transport.log !== "function") {
      throw new Error("Invalid transport, must be an object with a log method.");
    }
    this.transport = options.transport;
    this.level = this.level || options.transport.level;
    this.handleExceptions = this.handleExceptions || options.transport.handleExceptions;
    this._deprecated();
    function transportError(err) {
      this.emit("error", err, this.transport);
    }
    if (!this.transport.__winstonError) {
      this.transport.__winstonError = transportError.bind(this);
      this.transport.on("error", this.transport.__winstonError);
    }
  };
  util.inherits(LegacyTransportStream, TransportStream);
  LegacyTransportStream.prototype._write = function _write(info, enc, callback) {
    if (this.silent || info.exception === true && !this.handleExceptions) {
      return callback(null);
    }
    if (!this.level || this.levels[this.level] >= this.levels[info[LEVEL]]) {
      this.transport.log(info[LEVEL], info.message, info, this._nop);
    }
    callback(null);
  };
  LegacyTransportStream.prototype._writev = function _writev(chunks, callback) {
    for (var i = 0;i < chunks.length; i++) {
      if (this._accept(chunks[i])) {
        this.transport.log(chunks[i].chunk[LEVEL], chunks[i].chunk.message, chunks[i].chunk, this._nop);
        chunks[i].callback();
      }
    }
    return callback(null);
  };
  LegacyTransportStream.prototype._deprecated = function _deprecated() {
    console.error([this.transport.name + " is a legacy winston transport. Consider upgrading: ", "- Upgrade docs: https://github.com/winstonjs/winston/blob/master/UPGRADE-3.0.md"].join(`
`));
  };
  LegacyTransportStream.prototype.close = function close() {
    if (this.transport.close) {
      this.transport.close();
    }
    if (this.transport.__winstonError) {
      this.transport.removeListener("error", this.transport.__winstonError);
      this.transport.__winstonError = null;
    }
  };
});

// node_modules/winston-transport/dist/index.js
var require_dist = __commonJS((exports, module) => {
  module.exports = require_modern();
  module.exports.LegacyTransportStream = require_legacy();
});

// node_modules/winston/dist/winston/transports/console.js
var require_console = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var os = (init_os(), __toCommonJS(exports_os));
  var _require = require_triple_beam();
  var LEVEL = _require.LEVEL;
  var MESSAGE = _require.MESSAGE;
  var TransportStream = require_dist();
  module.exports = /* @__PURE__ */ function(_TransportStream) {
    function Console() {
      var _this;
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, Console);
      _this = _callSuper(this, Console, [options]);
      _this.name = options.name || "console";
      _this.stderrLevels = _this._stringArrayToSet(options.stderrLevels);
      _this.consoleWarnLevels = _this._stringArrayToSet(options.consoleWarnLevels);
      _this.eol = typeof options.eol === "string" ? options.eol : os.EOL;
      _this.forceConsole = options.forceConsole || false;
      _this._consoleLog = console.log.bind(console);
      _this._consoleWarn = console.warn.bind(console);
      _this._consoleError = console.error.bind(console);
      _this.setMaxListeners(30);
      return _this;
    }
    _inherits(Console, _TransportStream);
    return _createClass(Console, [{
      key: "log",
      value: function log(info, callback) {
        var _this2 = this;
        setImmediate(function() {
          return _this2.emit("logged", info);
        });
        if (this.stderrLevels[info[LEVEL]]) {
          if (console._stderr && !this.forceConsole) {
            console._stderr.write("".concat(info[MESSAGE]).concat(this.eol));
          } else {
            this._consoleError(info[MESSAGE]);
          }
          if (callback) {
            callback();
          }
          return;
        } else if (this.consoleWarnLevels[info[LEVEL]]) {
          if (console._stderr && !this.forceConsole) {
            console._stderr.write("".concat(info[MESSAGE]).concat(this.eol));
          } else {
            this._consoleWarn(info[MESSAGE]);
          }
          if (callback) {
            callback();
          }
          return;
        }
        if (console._stdout && !this.forceConsole) {
          console._stdout.write("".concat(info[MESSAGE]).concat(this.eol));
        } else {
          this._consoleLog(info[MESSAGE]);
        }
        if (callback) {
          callback();
        }
      }
    }, {
      key: "_stringArrayToSet",
      value: function _stringArrayToSet(strArray, errMsg) {
        if (!strArray)
          return {};
        errMsg = errMsg || "Cannot make set from type other than Array of string elements";
        if (!Array.isArray(strArray)) {
          throw new Error(errMsg);
        }
        return strArray.reduce(function(set, el) {
          if (typeof el !== "string") {
            throw new Error(errMsg);
          }
          set[el] = true;
          return set;
        }, {});
      }
    }]);
  }(TransportStream);
});

// node_modules/async/internal/isArrayLike.js
var require_isArrayLike = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isArrayLike;
  function isArrayLike(value) {
    return value && typeof value.length === "number" && value.length >= 0 && value.length % 1 === 0;
  }
  module.exports = exports.default;
});

// node_modules/async/internal/initialParams.js
var require_initialParams = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = function(fn) {
    return function(...args) {
      var callback = args.pop();
      return fn.call(this, args, callback);
    };
  };
  module.exports = exports.default;
});

// node_modules/async/internal/setImmediate.js
var require_setImmediate = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fallback = fallback;
  exports.wrap = wrap;
  var hasQueueMicrotask = exports.hasQueueMicrotask = typeof queueMicrotask === "function" && queueMicrotask;
  var hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === "function" && setImmediate;
  var hasNextTick = exports.hasNextTick = typeof process === "object" && typeof process.nextTick === "function";
  function fallback(fn) {
    setTimeout(fn, 0);
  }
  function wrap(defer) {
    return (fn, ...args) => defer(() => fn(...args));
  }
  var _defer;
  if (hasQueueMicrotask) {
    _defer = queueMicrotask;
  } else if (hasSetImmediate) {
    _defer = setImmediate;
  } else if (hasNextTick) {
    _defer = process.nextTick;
  } else {
    _defer = fallback;
  }
  exports.default = wrap(_defer);
});

// node_modules/async/asyncify.js
var require_asyncify = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = asyncify;
  var _initialParams = require_initialParams();
  var _initialParams2 = _interopRequireDefault(_initialParams);
  var _setImmediate = require_setImmediate();
  var _setImmediate2 = _interopRequireDefault(_setImmediate);
  var _wrapAsync = require_wrapAsync();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function asyncify(func) {
    if ((0, _wrapAsync.isAsync)(func)) {
      return function(...args) {
        const callback = args.pop();
        const promise = func.apply(this, args);
        return handlePromise(promise, callback);
      };
    }
    return (0, _initialParams2.default)(function(args, callback) {
      var result;
      try {
        result = func.apply(this, args);
      } catch (e) {
        return callback(e);
      }
      if (result && typeof result.then === "function") {
        return handlePromise(result, callback);
      } else {
        callback(null, result);
      }
    });
  }
  function handlePromise(promise, callback) {
    return promise.then((value) => {
      invokeCallback(callback, null, value);
    }, (err) => {
      invokeCallback(callback, err && (err instanceof Error || err.message) ? err : new Error(err));
    });
  }
  function invokeCallback(callback, error, value) {
    try {
      callback(error, value);
    } catch (err) {
      (0, _setImmediate2.default)((e) => {
        throw e;
      }, err);
    }
  }
  module.exports = exports.default;
});

// node_modules/async/internal/wrapAsync.js
var require_wrapAsync = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAsyncIterable = exports.isAsyncGenerator = exports.isAsync = undefined;
  var _asyncify = require_asyncify();
  var _asyncify2 = _interopRequireDefault(_asyncify);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function isAsync(fn) {
    return fn[Symbol.toStringTag] === "AsyncFunction";
  }
  function isAsyncGenerator(fn) {
    return fn[Symbol.toStringTag] === "AsyncGenerator";
  }
  function isAsyncIterable(obj) {
    return typeof obj[Symbol.asyncIterator] === "function";
  }
  function wrapAsync(asyncFn) {
    if (typeof asyncFn !== "function")
      throw new Error("expected a function");
    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;
  }
  exports.default = wrapAsync;
  exports.isAsync = isAsync;
  exports.isAsyncGenerator = isAsyncGenerator;
  exports.isAsyncIterable = isAsyncIterable;
});

// node_modules/async/internal/awaitify.js
var require_awaitify = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = awaitify;
  function awaitify(asyncFn, arity) {
    if (!arity)
      arity = asyncFn.length;
    if (!arity)
      throw new Error("arity is undefined");
    function awaitable(...args) {
      if (typeof args[arity - 1] === "function") {
        return asyncFn.apply(this, args);
      }
      return new Promise((resolve, reject) => {
        args[arity - 1] = (err, ...cbArgs) => {
          if (err)
            return reject(err);
          resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);
        };
        asyncFn.apply(this, args);
      });
    }
    return awaitable;
  }
  module.exports = exports.default;
});

// node_modules/async/internal/parallel.js
var require_parallel = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _isArrayLike = require_isArrayLike();
  var _isArrayLike2 = _interopRequireDefault(_isArrayLike);
  var _wrapAsync = require_wrapAsync();
  var _wrapAsync2 = _interopRequireDefault(_wrapAsync);
  var _awaitify = require_awaitify();
  var _awaitify2 = _interopRequireDefault(_awaitify);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = (0, _awaitify2.default)((eachfn, tasks, callback) => {
    var results = (0, _isArrayLike2.default)(tasks) ? [] : {};
    eachfn(tasks, (task, key, taskCb) => {
      (0, _wrapAsync2.default)(task)((err, ...result) => {
        if (result.length < 2) {
          [result] = result;
        }
        results[key] = result;
        taskCb(err);
      });
    }, (err) => callback(err, results));
  }, 3);
  module.exports = exports.default;
});

// node_modules/async/internal/once.js
var require_once = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = once;
  function once(fn) {
    function wrapper(...args) {
      if (fn === null)
        return;
      var callFn = fn;
      fn = null;
      callFn.apply(this, args);
    }
    Object.assign(wrapper, fn);
    return wrapper;
  }
  module.exports = exports.default;
});

// node_modules/async/internal/getIterator.js
var require_getIterator = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = function(coll) {
    return coll[Symbol.iterator] && coll[Symbol.iterator]();
  };
  module.exports = exports.default;
});

// node_modules/async/internal/iterator.js
var require_iterator = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createIterator;
  var _isArrayLike = require_isArrayLike();
  var _isArrayLike2 = _interopRequireDefault(_isArrayLike);
  var _getIterator = require_getIterator();
  var _getIterator2 = _interopRequireDefault(_getIterator);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function createArrayIterator(coll) {
    var i = -1;
    var len = coll.length;
    return function next() {
      return ++i < len ? { value: coll[i], key: i } : null;
    };
  }
  function createES2015Iterator(iterator) {
    var i = -1;
    return function next() {
      var item = iterator.next();
      if (item.done)
        return null;
      i++;
      return { value: item.value, key: i };
    };
  }
  function createObjectIterator(obj) {
    var okeys = obj ? Object.keys(obj) : [];
    var i = -1;
    var len = okeys.length;
    return function next() {
      var key = okeys[++i];
      if (key === "__proto__") {
        return next();
      }
      return i < len ? { value: obj[key], key } : null;
    };
  }
  function createIterator(coll) {
    if ((0, _isArrayLike2.default)(coll)) {
      return createArrayIterator(coll);
    }
    var iterator = (0, _getIterator2.default)(coll);
    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);
  }
  module.exports = exports.default;
});

// node_modules/async/internal/onlyOnce.js
var require_onlyOnce = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = onlyOnce;
  function onlyOnce(fn) {
    return function(...args) {
      if (fn === null)
        throw new Error("Callback was already called.");
      var callFn = fn;
      fn = null;
      callFn.apply(this, args);
    };
  }
  module.exports = exports.default;
});

// node_modules/async/internal/breakLoop.js
var require_breakLoop = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var breakLoop = {};
  exports.default = breakLoop;
  module.exports = exports.default;
});

// node_modules/async/internal/asyncEachOfLimit.js
var require_asyncEachOfLimit = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = asyncEachOfLimit;
  var _breakLoop = require_breakLoop();
  var _breakLoop2 = _interopRequireDefault(_breakLoop);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function asyncEachOfLimit(generator, limit, iteratee, callback) {
    let done = false;
    let canceled = false;
    let awaiting = false;
    let running = 0;
    let idx = 0;
    function replenish() {
      if (running >= limit || awaiting || done)
        return;
      awaiting = true;
      generator.next().then(({ value, done: iterDone }) => {
        if (canceled || done)
          return;
        awaiting = false;
        if (iterDone) {
          done = true;
          if (running <= 0) {
            callback(null);
          }
          return;
        }
        running++;
        iteratee(value, idx, iterateeCallback);
        idx++;
        replenish();
      }).catch(handleError);
    }
    function iterateeCallback(err, result) {
      running -= 1;
      if (canceled)
        return;
      if (err)
        return handleError(err);
      if (err === false) {
        done = true;
        canceled = true;
        return;
      }
      if (result === _breakLoop2.default || done && running <= 0) {
        done = true;
        return callback(null);
      }
      replenish();
    }
    function handleError(err) {
      if (canceled)
        return;
      awaiting = false;
      done = true;
      callback(err);
    }
    replenish();
  }
  module.exports = exports.default;
});

// node_modules/async/internal/eachOfLimit.js
var require_eachOfLimit = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _once = require_once();
  var _once2 = _interopRequireDefault(_once);
  var _iterator = require_iterator();
  var _iterator2 = _interopRequireDefault(_iterator);
  var _onlyOnce = require_onlyOnce();
  var _onlyOnce2 = _interopRequireDefault(_onlyOnce);
  var _wrapAsync = require_wrapAsync();
  var _asyncEachOfLimit = require_asyncEachOfLimit();
  var _asyncEachOfLimit2 = _interopRequireDefault(_asyncEachOfLimit);
  var _breakLoop = require_breakLoop();
  var _breakLoop2 = _interopRequireDefault(_breakLoop);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = (limit) => {
    return (obj, iteratee, callback) => {
      callback = (0, _once2.default)(callback);
      if (limit <= 0) {
        throw new RangeError("concurrency limit cannot be less than 1");
      }
      if (!obj) {
        return callback(null);
      }
      if ((0, _wrapAsync.isAsyncGenerator)(obj)) {
        return (0, _asyncEachOfLimit2.default)(obj, limit, iteratee, callback);
      }
      if ((0, _wrapAsync.isAsyncIterable)(obj)) {
        return (0, _asyncEachOfLimit2.default)(obj[Symbol.asyncIterator](), limit, iteratee, callback);
      }
      var nextElem = (0, _iterator2.default)(obj);
      var done = false;
      var canceled = false;
      var running = 0;
      var looping = false;
      function iterateeCallback(err, value) {
        if (canceled)
          return;
        running -= 1;
        if (err) {
          done = true;
          callback(err);
        } else if (err === false) {
          done = true;
          canceled = true;
        } else if (value === _breakLoop2.default || done && running <= 0) {
          done = true;
          return callback(null);
        } else if (!looping) {
          replenish();
        }
      }
      function replenish() {
        looping = true;
        while (running < limit && !done) {
          var elem = nextElem();
          if (elem === null) {
            done = true;
            if (running <= 0) {
              callback(null);
            }
            return;
          }
          running += 1;
          iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));
        }
        looping = false;
      }
      replenish();
    };
  };
  module.exports = exports.default;
});

// node_modules/async/eachOfLimit.js
var require_eachOfLimit2 = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _eachOfLimit2 = require_eachOfLimit();
  var _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);
  var _wrapAsync = require_wrapAsync();
  var _wrapAsync2 = _interopRequireDefault(_wrapAsync);
  var _awaitify = require_awaitify();
  var _awaitify2 = _interopRequireDefault(_awaitify);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function eachOfLimit(coll, limit, iteratee, callback) {
    return (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);
  }
  exports.default = (0, _awaitify2.default)(eachOfLimit, 4);
  module.exports = exports.default;
});

// node_modules/async/eachOfSeries.js
var require_eachOfSeries = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _eachOfLimit = require_eachOfLimit2();
  var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);
  var _awaitify = require_awaitify();
  var _awaitify2 = _interopRequireDefault(_awaitify);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function eachOfSeries(coll, iteratee, callback) {
    return (0, _eachOfLimit2.default)(coll, 1, iteratee, callback);
  }
  exports.default = (0, _awaitify2.default)(eachOfSeries, 3);
  module.exports = exports.default;
});

// node_modules/async/series.js
var require_series = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = series;
  var _parallel2 = require_parallel();
  var _parallel3 = _interopRequireDefault(_parallel2);
  var _eachOfSeries = require_eachOfSeries();
  var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function series(tasks, callback) {
    return (0, _parallel3.default)(_eachOfSeries2.default, tasks, callback);
  }
  module.exports = exports.default;
});

// node:zlib
var exports_zlib = {};
__export(exports_zlib, {
  default: () => EA
});
var Vy, Dn, Yy, Ky, Xy, Jy, wo = (e, t) => () => (e && (t = e(e = 0)), t), g4 = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), Bn = (e, t) => {
  for (var r in t)
    Dn(e, r, { get: t[r], enumerable: true });
}, Ln = (e, t, r, n) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let i of Ky(t))
      !Jy.call(e, i) && i !== r && Dn(e, i, { get: () => t[i], enumerable: !(n = Yy(t, i)) || n.enumerable });
  return e;
}, X3 = (e, t, r) => (Ln(e, t, "default"), r && Ln(r, t, "default")), vt = (e, t, r) => (r = e != null ? Vy(Xy(e)) : {}, Ln(t || !e || !e.__esModule ? Dn(r, "default", { value: e, enumerable: true }) : r, e)), se = (e) => Ln(Dn({}, "__esModule", { value: true }), e), sl, cl, xe, V4, Pe2, qn, ne, Ur3, Mo, ye, I0, it, ot2, at2, Eu, Tt, Qn, ri, ii, Zu, ai, Yu, Ju, Qo, zr, da, Us, Ce, wa, va, gi, ic, Ia, yc, Na, br2, EE, _c, ka, Hr, vc, Sc, wi, Rc, Yr, Si, Ai, zc, $c, Yc, Wa, $a, Ga, Ya, cd, xd, Id, Td, ff, be, Dd, Bd, cm, Ir2, cf, Wd, Gd, yf, nh, fh, uh, un, Ef, vf, bh, mf, Sf, Af, xh, Oh, Vh, tn, dp, yn, Bp, Cf, zf, Up, Vp, Kp, ny, jy, qy, zy, ol, Tn, EA;
var init_zlib = __esm(() => {
  Vy = Object.create;
  Dn = Object.defineProperty;
  Yy = Object.getOwnPropertyDescriptor;
  Ky = Object.getOwnPropertyNames;
  Xy = Object.getPrototypeOf;
  Jy = Object.prototype.hasOwnProperty;
  sl = g4((Pn) => {
    Pn.byteLength = e_;
    Pn.toByteArray = r_;
    Pn.fromByteArray = o_;
    var De = [], pe = [], Qy = typeof Uint8Array < "u" ? Uint8Array : Array, Eo = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (mt2 = 0, ll = Eo.length;mt2 < ll; ++mt2)
      De[mt2] = Eo[mt2], pe[Eo.charCodeAt(mt2)] = mt2;
    var mt2, ll;
    pe[45] = 62;
    pe[95] = 63;
    function ul(e) {
      var t = e.length;
      if (t % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var r = e.indexOf("=");
      r === -1 && (r = t);
      var n = r === t ? 0 : 4 - r % 4;
      return [r, n];
    }
    function e_(e) {
      var t = ul(e), r = t[0], n = t[1];
      return (r + n) * 3 / 4 - n;
    }
    function t_(e, t, r) {
      return (t + r) * 3 / 4 - r;
    }
    function r_(e) {
      var t, r = ul(e), n = r[0], i = r[1], o2 = new Qy(t_(e, n, i)), a3 = 0, f2 = i > 0 ? n - 4 : n, u3;
      for (u3 = 0;u3 < f2; u3 += 4)
        t = pe[e.charCodeAt(u3)] << 18 | pe[e.charCodeAt(u3 + 1)] << 12 | pe[e.charCodeAt(u3 + 2)] << 6 | pe[e.charCodeAt(u3 + 3)], o2[a3++] = t >> 16 & 255, o2[a3++] = t >> 8 & 255, o2[a3++] = t & 255;
      return i === 2 && (t = pe[e.charCodeAt(u3)] << 2 | pe[e.charCodeAt(u3 + 1)] >> 4, o2[a3++] = t & 255), i === 1 && (t = pe[e.charCodeAt(u3)] << 10 | pe[e.charCodeAt(u3 + 1)] << 4 | pe[e.charCodeAt(u3 + 2)] >> 2, o2[a3++] = t >> 8 & 255, o2[a3++] = t & 255), o2;
    }
    function n_(e) {
      return De[e >> 18 & 63] + De[e >> 12 & 63] + De[e >> 6 & 63] + De[e & 63];
    }
    function i_(e, t, r) {
      for (var n, i = [], o2 = t;o2 < r; o2 += 3)
        n = (e[o2] << 16 & 16711680) + (e[o2 + 1] << 8 & 65280) + (e[o2 + 2] & 255), i.push(n_(n));
      return i.join("");
    }
    function o_(e) {
      for (var t, r = e.length, n = r % 3, i = [], o2 = 16383, a3 = 0, f2 = r - n;a3 < f2; a3 += o2)
        i.push(i_(e, a3, a3 + o2 > f2 ? f2 : a3 + o2));
      return n === 1 ? (t = e[r - 1], i.push(De[t >> 2] + De[t << 4 & 63] + "==")) : n === 2 && (t = (e[r - 2] << 8) + e[r - 1], i.push(De[t >> 10] + De[t >> 4 & 63] + De[t << 2 & 63] + "=")), i.join("");
    }
  });
  cl = g4((vo) => {
    vo.read = function(e, t, r, n, i) {
      var o2, a3, f2 = i * 8 - n - 1, u3 = (1 << f2) - 1, l3 = u3 >> 1, s2 = -7, c2 = r ? i - 1 : 0, h4 = r ? -1 : 1, d3 = e[t + c2];
      for (c2 += h4, o2 = d3 & (1 << -s2) - 1, d3 >>= -s2, s2 += f2;s2 > 0; o2 = o2 * 256 + e[t + c2], c2 += h4, s2 -= 8)
        ;
      for (a3 = o2 & (1 << -s2) - 1, o2 >>= -s2, s2 += n;s2 > 0; a3 = a3 * 256 + e[t + c2], c2 += h4, s2 -= 8)
        ;
      if (o2 === 0)
        o2 = 1 - l3;
      else {
        if (o2 === u3)
          return a3 ? NaN : (d3 ? -1 : 1) * (1 / 0);
        a3 = a3 + Math.pow(2, n), o2 = o2 - l3;
      }
      return (d3 ? -1 : 1) * a3 * Math.pow(2, o2 - n);
    };
    vo.write = function(e, t, r, n, i, o2) {
      var a3, f2, u3, l3 = o2 * 8 - i - 1, s2 = (1 << l3) - 1, c2 = s2 >> 1, h4 = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d3 = n ? 0 : o2 - 1, y4 = n ? 1 : -1, b4 = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0;
      for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (f2 = isNaN(t) ? 1 : 0, a3 = s2) : (a3 = Math.floor(Math.log(t) / Math.LN2), t * (u3 = Math.pow(2, -a3)) < 1 && (a3--, u3 *= 2), a3 + c2 >= 1 ? t += h4 / u3 : t += h4 * Math.pow(2, 1 - c2), t * u3 >= 2 && (a3++, u3 /= 2), a3 + c2 >= s2 ? (f2 = 0, a3 = s2) : a3 + c2 >= 1 ? (f2 = (t * u3 - 1) * Math.pow(2, i), a3 = a3 + c2) : (f2 = t * Math.pow(2, c2 - 1) * Math.pow(2, i), a3 = 0));i >= 8; e[r + d3] = f2 & 255, d3 += y4, f2 /= 256, i -= 8)
        ;
      for (a3 = a3 << i | f2, l3 += i;l3 > 0; e[r + d3] = a3 & 255, d3 += y4, a3 /= 256, l3 -= 8)
        ;
      e[r + d3 - y4] |= b4 * 128;
    };
  });
  xe = g4((or) => {
    var mo = sl(), nr = cl(), dl = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    or.Buffer = p3;
    or.SlowBuffer = c_;
    or.INSPECT_MAX_BYTES = 50;
    var Mn = 2147483647;
    or.kMaxLength = Mn;
    p3.TYPED_ARRAY_SUPPORT = a_();
    !p3.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function a_() {
      try {
        let e = new Uint8Array(1), t = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), e.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(p3.prototype, "parent", { enumerable: true, get: function() {
      if (!!p3.isBuffer(this))
        return this.buffer;
    } });
    Object.defineProperty(p3.prototype, "offset", { enumerable: true, get: function() {
      if (!!p3.isBuffer(this))
        return this.byteOffset;
    } });
    function Ye(e) {
      if (e > Mn)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
      let t = new Uint8Array(e);
      return Object.setPrototypeOf(t, p3.prototype), t;
    }
    function p3(e, t, r) {
      if (typeof e == "number") {
        if (typeof t == "string")
          throw new TypeError('The "string" argument must be of type string. Received type number');
        return Ro(e);
      }
      return _l(e, t, r);
    }
    p3.poolSize = 8192;
    function _l(e, t, r) {
      if (typeof e == "string")
        return l_(e, t);
      if (ArrayBuffer.isView(e))
        return u_(e);
      if (e == null)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
      if (Be(e, ArrayBuffer) || e && Be(e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Be(e, SharedArrayBuffer) || e && Be(e.buffer, SharedArrayBuffer)))
        return Ao(e, t, r);
      if (typeof e == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      let n = e.valueOf && e.valueOf();
      if (n != null && n !== e)
        return p3.from(n, t, r);
      let i = s_(e);
      if (i)
        return i;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] == "function")
        return p3.from(e[Symbol.toPrimitive]("string"), t, r);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
    }
    p3.from = function(e, t, r) {
      return _l(e, t, r);
    };
    Object.setPrototypeOf(p3.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(p3, Uint8Array);
    function gl(e) {
      if (typeof e != "number")
        throw new TypeError('"size" argument must be of type number');
      if (e < 0)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
    }
    function f_(e, t, r) {
      return gl(e), e <= 0 ? Ye(e) : t !== undefined ? typeof r == "string" ? Ye(e).fill(t, r) : Ye(e).fill(t) : Ye(e);
    }
    p3.alloc = function(e, t, r) {
      return f_(e, t, r);
    };
    function Ro(e) {
      return gl(e), Ye(e < 0 ? 0 : Io(e) | 0);
    }
    p3.allocUnsafe = function(e) {
      return Ro(e);
    };
    p3.allocUnsafeSlow = function(e) {
      return Ro(e);
    };
    function l_(e, t) {
      if ((typeof t != "string" || t === "") && (t = "utf8"), !p3.isEncoding(t))
        throw new TypeError("Unknown encoding: " + t);
      let r = bl(e, t) | 0, n = Ye(r), i = n.write(e, t);
      return i !== r && (n = n.slice(0, i)), n;
    }
    function So(e) {
      let t = e.length < 0 ? 0 : Io(e.length) | 0, r = Ye(t);
      for (let n = 0;n < t; n += 1)
        r[n] = e[n] & 255;
      return r;
    }
    function u_(e) {
      if (Be(e, Uint8Array)) {
        let t = new Uint8Array(e);
        return Ao(t.buffer, t.byteOffset, t.byteLength);
      }
      return So(e);
    }
    function Ao(e, t, r) {
      if (t < 0 || e.byteLength < t)
        throw new RangeError('"offset" is outside of buffer bounds');
      if (e.byteLength < t + (r || 0))
        throw new RangeError('"length" is outside of buffer bounds');
      let n;
      return t === undefined && r === undefined ? n = new Uint8Array(e) : r === undefined ? n = new Uint8Array(e, t) : n = new Uint8Array(e, t, r), Object.setPrototypeOf(n, p3.prototype), n;
    }
    function s_(e) {
      if (p3.isBuffer(e)) {
        let t = Io(e.length) | 0, r = Ye(t);
        return r.length === 0 || e.copy(r, 0, 0, t), r;
      }
      if (e.length !== undefined)
        return typeof e.length != "number" || Oo(e.length) ? Ye(0) : So(e);
      if (e.type === "Buffer" && Array.isArray(e.data))
        return So(e.data);
    }
    function Io(e) {
      if (e >= Mn)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + Mn.toString(16) + " bytes");
      return e | 0;
    }
    function c_(e) {
      return +e != e && (e = 0), p3.alloc(+e);
    }
    p3.isBuffer = function(t) {
      return t != null && t._isBuffer === true && t !== p3.prototype;
    };
    p3.compare = function(t, r) {
      if (Be(t, Uint8Array) && (t = p3.from(t, t.offset, t.byteLength)), Be(r, Uint8Array) && (r = p3.from(r, r.offset, r.byteLength)), !p3.isBuffer(t) || !p3.isBuffer(r))
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (t === r)
        return 0;
      let n = t.length, i = r.length;
      for (let o2 = 0, a3 = Math.min(n, i);o2 < a3; ++o2)
        if (t[o2] !== r[o2]) {
          n = t[o2], i = r[o2];
          break;
        }
      return n < i ? -1 : i < n ? 1 : 0;
    };
    p3.isEncoding = function(t) {
      switch (String(t).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    p3.concat = function(t, r) {
      if (!Array.isArray(t))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (t.length === 0)
        return p3.alloc(0);
      let n;
      if (r === undefined)
        for (r = 0, n = 0;n < t.length; ++n)
          r += t[n].length;
      let i = p3.allocUnsafe(r), o2 = 0;
      for (n = 0;n < t.length; ++n) {
        let a3 = t[n];
        if (Be(a3, Uint8Array))
          o2 + a3.length > i.length ? (p3.isBuffer(a3) || (a3 = p3.from(a3)), a3.copy(i, o2)) : Uint8Array.prototype.set.call(i, a3, o2);
        else if (p3.isBuffer(a3))
          a3.copy(i, o2);
        else
          throw new TypeError('"list" argument must be an Array of Buffers');
        o2 += a3.length;
      }
      return i;
    };
    function bl(e, t) {
      if (p3.isBuffer(e))
        return e.length;
      if (ArrayBuffer.isView(e) || Be(e, ArrayBuffer))
        return e.byteLength;
      if (typeof e != "string")
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
      let r = e.length, n = arguments.length > 2 && arguments[2] === true;
      if (!n && r === 0)
        return 0;
      let i = false;
      for (;; )
        switch (t) {
          case "ascii":
          case "latin1":
          case "binary":
            return r;
          case "utf8":
          case "utf-8":
            return xo(e).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return r * 2;
          case "hex":
            return r >>> 1;
          case "base64":
            return Il(e).length;
          default:
            if (i)
              return n ? -1 : xo(e).length;
            t = ("" + t).toLowerCase(), i = true;
        }
    }
    p3.byteLength = bl;
    function d_(e, t, r) {
      let n = false;
      if ((t === undefined || t < 0) && (t = 0), t > this.length || ((r === undefined || r > this.length) && (r = this.length), r <= 0) || (r >>>= 0, t >>>= 0, r <= t))
        return "";
      for (e || (e = "utf8");; )
        switch (e) {
          case "hex":
            return m_(this, t, r);
          case "utf8":
          case "utf-8":
            return El(this, t, r);
          case "ascii":
            return E_(this, t, r);
          case "latin1":
          case "binary":
            return v_(this, t, r);
          case "base64":
            return b_(this, t, r);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return S_(this, t, r);
          default:
            if (n)
              throw new TypeError("Unknown encoding: " + e);
            e = (e + "").toLowerCase(), n = true;
        }
    }
    p3.prototype._isBuffer = true;
    function St(e, t, r) {
      let n = e[t];
      e[t] = e[r], e[r] = n;
    }
    p3.prototype.swap16 = function() {
      let t = this.length;
      if (t % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let r = 0;r < t; r += 2)
        St(this, r, r + 1);
      return this;
    };
    p3.prototype.swap32 = function() {
      let t = this.length;
      if (t % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let r = 0;r < t; r += 4)
        St(this, r, r + 3), St(this, r + 1, r + 2);
      return this;
    };
    p3.prototype.swap64 = function() {
      let t = this.length;
      if (t % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let r = 0;r < t; r += 8)
        St(this, r, r + 7), St(this, r + 1, r + 6), St(this, r + 2, r + 5), St(this, r + 3, r + 4);
      return this;
    };
    p3.prototype.toString = function() {
      let t = this.length;
      return t === 0 ? "" : arguments.length === 0 ? El(this, 0, t) : d_.apply(this, arguments);
    };
    p3.prototype.toLocaleString = p3.prototype.toString;
    p3.prototype.equals = function(t) {
      if (!p3.isBuffer(t))
        throw new TypeError("Argument must be a Buffer");
      return this === t ? true : p3.compare(this, t) === 0;
    };
    p3.prototype.inspect = function() {
      let t = "", r = or.INSPECT_MAX_BYTES;
      return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
    };
    dl && (p3.prototype[dl] = p3.prototype.inspect);
    p3.prototype.compare = function(t, r, n, i, o2) {
      if (Be(t, Uint8Array) && (t = p3.from(t, t.offset, t.byteLength)), !p3.isBuffer(t))
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);
      if (r === undefined && (r = 0), n === undefined && (n = t ? t.length : 0), i === undefined && (i = 0), o2 === undefined && (o2 = this.length), r < 0 || n > t.length || i < 0 || o2 > this.length)
        throw new RangeError("out of range index");
      if (i >= o2 && r >= n)
        return 0;
      if (i >= o2)
        return -1;
      if (r >= n)
        return 1;
      if (r >>>= 0, n >>>= 0, i >>>= 0, o2 >>>= 0, this === t)
        return 0;
      let a3 = o2 - i, f2 = n - r, u3 = Math.min(a3, f2), l3 = this.slice(i, o2), s2 = t.slice(r, n);
      for (let c2 = 0;c2 < u3; ++c2)
        if (l3[c2] !== s2[c2]) {
          a3 = l3[c2], f2 = s2[c2];
          break;
        }
      return a3 < f2 ? -1 : f2 < a3 ? 1 : 0;
    };
    function wl(e, t, r, n, i) {
      if (e.length === 0)
        return -1;
      if (typeof r == "string" ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, Oo(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
        if (i)
          return -1;
        r = e.length - 1;
      } else if (r < 0)
        if (i)
          r = 0;
        else
          return -1;
      if (typeof t == "string" && (t = p3.from(t, n)), p3.isBuffer(t))
        return t.length === 0 ? -1 : hl(e, t, r, n, i);
      if (typeof t == "number")
        return t = t & 255, typeof Uint8Array.prototype.indexOf == "function" ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : hl(e, [t], r, n, i);
      throw new TypeError("val must be string, number or Buffer");
    }
    function hl(e, t, r, n, i) {
      let o2 = 1, a3 = e.length, f2 = t.length;
      if (n !== undefined && (n = String(n).toLowerCase(), n === "ucs2" || n === "ucs-2" || n === "utf16le" || n === "utf-16le")) {
        if (e.length < 2 || t.length < 2)
          return -1;
        o2 = 2, a3 /= 2, f2 /= 2, r /= 2;
      }
      function u3(s2, c2) {
        return o2 === 1 ? s2[c2] : s2.readUInt16BE(c2 * o2);
      }
      let l3;
      if (i) {
        let s2 = -1;
        for (l3 = r;l3 < a3; l3++)
          if (u3(e, l3) === u3(t, s2 === -1 ? 0 : l3 - s2)) {
            if (s2 === -1 && (s2 = l3), l3 - s2 + 1 === f2)
              return s2 * o2;
          } else
            s2 !== -1 && (l3 -= l3 - s2), s2 = -1;
      } else
        for (r + f2 > a3 && (r = a3 - f2), l3 = r;l3 >= 0; l3--) {
          let s2 = true;
          for (let c2 = 0;c2 < f2; c2++)
            if (u3(e, l3 + c2) !== u3(t, c2)) {
              s2 = false;
              break;
            }
          if (s2)
            return l3;
        }
      return -1;
    }
    p3.prototype.includes = function(t, r, n) {
      return this.indexOf(t, r, n) !== -1;
    };
    p3.prototype.indexOf = function(t, r, n) {
      return wl(this, t, r, n, true);
    };
    p3.prototype.lastIndexOf = function(t, r, n) {
      return wl(this, t, r, n, false);
    };
    function h_(e, t, r, n) {
      r = Number(r) || 0;
      let i = e.length - r;
      n ? (n = Number(n), n > i && (n = i)) : n = i;
      let o2 = t.length;
      n > o2 / 2 && (n = o2 / 2);
      let a3;
      for (a3 = 0;a3 < n; ++a3) {
        let f2 = parseInt(t.substr(a3 * 2, 2), 16);
        if (Oo(f2))
          return a3;
        e[r + a3] = f2;
      }
      return a3;
    }
    function p_(e, t, r, n) {
      return jn(xo(t, e.length - r), e, r, n);
    }
    function y_(e, t, r, n) {
      return jn(I_(t), e, r, n);
    }
    function __(e, t, r, n) {
      return jn(Il(t), e, r, n);
    }
    function g_(e, t, r, n) {
      return jn(T_(t, e.length - r), e, r, n);
    }
    p3.prototype.write = function(t, r, n, i) {
      if (r === undefined)
        i = "utf8", n = this.length, r = 0;
      else if (n === undefined && typeof r == "string")
        i = r, n = this.length, r = 0;
      else if (isFinite(r))
        r = r >>> 0, isFinite(n) ? (n = n >>> 0, i === undefined && (i = "utf8")) : (i = n, n = undefined);
      else
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      let o2 = this.length - r;
      if ((n === undefined || n > o2) && (n = o2), t.length > 0 && (n < 0 || r < 0) || r > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      i || (i = "utf8");
      let a3 = false;
      for (;; )
        switch (i) {
          case "hex":
            return h_(this, t, r, n);
          case "utf8":
          case "utf-8":
            return p_(this, t, r, n);
          case "ascii":
          case "latin1":
          case "binary":
            return y_(this, t, r, n);
          case "base64":
            return __(this, t, r, n);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return g_(this, t, r, n);
          default:
            if (a3)
              throw new TypeError("Unknown encoding: " + i);
            i = ("" + i).toLowerCase(), a3 = true;
        }
    };
    p3.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function b_(e, t, r) {
      return t === 0 && r === e.length ? mo.fromByteArray(e) : mo.fromByteArray(e.slice(t, r));
    }
    function El(e, t, r) {
      r = Math.min(e.length, r);
      let n = [], i = t;
      for (;i < r; ) {
        let o2 = e[i], a3 = null, f2 = o2 > 239 ? 4 : o2 > 223 ? 3 : o2 > 191 ? 2 : 1;
        if (i + f2 <= r) {
          let u3, l3, s2, c2;
          switch (f2) {
            case 1:
              o2 < 128 && (a3 = o2);
              break;
            case 2:
              u3 = e[i + 1], (u3 & 192) === 128 && (c2 = (o2 & 31) << 6 | u3 & 63, c2 > 127 && (a3 = c2));
              break;
            case 3:
              u3 = e[i + 1], l3 = e[i + 2], (u3 & 192) === 128 && (l3 & 192) === 128 && (c2 = (o2 & 15) << 12 | (u3 & 63) << 6 | l3 & 63, c2 > 2047 && (c2 < 55296 || c2 > 57343) && (a3 = c2));
              break;
            case 4:
              u3 = e[i + 1], l3 = e[i + 2], s2 = e[i + 3], (u3 & 192) === 128 && (l3 & 192) === 128 && (s2 & 192) === 128 && (c2 = (o2 & 15) << 18 | (u3 & 63) << 12 | (l3 & 63) << 6 | s2 & 63, c2 > 65535 && c2 < 1114112 && (a3 = c2));
          }
        }
        a3 === null ? (a3 = 65533, f2 = 1) : a3 > 65535 && (a3 -= 65536, n.push(a3 >>> 10 & 1023 | 55296), a3 = 56320 | a3 & 1023), n.push(a3), i += f2;
      }
      return w_(n);
    }
    var pl = 4096;
    function w_(e) {
      let t = e.length;
      if (t <= pl)
        return String.fromCharCode.apply(String, e);
      let r = "", n = 0;
      for (;n < t; )
        r += String.fromCharCode.apply(String, e.slice(n, n += pl));
      return r;
    }
    function E_(e, t, r) {
      let n = "";
      r = Math.min(e.length, r);
      for (let i = t;i < r; ++i)
        n += String.fromCharCode(e[i] & 127);
      return n;
    }
    function v_(e, t, r) {
      let n = "";
      r = Math.min(e.length, r);
      for (let i = t;i < r; ++i)
        n += String.fromCharCode(e[i]);
      return n;
    }
    function m_(e, t, r) {
      let n = e.length;
      (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
      let i = "";
      for (let o2 = t;o2 < r; ++o2)
        i += O_[e[o2]];
      return i;
    }
    function S_(e, t, r) {
      let n = e.slice(t, r), i = "";
      for (let o2 = 0;o2 < n.length - 1; o2 += 2)
        i += String.fromCharCode(n[o2] + n[o2 + 1] * 256);
      return i;
    }
    p3.prototype.slice = function(t, r) {
      let n = this.length;
      t = ~~t, r = r === undefined ? n : ~~r, t < 0 ? (t += n, t < 0 && (t = 0)) : t > n && (t = n), r < 0 ? (r += n, r < 0 && (r = 0)) : r > n && (r = n), r < t && (r = t);
      let i = this.subarray(t, r);
      return Object.setPrototypeOf(i, p3.prototype), i;
    };
    function J2(e, t, r) {
      if (e % 1 !== 0 || e < 0)
        throw new RangeError("offset is not uint");
      if (e + t > r)
        throw new RangeError("Trying to access beyond buffer length");
    }
    p3.prototype.readUintLE = p3.prototype.readUIntLE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || J2(t, r, this.length);
      let i = this[t], o2 = 1, a3 = 0;
      for (;++a3 < r && (o2 *= 256); )
        i += this[t + a3] * o2;
      return i;
    };
    p3.prototype.readUintBE = p3.prototype.readUIntBE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || J2(t, r, this.length);
      let i = this[t + --r], o2 = 1;
      for (;r > 0 && (o2 *= 256); )
        i += this[t + --r] * o2;
      return i;
    };
    p3.prototype.readUint8 = p3.prototype.readUInt8 = function(t, r) {
      return t = t >>> 0, r || J2(t, 1, this.length), this[t];
    };
    p3.prototype.readUint16LE = p3.prototype.readUInt16LE = function(t, r) {
      return t = t >>> 0, r || J2(t, 2, this.length), this[t] | this[t + 1] << 8;
    };
    p3.prototype.readUint16BE = p3.prototype.readUInt16BE = function(t, r) {
      return t = t >>> 0, r || J2(t, 2, this.length), this[t] << 8 | this[t + 1];
    };
    p3.prototype.readUint32LE = p3.prototype.readUInt32LE = function(t, r) {
      return t = t >>> 0, r || J2(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + this[t + 3] * 16777216;
    };
    p3.prototype.readUint32BE = p3.prototype.readUInt32BE = function(t, r) {
      return t = t >>> 0, r || J2(t, 4, this.length), this[t] * 16777216 + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
    };
    p3.prototype.readBigUInt64LE = nt3(function(t) {
      t = t >>> 0, ir(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && jr(t, this.length - 8);
      let i = r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24, o2 = this[++t] + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + n * 2 ** 24;
      return BigInt(i) + (BigInt(o2) << BigInt(32));
    });
    p3.prototype.readBigUInt64BE = nt3(function(t) {
      t = t >>> 0, ir(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && jr(t, this.length - 8);
      let i = r * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t], o2 = this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + n;
      return (BigInt(i) << BigInt(32)) + BigInt(o2);
    });
    p3.prototype.readIntLE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || J2(t, r, this.length);
      let i = this[t], o2 = 1, a3 = 0;
      for (;++a3 < r && (o2 *= 256); )
        i += this[t + a3] * o2;
      return o2 *= 128, i >= o2 && (i -= Math.pow(2, 8 * r)), i;
    };
    p3.prototype.readIntBE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || J2(t, r, this.length);
      let i = r, o2 = 1, a3 = this[t + --i];
      for (;i > 0 && (o2 *= 256); )
        a3 += this[t + --i] * o2;
      return o2 *= 128, a3 >= o2 && (a3 -= Math.pow(2, 8 * r)), a3;
    };
    p3.prototype.readInt8 = function(t, r) {
      return t = t >>> 0, r || J2(t, 1, this.length), this[t] & 128 ? (255 - this[t] + 1) * -1 : this[t];
    };
    p3.prototype.readInt16LE = function(t, r) {
      t = t >>> 0, r || J2(t, 2, this.length);
      let n = this[t] | this[t + 1] << 8;
      return n & 32768 ? n | 4294901760 : n;
    };
    p3.prototype.readInt16BE = function(t, r) {
      t = t >>> 0, r || J2(t, 2, this.length);
      let n = this[t + 1] | this[t] << 8;
      return n & 32768 ? n | 4294901760 : n;
    };
    p3.prototype.readInt32LE = function(t, r) {
      return t = t >>> 0, r || J2(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
    };
    p3.prototype.readInt32BE = function(t, r) {
      return t = t >>> 0, r || J2(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
    };
    p3.prototype.readBigInt64LE = nt3(function(t) {
      t = t >>> 0, ir(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && jr(t, this.length - 8);
      let i = this[t + 4] + this[t + 5] * 2 ** 8 + this[t + 6] * 2 ** 16 + (n << 24);
      return (BigInt(i) << BigInt(32)) + BigInt(r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24);
    });
    p3.prototype.readBigInt64BE = nt3(function(t) {
      t = t >>> 0, ir(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && jr(t, this.length - 8);
      let i = (r << 24) + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t];
      return (BigInt(i) << BigInt(32)) + BigInt(this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + n);
    });
    p3.prototype.readFloatLE = function(t, r) {
      return t = t >>> 0, r || J2(t, 4, this.length), nr.read(this, t, true, 23, 4);
    };
    p3.prototype.readFloatBE = function(t, r) {
      return t = t >>> 0, r || J2(t, 4, this.length), nr.read(this, t, false, 23, 4);
    };
    p3.prototype.readDoubleLE = function(t, r) {
      return t = t >>> 0, r || J2(t, 8, this.length), nr.read(this, t, true, 52, 8);
    };
    p3.prototype.readDoubleBE = function(t, r) {
      return t = t >>> 0, r || J2(t, 8, this.length), nr.read(this, t, false, 52, 8);
    };
    function fe(e, t, r, n, i, o2) {
      if (!p3.isBuffer(e))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (t > i || t < o2)
        throw new RangeError('"value" argument is out of bounds');
      if (r + n > e.length)
        throw new RangeError("Index out of range");
    }
    p3.prototype.writeUintLE = p3.prototype.writeUIntLE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, n = n >>> 0, !i) {
        let f2 = Math.pow(2, 8 * n) - 1;
        fe(this, t, r, n, f2, 0);
      }
      let o2 = 1, a3 = 0;
      for (this[r] = t & 255;++a3 < n && (o2 *= 256); )
        this[r + a3] = t / o2 & 255;
      return r + n;
    };
    p3.prototype.writeUintBE = p3.prototype.writeUIntBE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, n = n >>> 0, !i) {
        let f2 = Math.pow(2, 8 * n) - 1;
        fe(this, t, r, n, f2, 0);
      }
      let o2 = n - 1, a3 = 1;
      for (this[r + o2] = t & 255;--o2 >= 0 && (a3 *= 256); )
        this[r + o2] = t / a3 & 255;
      return r + n;
    };
    p3.prototype.writeUint8 = p3.prototype.writeUInt8 = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 1, 255, 0), this[r] = t & 255, r + 1;
    };
    p3.prototype.writeUint16LE = p3.prototype.writeUInt16LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 2, 65535, 0), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    p3.prototype.writeUint16BE = p3.prototype.writeUInt16BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 2, 65535, 0), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    p3.prototype.writeUint32LE = p3.prototype.writeUInt32LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 4, 4294967295, 0), this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = t & 255, r + 4;
    };
    p3.prototype.writeUint32BE = p3.prototype.writeUInt32BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 4, 4294967295, 0), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    function vl(e, t, r, n, i) {
      Rl(t, n, i, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2;
      let a3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, r;
    }
    function ml(e, t, r, n, i) {
      Rl(t, n, i, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r + 7] = o2, o2 = o2 >> 8, e[r + 6] = o2, o2 = o2 >> 8, e[r + 5] = o2, o2 = o2 >> 8, e[r + 4] = o2;
      let a3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r + 3] = a3, a3 = a3 >> 8, e[r + 2] = a3, a3 = a3 >> 8, e[r + 1] = a3, a3 = a3 >> 8, e[r] = a3, r + 8;
    }
    p3.prototype.writeBigUInt64LE = nt3(function(t, r = 0) {
      return vl(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    p3.prototype.writeBigUInt64BE = nt3(function(t, r = 0) {
      return ml(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    p3.prototype.writeIntLE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, !i) {
        let u3 = Math.pow(2, 8 * n - 1);
        fe(this, t, r, n, u3 - 1, -u3);
      }
      let o2 = 0, a3 = 1, f2 = 0;
      for (this[r] = t & 255;++o2 < n && (a3 *= 256); )
        t < 0 && f2 === 0 && this[r + o2 - 1] !== 0 && (f2 = 1), this[r + o2] = (t / a3 >> 0) - f2 & 255;
      return r + n;
    };
    p3.prototype.writeIntBE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, !i) {
        let u3 = Math.pow(2, 8 * n - 1);
        fe(this, t, r, n, u3 - 1, -u3);
      }
      let o2 = n - 1, a3 = 1, f2 = 0;
      for (this[r + o2] = t & 255;--o2 >= 0 && (a3 *= 256); )
        t < 0 && f2 === 0 && this[r + o2 + 1] !== 0 && (f2 = 1), this[r + o2] = (t / a3 >> 0) - f2 & 255;
      return r + n;
    };
    p3.prototype.writeInt8 = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[r] = t & 255, r + 1;
    };
    p3.prototype.writeInt16LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 2, 32767, -32768), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    p3.prototype.writeInt16BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 2, 32767, -32768), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    p3.prototype.writeInt32LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 4, 2147483647, -2147483648), this[r] = t & 255, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24, r + 4;
    };
    p3.prototype.writeInt32BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || fe(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    p3.prototype.writeBigInt64LE = nt3(function(t, r = 0) {
      return vl(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    p3.prototype.writeBigInt64BE = nt3(function(t, r = 0) {
      return ml(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function Sl(e, t, r, n, i, o2) {
      if (r + n > e.length)
        throw new RangeError("Index out of range");
      if (r < 0)
        throw new RangeError("Index out of range");
    }
    function Al(e, t, r, n, i) {
      return t = +t, r = r >>> 0, i || Sl(e, t, r, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), nr.write(e, t, r, n, 23, 4), r + 4;
    }
    p3.prototype.writeFloatLE = function(t, r, n) {
      return Al(this, t, r, true, n);
    };
    p3.prototype.writeFloatBE = function(t, r, n) {
      return Al(this, t, r, false, n);
    };
    function xl(e, t, r, n, i) {
      return t = +t, r = r >>> 0, i || Sl(e, t, rnr.write(e, t, r, n, 52, 8), r + 8;
    }
    p3.prototype.writeDoubleLE = function(t, r, n) {
      return xl(this, t, r, true, n);
    };
    p3.prototype.writeDoubleBE = function(t, r, n) {
      return xl(this, t, r, false, n);
    };
    p3.prototype.copy = function(t, r, n, i) {
      if (!p3.isBuffer(t))
        throw new TypeError("argument should be a Buffer");
      if (n || (n = 0), !i && i !== 0 && (i = this.length), r >= t.length && (r = t.length), r || (r = 0), i > 0 && i < n && (i = n), i === n || t.length === 0 || this.length === 0)
        return 0;
      if (r < 0)
        throw new RangeError("targetStart out of bounds");
      if (n < 0 || n >= this.length)
        throw new RangeError("Index out of range");
      if (i < 0)
        throw new RangeError("sourceEnd out of bounds");
      i > this.length && (i = this.length), t.length - r < i - n && (i = t.length - r + n);
      let o2 = i - n;
      return this === t && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(r, n, i) : Uint8Array.prototype.set.call(t, this.subarray(n, i), r), o2;
    };
    p3.prototype.fill = function(t, r, n, i) {
      if (typeof t == "string") {
        if (typeof r == "string" ? (i = r, r = 0, n = this.length) : typeof n == "string" && (i = n, n = this.length), i !== undefined && typeof i != "string")
          throw new TypeError("encoding must be a string");
        if (typeof i == "string" && !p3.isEncoding(i))
          throw new TypeError("Unknown encoding: " + i);
        if (t.length === 1) {
          let a3 = t.charCodeAt(0);
          (i === "utf8" && a3 < 128 || i === "latin1") && (t = a3);
        }
      } else
        typeof t == "number" ? t = t & 255 : typeof t == "boolean" && (t = Number(t));
      if (r < 0 || this.length < r || this.length < n)
        throw new RangeError("Out of range index");
      if (n <= r)
        return this;
      r = r >>> 0, n = n === undefined ? this.length : n >>> 0, t || (t = 0);
      let o2;
      if (typeof t == "number")
        for (o2 = r;o2 < n; ++o2)
          this[o2] = t;
      else {
        let a3 = p3.isBuffer(t) ? t : p3.from(t, i), f2 = a3.length;
        if (f2 === 0)
          throw new TypeError('The value "' + t + '" is invalid for argument "value"');
        for (o2 = 0;o2 < n - r; ++o2)
          this[o2 + r] = a3[o2 % f2];
      }
      return this;
    };
    var rr2 = {};
    function To(e, t, r) {
      rr2[e] = class extends r {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: t.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e}]`, this.stack, delete this.name;
        }
        get code() {
          return e;
        }
        set code(i) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: i, writable: true });
        }
        toString() {
          return `${this.name} [${e}]: ${this.message}`;
        }
      };
    }
    To("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
      return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError);
    To("ERR_INVALID_ARG_TYPE", function(e, t) {
      return `The "${e}" argument must be of type number. Received type ${typeof t}`;
    }, TypeError);
    To("ERR_OUT_OF_RANGE", function(e, t, r) {
      let n = `The value of "${e}" is out of range.`, i = r;
      return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? i = yl(String(r)) : typeof r == "bigint" && (i = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = yl(i)), i += "n"), n += ` It must be ${t}. Received ${i}`, n;
    }, RangeError);
    function yl(e) {
      let t = "", r = e.length, n = e[0] === "-" ? 1 : 0;
      for (;r >= n + 4; r -= 3)
        t = `_${e.slice(r - 3, r)}${t}`;
      return `${e.slice(0, r)}${t}`;
    }
    function A_(e, t, r) {
      ir(t, "offset"), (e[t] === undefined || e[t + r] === undefined) && jr(t, e.length - (r + 1));
    }
    function Rl(e, t, r, n, i, o2) {
      if (e > r || e < t) {
        let a3 = typeof t == "bigint" ? "n" : "", f2;
        throw o2 > 3 ? t === 0 || t === BigInt(0) ? f2 = `>= 0${a3} and < 2${a3} ** ${(o2 + 1) * 8}${a3}` : f2 = `>= -(2${a3} ** ${(o2 + 1) * 8 - 1}${a3}) and < 2 ** ${(o2 + 1) * 8 - 1}${a3}` : f2 = `>= ${t}${a3} and <= ${r}${a3}`, new rr2.ERR_OUT_OF_RANGE("value", f2, e);
      }
      A_(n, i, o2);
    }
    function ir(e, t) {
      if (typeof e != "number")
        throw new rr2.ERR_INVALID_ARG_TYPE(t, "number", e);
    }
    function jr(e, t, r) {
      throw Math.floor(e) !== e ? (ir(e, r), new rr2.ERR_OUT_OF_RANGE(r || "offset", "an integer", e)) : t < 0 ? new rr2.ERR_BUFFER_OUT_OF_BOUNDS : new rr2.ERR_OUT_OF_RANGE(r || "offset", `>= ${r ? 1 : 0} and <= ${t}`, e);
    }
    var x_ = /[^+/0-9A-Za-z-_]/g;
    function R_(e) {
      if (e = e.split("=")[0], e = e.trim().replace(x_, ""), e.length < 2)
        return "";
      for (;e.length % 4 !== 0; )
        e = e + "=";
      return e;
    }
    function xo(e, t) {
      t = t || 1 / 0;
      let r, n = e.length, i = null, o2 = [];
      for (let a3 = 0;a3 < n; ++a3) {
        if (r = e.charCodeAt(a3), r > 55295 && r < 57344) {
          if (!i) {
            if (r > 56319) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            } else if (a3 + 1 === n) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            }
            i = r;
            continue;
          }
          if (r < 56320) {
            (t -= 3) > -1 && o2.push(239, 191, 189), i = r;
            continue;
          }
          r = (i - 55296 << 10 | r - 56320) + 65536;
        } else
          i && (t -= 3) > -1 && o2.push(239, 191, 189);
        if (i = null, r < 128) {
          if ((t -= 1) < 0)
            break;
          o2.push(r);
        } else if (r < 2048) {
          if ((t -= 2) < 0)
            break;
          o2.push(r >> 6 | 192, r & 63 | 128);
        } else if (r < 65536) {
          if ((t -= 3) < 0)
            break;
          o2.push(r >> 12 | 224, r >> 6 & 63 | 128, r & 63 | 128);
        } else if (r < 1114112) {
          if ((t -= 4) < 0)
            break;
          o2.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, r & 63 | 128);
        } else
          throw new Error("Invalid code point");
      }
      return o2;
    }
    function I_(e) {
      let t = [];
      for (let r = 0;r < e.length; ++r)
        t.push(e.charCodeAt(r) & 255);
      return t;
    }
    function T_(e, t) {
      let r, n, i, o2 = [];
      for (let a3 = 0;a3 < e.length && !((t -= 2) < 0); ++a3)
        r = e.charCodeAt(a3), n = r >> 8, i = r % 256, o2.push(i), o2.push(n);
      return o2;
    }
    function Il(e) {
      return mo.toByteArray(R_(e));
    }
    function jn(e, t, r, n) {
      let i;
      for (i = 0;i < n && !(i + r >= t.length || i >= e.length); ++i)
        t[i + r] = e[i];
      return i;
    }
    function Be(e, t) {
      return e instanceof t || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === t.name;
    }
    function Oo(e) {
      return e !== e;
    }
    var O_ = function() {
      let e = "0123456789abcdef", t = new Array(256);
      for (let r = 0;r < 16; ++r) {
        let n = r * 16;
        for (let i = 0;i < 16; ++i)
          t[n + i] = e[r] + e[i];
      }
      return t;
    }();
    function nt3(e) {
      return typeof BigInt > "u" ? N_ : e;
    }
    function N_() {
      throw new Error("BigInt not supported");
    }
  });
  V4 = g4((RA, Tl) => {
    Tl.exports = { ArrayIsArray(e) {
      return Array.isArray(e);
    }, ArrayPrototypeIncludes(e, t) {
      return e.includes(t);
    }, ArrayPrototypeIndexOf(e, t) {
      return e.indexOf(t);
    }, ArrayPrototypeJoin(e, t) {
      return e.join(t);
    }, ArrayPrototypeMap(e, t) {
      return e.map(t);
    }, ArrayPrototypePop(e, t) {
      return e.pop(t);
    }, ArrayPrototypePush(e, t) {
      return e.push(t);
    }, ArrayPrototypeSlice(e, t, r) {
      return e.slice(t, r);
    }, Error, FunctionPrototypeCall(e, t, ...r) {
      return e.call(t, ...r);
    }, FunctionPrototypeSymbolHasInstance(e, t) {
      return Function.prototype[Symbol.hasInstance].call(e, t);
    }, MathFloor: Math.floor, Number, NumberIsInteger: Number.isInteger, NumberIsNaN: Number.isNaN, NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER, NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER, NumberParseInt: Number.parseInt, ObjectDefineProperties(e, t) {
      return Object.defineProperties(e, t);
    }, ObjectDefineProperty(e, t, r) {
      return Object.defineProperty(e, t, r);
    }, ObjectGetOwnPropertyDescriptor(e, t) {
      return Object.getOwnPropertyDescriptor(e, t);
    }, ObjectKeys(e) {
      return Object.keys(e);
    }, ObjectSetPrototypeOf(e, t) {
      return Object.setPrototypeOf(e, t);
    }, Promise, PromisePrototypeCatch(e, t) {
      return e.catch(t);
    }, PromisePrototypeThen(e, t, r) {
      return e.then(t, r);
    }, PromiseReject(e) {
      return Promise.reject(e);
    }, ReflectApply: Reflect.apply, RegExpPrototypeTest(e, t) {
      return e.test(t);
    }, SafeSet: Set, String, StringPrototypeSlice(e, t, r) {
      return e.slice(t, r);
    }, StringPrototypeToLowerCase(e) {
      return e.toLowerCase();
    }, StringPrototypeToUpperCase(e) {
      return e.toUpperCase();
    }, StringPrototypeTrim(e) {
      return e.trim();
    }, Symbol, SymbolAsyncIterator: Symbol.asyncIterator, SymbolHasInstance: Symbol.hasInstance, SymbolIterator: Symbol.iterator, TypedArrayPrototypeSet(e, t, r) {
      return e.set(t, r);
    }, Uint8Array };
  });
  Pe2 = g4((IA, ko) => {
    var k_ = xe(), F_ = Object.getPrototypeOf(async function() {
    }).constructor, Ol = globalThis.Blob || k_.Blob, L_ = typeof Ol < "u" ? function(t) {
      return t instanceof Ol;
    } : function(t) {
      return false;
    }, No = class extends Error {
      constructor(t) {
        if (!Array.isArray(t))
          throw new TypeError(`Expected input to be an Array, got ${typeof t}`);
        let r = "";
        for (let n = 0;n < t.length; n++)
          r += `    ${t[n].stack}
`;
        super(r), this.name = "AggregateError", this.errors = t;
      }
    };
    ko.exports = { AggregateError: No, kEmptyObject: Object.freeze({}), once(e) {
      let t = false;
      return function(...r) {
        t || (t = true, e.apply(this, r));
      };
    }, createDeferredPromise: function() {
      let e, t;
      return { promise: new Promise((n, i) => {
        e = n, t = i;
      }), resolve: e, reject: t };
    }, promisify(e) {
      return new Promise((t, r) => {
        e((n, ...i) => n ? r(n) : t(...i));
      });
    }, debuglog() {
      return function() {
      };
    }, format(e, ...t) {
      return e.replace(/%([sdifj])/g, function(...[r, n]) {
        let i = t.shift();
        return n === "f" ? i.toFixed(6) : n === "j" ? JSON.stringify(i) : n === "s" && typeof i == "object" ? `${i.constructor !== Object ? i.constructor.name : ""} {}`.trim() : i.toString();
      });
    }, inspect(e) {
      switch (typeof e) {
        case "string":
          if (e.includes("'"))
            if (e.includes('"')) {
              if (!e.includes("`") && !e.includes("${"))
                return `\`${e}\``;
            } else
              return `"${e}"`;
          return `'${e}'`;
        case "number":
          return isNaN(e) ? "NaN" : Object.is(e, -0) ? String(e) : e;
        case "bigint":
          return `${String(e)}n`;
        case "boolean":
        case "undefined":
          return String(e);
        case "object":
          return "{}";
      }
    }, types: { isAsyncFunction(e) {
      return e instanceof F_;
    }, isArrayBufferView(e) {
      return ArrayBuffer.isView(e);
    } }, isBlob: L_ };
    ko.exports.promisify.custom = Symbol.for("nodejs.util.promisify.custom");
  });
  qn = g4((TA, Un) => {
    var { AbortController: Nl, AbortSignal: D_ } = typeof self < "u" ? self : typeof window < "u" ? window : undefined;
    Un.exports = Nl;
    Un.exports.AbortSignal = D_;
    Un.exports.default = Nl;
  });
  ne = g4((OA, Ll) => {
    var { format: B_, inspect: Cn, AggregateError: P_ } = Pe2(), M_ = globalThis.AggregateError || P_, j_ = Symbol("kIsNodeError"), U_ = ["string", "function", "number", "object", "Function", "Object", "boolean", "bigint", "symbol"], q_ = /^([A-Z][a-z0-9]*)+$/, C_ = "__node_internal_", zn = {};
    function At2(e, t) {
      if (!e)
        throw new zn.ERR_INTERNAL_ASSERTION(t);
    }
    function kl(e) {
      let t = "", r = e.length, n = e[0] === "-" ? 1 : 0;
      for (;r >= n + 4; r -= 3)
        t = `_${e.slice(r - 3, r)}${t}`;
      return `${e.slice(0, r)}${t}`;
    }
    function z_(e, t, r) {
      if (typeof t == "function")
        return At2(t.length <= r.length, `Code: ${e}; The provided arguments length (${r.length}) does not match the required ones (${t.length}).`), t(...r);
      let n = (t.match(/%[dfijoOs]/g) || []).length;
      return At2(n === r.length, `Code: ${e}; The provided arguments length (${r.length}) does not match the required ones (${n}).`), r.length === 0 ? t : B_(t, ...r);
    }
    function Q2(e, t, r) {
      r || (r = Error);

      class n extends r {
        constructor(...o2) {
          super(z_(e, t, o2));
        }
        toString() {
          return `${this.name} [${e}]: ${this.message}`;
        }
      }
      Object.defineProperties(n.prototype, { name: { value: r.name, writable: true, enumerable: false, configurable: true }, toString: { value() {
        return `${this.name} [${e}]: ${this.message}`;
      }, writable: true, enumerable: false, configurable: true } }), n.prototype.code = e, n.prototype[j_] = true, zn[e] = n;
    }
    function Fl(e) {
      let t = C_ + e.name;
      return Object.defineProperty(e, "name", { value: t }), e;
    }
    function W_(e, t) {
      if (e && t && e !== t) {
        if (Array.isArray(t.errors))
          return t.errors.push(e), t;
        let r = new M_([t, e], t.message);
        return r.code = t.code, r;
      }
      return e || t;
    }
    var Fo = class extends Error {
      constructor(t = "The operation was aborted", r = undefined) {
        if (r !== undefined && typeof r != "object")
          throw new zn.ERR_INVALID_ARG_TYPE("options", "Object", r);
        super(t, r), this.code = "ABORT_ERR", this.name = "AbortError";
      }
    };
    Q2("ERR_ASSERTION", "%s", Error);
    Q2("ERR_INVALID_ARG_TYPE", (e, t, r) => {
      At2(typeof e == "string", "'name' must be a string"), Array.isArray(t) || (t = [t]);
      let n = "The ";
      e.endsWith(" argument") ? n += `${e} ` : n += `"${e}" ${e.includes(".") ? "property" : "argument"} `, n += "must be ";
      let i = [], o2 = [], a3 = [];
      for (let u3 of t)
        At2(typeof u3 == "string", "All expected entries have to be of type string"), U_.includes(u3) ? i.push(u3.toLowerCase()) : q_.test(u3) ? o2.push(u3) : (At2(u3 !== "object", 'The value "object" should be written as "Object"'), a3.push(u3));
      if (o2.length > 0) {
        let u3 = i.indexOf("object");
        u3 !== -1 && (i.splice(i, u3, 1), o2.push("Object"));
      }
      if (i.length > 0) {
        switch (i.length) {
          case 1:
            n += `of type ${i[0]}`;
            break;
          case 2:
            n += `one of type ${i[0]} or ${i[1]}`;
            break;
          default: {
            let u3 = i.pop();
            n += `one of type ${i.join(", ")}, or ${u3}`;
          }
        }
        (o2.length > 0 || a3.length > 0) && (n += " or ");
      }
      if (o2.length > 0) {
        switch (o2.length) {
          case 1:
            n += `an instance of ${o2[0]}`;
            break;
          case 2:
            n += `an instance of ${o2[0]} or ${o2[1]}`;
            break;
          default: {
            let u3 = o2.pop();
            n += `an instance of ${o2.join(", ")}, or ${u3}`;
          }
        }
        a3.length > 0 && (n += " or ");
      }
      switch (a3.length) {
        case 0:
          break;
        case 1:
          a3[0].toLowerCase() !== a3[0] && (n += "an "), n += `${a3[0]}`;
          break;
        case 2:
          n += `one of ${a3[0]} or ${a3[1]}`;
          break;
        default: {
          let u3 = a3.pop();
          n += `one of ${a3.join(", ")}, or ${u3}`;
        }
      }
      if (r == null)
        n += `. Received ${r}`;
      else if (typeof r == "function" && r.name)
        n += `. Received function ${r.name}`;
      else if (typeof r == "object") {
        var f2;
        (f2 = r.constructor) !== null && f2 !== undefined && f2.name ? n += `. Received an instance of ${r.constructor.name}` : n += `. Received ${Cn(r, { depth: -1 })}`;
      } else {
        let u3 = Cn(r, { colors: false });
        u3.length > 25 && (u3 = `${u3.slice(0, 25)}...`), n += `. Received type ${typeof r} (${u3})`;
      }
      return n;
    }, TypeError);
    Q2("ERR_INVALID_ARG_VALUE", (e, t, r = "is invalid") => {
      let n = Cn(t);
      return n.length > 128 && (n = n.slice(0, 128) + "..."), `The ${e.includes(".") ? "property" : "argument"} '${e}' ${r}. Received ${n}`;
    }, TypeError);
    Q2("ERR_INVALID_RETURN_VALUE", (e, t, r) => {
      var n;
      let i = r != null && (n = r.constructor) !== null && n !== undefined && n.name ? `instance of ${r.constructor.name}` : `type ${typeof r}`;
      return `Expected ${e} to be returned from the "${t}" function but got ${i}.`;
    }, TypeError);
    Q2("ERR_MISSING_ARGS", (...e) => {
      At2(e.length > 0, "At least one arg needs to be specified");
      let t, r = e.length;
      switch (e = (Array.isArray(e) ? e : [e]).map((n) => `"${n}"`).join(" or "), r) {
        case 1:
          t += `The ${e[0]} argument`;
          break;
        case 2:
          t += `The ${e[0]} and ${e[1]} arguments`;
          break;
        default:
          {
            let n = e.pop();
            t += `The ${e.join(", ")}, and ${n} arguments`;
          }
          break;
      }
      return `${t} must be specified`;
    }, TypeError);
    Q2("ERR_OUT_OF_RANGE", (e, t, r) => {
      At2(t, 'Missing "range" argument');
      let n;
      return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? n = kl(String(r)) : typeof r == "bigint" ? (n = String(r), (r > 2n ** 32n || r < -(2n ** 32n)) && (n = kl(n)), n += "n") : n = Cn(r), `The value of "${e}" is out of range. It must be ${t}. Received ${n}`;
    }, RangeError);
    Q2("ERR_MULTIPLE_CALLBACK", "Callback called multiple times", Error);
    Q2("ERR_METHOD_NOT_IMPLEMENTED", "The %s method is not implemented", Error);
    Q2("ERR_STREAM_ALREADY_FINISHED", "Cannot call %s after a stream was finished", Error);
    Q2("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable", Error);
    Q2("ERR_STREAM_DESTROYED", "Cannot call %s after a stream was destroyed", Error);
    Q2("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    Q2("ERR_STREAM_PREMATURE_CLOSE", "Premature close", Error);
    Q2("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF", Error);
    Q2("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event", Error);
    Q2("ERR_STREAM_WRITE_AFTER_END", "write after end", Error);
    Q2("ERR_UNKNOWN_ENCODING", "Unknown encoding: %s", TypeError);
    Ll.exports = { AbortError: Fo, aggregateTwoErrors: Fl(W_), hideStackFrames: Fl, codes: zn };
  });
  Ur3 = g4((NA, Cl) => {
    var { ArrayIsArray: Pl, ArrayPrototypeIncludes: Ml, ArrayPrototypeJoin: jl, ArrayPrototypeMap: Z_, NumberIsInteger: Do, NumberIsNaN: $_, NumberMAX_SAFE_INTEGER: G_, NumberMIN_SAFE_INTEGER: H_, NumberParseInt: V_, ObjectPrototypeHasOwnProperty: Y_, RegExpPrototypeExec: K_, String: X_, StringPrototypeToUpperCase: J_, StringPrototypeTrim: Q_ } = V4(), { hideStackFrames: Re, codes: { ERR_SOCKET_BAD_PORT: e0, ERR_INVALID_ARG_TYPE: le, ERR_INVALID_ARG_VALUE: Wn, ERR_OUT_OF_RANGE: xt, ERR_UNKNOWN_SIGNAL: Dl } } = ne(), { normalizeEncoding: t0 } = Pe2(), { isAsyncFunction: r0, isArrayBufferView: n0 } = Pe2().types, Bl = {};
    function i0(e) {
      return e === (e | 0);
    }
    function o0(e) {
      return e === e >>> 0;
    }
    var a0 = /^[0-7]+$/, f0 = "must be a 32-bit unsigned integer or an octal string";
    function l0(e, t, r) {
      if (typeof e > "u" && (e = r), typeof e == "string") {
        if (K_(a0, e) === null)
          throw new Wn(t, e, f0);
        e = V_(e, 8);
      }
      return Ul(e, t), e;
    }
    var u0 = Re((e, t, r = H_, n = G_) => {
      if (typeof e != "number")
        throw new le(t, "number", e);
      if (!Do(e))
        throw new xt(t, "an integer", e);
      if (e < r || e > n)
        throw new xt(t, `>= ${r} && <= ${n}`, e);
    }), s0 = Re((e, t, r = -2147483648, n = 2147483647) => {
      if (typeof e != "number")
        throw new le(t, "number", e);
      if (!Do(e))
        throw new xt(t, "an integer", e);
      if (e < r || e > n)
        throw new xt(t, `>= ${r} && <= ${n}`, e);
    }), Ul = Re((e, t, r = false) => {
      if (typeof e != "number")
        throw new le(t, "number", e);
      if (!Do(e))
        throw new xt(t, "an integer", e);
      let n = r ? 1 : 0, i = 4294967295;
      if (e < n || e > i)
        throw new xt(t, `>= ${n} && <= ${i}`, e);
    });
    function ql(e, t) {
      if (typeof e != "string")
        throw new le(t, "string", e);
    }
    function c0(e, t, r = undefined, n) {
      if (typeof e != "number")
        throw new le(t, "number", e);
      if (r != null && e < r || n != null && e > n || (r != null || n != null) && $_(e))
        throw new xt(t, `${r != null ? `>= ${r}` : ""}${r != null && n != null ? " && " : ""}${n != null ? `<= ${n}` : ""}`, e);
    }
    var d0 = Re((e, t, r) => {
      if (!Ml(r, e)) {
        let n = jl(Z_(r, (o2) => typeof o2 == "string" ? `'${o2}'` : X_(o2)), ", "), i = "must be one of: " + n;
        throw new Wn(t, e, i);
      }
    });
    function h0(e, t) {
      if (typeof e != "boolean")
        throw new le(t, "boolean", e);
    }
    function Lo(e, t, r) {
      return e == null || !Y_(e, t) ? r : e[t];
    }
    var p0 = Re((e, t, r = null) => {
      let n = Lo(r, "allowArray", false), i = Lo(r, "allowFunction", false);
      if (!Lo(r, "nullable", false) && e === null || !n && Pl(e) || typeof e != "object" && (!i || typeof e != "function"))
        throw new le(t, "Object", e);
    }), y0 = Re((e, t, r = 0) => {
      if (!Pl(e))
        throw new le(t, "Array", e);
      if (e.length < r) {
        let n = `must be longer than ${r}`;
        throw new Wn(t, e, n);
      }
    });
    function _0(e, t = "signal") {
      if (ql(e, t), Bl[e] === undefined)
        throw Bl[J_(e)] !== undefined ? new Dl(e + " (signals must use all capital letters)") : new Dl(e);
    }
    var g0 = Re((e, t = "buffer") => {
      if (!n0(e))
        throw new le(t, ["Buffer", "TypedArray", "DataView"], e);
    });
    function b0(e, t) {
      let r = t0(t), n = e.length;
      if (r === "hex" && n % 2 !== 0)
        throw new Wn("encoding", t, `is invalid for data of length ${n}`);
    }
    function w0(e, t = "Port", r = true) {
      if (typeof e != "number" && typeof e != "string" || typeof e == "string" && Q_(e).length === 0 || +e !== +e >>> 0 || e > 65535 || e === 0 && !r)
        throw new e0(t, e, r);
      return e | 0;
    }
    var E0 = Re((e, t) => {
      if (e !== undefined && (e === null || typeof e != "object" || !("aborted" in e)))
        throw new le(t, "AbortSignal", e);
    }), v0 = Re((e, t) => {
      if (typeof e != "function")
        throw new le(t, "Function", e);
    }), m0 = Re((e, t) => {
      if (typeof e != "function" || r0(e))
        throw new le(t, "Function", e);
    }), S0 = Re((e, t) => {
      if (e !== undefined)
        throw new le(t, "undefined", e);
    });
    function A0(e, t, r) {
      if (!Ml(r, e))
        throw new le(t, `('${jl(r, "|")}')`, e);
    }
    Cl.exports = { isInt32: i0, isUint32: o0, parseFileMode: l0, validateArray: y0, validateBoolean: h0, validateBuffer: g0, validateEncoding: b0, validateFunction: v0, validateInt32: s0, validateInteger: u0, validateNumber: c0, validateObject: p0, validateOneOf: d0, validatePlainFunction: m0, validatePort: w0, validateSignalName: _0, validateString: ql, validateUint32: Ul, validateUndefined: S0, validateUnion: A0, validateAbortSignal: E0 };
  });
  Mo = g4((kA, $l) => {
    var $3 = $l.exports = {}, Me, je;
    function Bo() {
      throw new Error("setTimeout has not been defined");
    }
    function Po() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        typeof setTimeout == "function" ? Me = setTimeout : Me = Bo;
      } catch {
        Me = Bo;
      }
      try {
        typeof clearTimeout == "function" ? je = clearTimeout : je = Po;
      } catch {
        je = Po;
      }
    })();
    function zl(e) {
      if (Me === setTimeout)
        return setTimeout(e, 0);
      if ((Me === Bo || !Me) && setTimeout)
        return Me = setTimeout, setTimeout(e, 0);
      try {
        return Me(e, 0);
      } catch {
        try {
          return Me.call(null, e, 0);
        } catch {
          return Me.call(this, e, 0);
        }
      }
    }
    function x0(e) {
      if (je === clearTimeout)
        return clearTimeout(e);
      if ((je === Po || !je) && clearTimeout)
        return je = clearTimeout, clearTimeout(e);
      try {
        return je(e);
      } catch {
        try {
          return je.call(null, e);
        } catch {
          return je.call(this, e);
        }
      }
    }
    var Ke = [], ar = false, Rt, Zn = -1;
    function R0() {
      !ar || !Rt || (ar = false, Rt.length ? Ke = Rt.concat(Ke) : Zn = -1, Ke.length && Wl());
    }
    function Wl() {
      if (!ar) {
        var e = zl(R0);
        ar = true;
        for (var t = Ke.length;t; ) {
          for (Rt = Ke, Ke = [];++Zn < t; )
            Rt && Rt[Zn].run();
          Zn = -1, t = Ke.length;
        }
        Rt = null, ar = false, x0(e);
      }
    }
    $3.nextTick = function(e) {
      var t = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var r = 1;r < arguments.length; r++)
          t[r - 1] = arguments[r];
      Ke.push(new Zl(e, t)), Ke.length === 1 && !ar && zl(Wl);
    };
    function Zl(e, t) {
      this.fun = e, this.array = t;
    }
    Zl.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    $3.title = "browser";
    $3.browser = true;
    $3.env = {};
    $3.argv = [];
    $3.version = "";
    $3.versions = {};
    function Xe() {
    }
    $3.on = Xe;
    $3.addListener = Xe;
    $3.once = Xe;
    $3.off = Xe;
    $3.removeListener = Xe;
    $3.removeAllListeners = Xe;
    $3.emit = Xe;
    $3.prependListener = Xe;
    $3.prependOnceListener = Xe;
    $3.listeners = function(e) {
      return [];
    };
    $3.binding = function(e) {
      throw new Error("process.binding is not supported");
    };
    $3.cwd = function() {
      return "/";
    };
    $3.chdir = function(e) {
      throw new Error("process.chdir is not supported");
    };
    $3.umask = function() {
      return 0;
    };
  });
  ye = {};
  Bn(ye, { default: () => I0 });
  it = wo(() => {
    X3(ye, vt(Mo()));
    I0 = vt(Mo());
  });
  ot2 = g4((LA, nu) => {
    var { Symbol: $n, SymbolAsyncIterator: Gl, SymbolIterator: Hl } = V4(), Vl = $n("kDestroyed"), Yl = $n("kIsErrored"), jo = $n("kIsReadable"), Kl = $n("kIsDisturbed");
    function Gn(e, t = false) {
      var r;
      return !!(e && typeof e.pipe == "function" && typeof e.on == "function" && (!t || typeof e.pause == "function" && typeof e.resume == "function") && (!e._writableState || ((r = e._readableState) === null || r === undefined ? undefined : r.readable) !== false) && (!e._writableState || e._readableState));
    }
    function Hn(e) {
      var t;
      return !!(e && typeof e.write == "function" && typeof e.on == "function" && (!e._readableState || ((t = e._writableState) === null || t === undefined ? undefined : t.writable) !== false));
    }
    function T0(e) {
      return !!(e && typeof e.pipe == "function" && e._readableState && typeof e.on == "function" && typeof e.write == "function");
    }
    function It(e) {
      return e && (e._readableState || e._writableState || typeof e.write == "function" && typeof e.on == "function" || typeof e.pipe == "function" && typeof e.on == "function");
    }
    function O0(e, t) {
      return e == null ? false : t === true ? typeof e[Gl] == "function" : t === false ? typeof e[Hl] == "function" : typeof e[Gl] == "function" || typeof e[Hl] == "function";
    }
    function Vn(e) {
      if (!It(e))
        return null;
      let { _writableState: t, _readableState: r } = e, n = t || r;
      return !!(e.destroyed || e[Vl] || n != null && n.destroyed);
    }
    function Xl(e) {
      if (!Hn(e))
        return null;
      if (e.writableEnded === true)
        return true;
      let t = e._writableState;
      return t != null && t.errored ? false : typeof t?.ended != "boolean" ? null : t.ended;
    }
    function N0(e, t) {
      if (!Hn(e))
        return null;
      if (e.writableFinished === true)
        return true;
      let r = e._writableState;
      return r != null && r.errored ? false : typeof r?.finished != "boolean" ? null : !!(r.finished || t === false && r.ended === true && r.length === 0);
    }
    function k0(e) {
      if (!Gn(e))
        return null;
      if (e.readableEnded === true)
        return true;
      let t = e._readableState;
      return !t || t.errored ? false : typeof t?.ended != "boolean" ? null : t.ended;
    }
    function Jl(e, t) {
      if (!Gn(e))
        return null;
      let r = e._readableState;
      return r != null && r.errored ? false : typeof r?.endEmitted != "boolean" ? null : !!(r.endEmitted || t === false && r.ended === true && r.length === 0);
    }
    function Ql(e) {
      return e && e[jo] != null ? e[jo] : typeof e?.readable != "boolean" ? null : Vn(e) ? false : Gn(e) && e.readable && !Jl(e);
    }
    function eu(e) {
      return typeof e?.writable != "boolean" ? null : Vn(e) ? false : Hn(e) && e.writable && !Xl(e);
    }
    function F0(e, t) {
      return It(e) ? Vn(e) ? true : !(t?.readable !== false && Ql(e) || t?.writable !== false && eu(e)) : null;
    }
    function L0(e) {
      var t, r;
      return It(e) ? e.writableErrored ? e.writableErrored : (t = (r = e._writableState) === null || r === undefined ? undefined : r.errored) !== null && t !== undefined ? t : null : null;
    }
    function D0(e) {
      var t, r;
      return It(e) ? e.readableErrored ? e.readableErrored : (t = (r = e._readableState) === null || r === undefined ? undefined : r.errored) !== null && t !== undefined ? t : null : null;
    }
    function B0(e) {
      if (!It(e))
        return null;
      if (typeof e.closed == "boolean")
        return e.closed;
      let { _writableState: t, _readableState: r } = e;
      return typeof t?.closed == "boolean" || typeof r?.closed == "boolean" ? t?.closed || r?.closed : typeof e._closed == "boolean" && tu(e) ? e._closed : null;
    }
    function tu(e) {
      return typeof e._closed == "boolean" && typeof e._defaultKeepAlive == "boolean" && typeof e._removedConnection == "boolean" && typeof e._removedContLen == "boolean";
    }
    function ru(e) {
      return typeof e._sent100 == "boolean" && tu(e);
    }
    function P0(e) {
      var t;
      return typeof e._consuming == "boolean" && typeof e._dumped == "boolean" && ((t = e.req) === null || t === undefined ? undefined : t.upgradeOrConnect) === undefined;
    }
    function M0(e) {
      if (!It(e))
        return null;
      let { _writableState: t, _readableState: r } = e, n = t || r;
      return !n && ru(e) || !!(n && n.autoDestroy && n.emitClose && n.closed === false);
    }
    function j0(e) {
      var t;
      return !!(e && ((t = e[Kl]) !== null && t !== undefined ? t : e.readableDidRead || e.readableAborted));
    }
    function U0(e) {
      var t, r, n, i, o2, a3, f2, u3, l3, s2;
      return !!(e && ((t = (r = (n = (i = (o2 = (a3 = e[Yl]) !== null && a3 !== undefined ? a3 : e.readableErrored) !== null && o2 !== undefined ? o2 : e.writableErrored) !== null && i !== undefined ? i : (f2 = e._readableState) === null || f2 === undefined ? undefined : f2.errorEmitted) !== null && n !== undefined ? n : (u3 = e._writableState) === null || u3 === undefined ? undefined : u3.errorEmitted) !== null && r !== undefined ? r : (l3 = e._readableState) === null || l3 === undefined ? undefined : l3.errored) !== null && t !== undefined ? t : (s2 = e._writableState) === null || s2 === undefined ? undefined : s2.errored));
    }
    nu.exports = { kDestroyed: Vl, isDisturbed: j0, kIsDisturbed: Kl, isErrored: U0, kIsErrored: Yl, isReadable: Ql, kIsReadable: jo, isClosed: B0, isDestroyed: Vn, isDuplexNodeStream: T0, isFinished: F0, isIterable: O0, isReadableNodeStream: Gn, isReadableEnded: k0, isReadableFinished: Jl, isReadableErrored: D0, isNodeStream: It, isWritable: eu, isWritableNodeStream: Hn, isWritableEnded: Xl, isWritableFinished: N0, isWritableErrored: L0, isServerRequest: P0, isServerResponse: ru, willEmitClose: M0 };
  });
  at2 = g4((DA, qo) => {
    var fr = (it(), se(ye)), { AbortError: q0, codes: C0 } = ne(), { ERR_INVALID_ARG_TYPE: z0, ERR_STREAM_PREMATURE_CLOSE: iu } = C0, { kEmptyObject: ou, once: au } = Pe2(), { validateAbortSignal: W0, validateFunction: Z0, validateObject: $0 } = Ur3(), { Promise: G0 } = V4(), { isClosed: H0, isReadable: fu, isReadableNodeStream: Uo, isReadableFinished: lu, isReadableErrored: V0, isWritable: uu, isWritableNodeStream: su, isWritableFinished: cu, isWritableErrored: Y0, isNodeStream: K0, willEmitClose: X0 } = ot2();
    function J0(e) {
      return e.setHeader && typeof e.abort == "function";
    }
    var Q0 = () => {
    };
    function du(e, t, r) {
      var n, i;
      arguments.length === 2 ? (r = t, t = ou) : t == null ? t = ou : $0(t, "options"), Z0(r, "callback"), W0(t.signal, "options.signal"), r = au(r);
      let o2 = (n = t.readable) !== null && n !== undefined ? n : Uo(e), a3 = (i = t.writable) !== null && i !== undefined ? i : su(e);
      if (!K0(e))
        throw new z0("stream", "Stream", e);
      let { _writableState: f2, _readableState: u3 } = e, l3 = () => {
        e.writable || h4();
      }, s2 = X0(e) && Uo(e) === o2 && su(e) === a3, c2 = cu(e, false), h4 = () => {
        c2 = true, e.destroyed && (s2 = false), !(s2 && (!e.readable || o2)) && (!o2 || d3) && r.call(e);
      }, d3 = lu(e, false), y4 = () => {
        d3 = true, e.destroyed && (s2 = false), !(s2 && (!e.writable || a3)) && (!a3 || c2) && r.call(e);
      }, b4 = (A3) => {
        r.call(e, A3);
      }, R3 = H0(e), _4 = () => {
        R3 = true;
        let A3 = Y0(e) || V0(e);
        if (A3 && typeof A3 != "boolean")
          return r.call(e, A3);
        if (o2 && !d3 && Uo(e, true) && !lu(e, false))
          return r.call(e, new iu);
        if (a3 && !c2 && !cu(e, false))
          return r.call(e, new iu);
        r.call(e);
      }, E5 = () => {
        e.req.on("finish", h4);
      };
      J0(e) ? (e.on("complete", h4), s2 || e.on("abort", _4), e.req ? E5() : e.on("request", E5)) : a3 && !f2 && (e.on("end", l3), e.on("close", l3)), !s2 && typeof e.aborted == "boolean" && e.on("aborted", _4), e.on("end", y4), e.on("finish", h4), t.error !== false && e.on("error", b4), e.on("close", _4), R3 ? fr.nextTick(_4) : f2 != null && f2.errorEmitted || u3 != null && u3.errorEmitted ? s2 || fr.nextTick(_4) : (!o2 && (!s2 || fu(e)) && (c2 || uu(e) === false) || !a3 && (!s2 || uu(e)) && (d3 || fu(e) === false) || u3 && e.req && e.aborted) && fr.nextTick(_4);
      let m3 = () => {
        r = Q0, e.removeListener("aborted", _4), e.removeListener("complete", h4), e.removeListener("abort", _4), e.removeListener("request", E5), e.req && e.req.removeListener("finish", h4), e.removeListener("end", l3), e.removeListener("close", l3), e.removeListener("finish", h4), e.removeListener("end", y4), e.removeListener("error", b4), e.removeListener("close", _4);
      };
      if (t.signal && !R3) {
        let A3 = () => {
          let v3 = r;
          m3(), v3.call(e, new q0(undefined, { cause: t.signal.reason }));
        };
        if (t.signal.aborted)
          fr.nextTick(A3);
        else {
          let v3 = r;
          r = au((...T2) => {
            t.signal.removeEventListener("abort", A3), v3.apply(e, T2);
          }), t.signal.addEventListener("abort", A3);
        }
      }
      return m3;
    }
    function eg(e, t) {
      return new G0((r, n) => {
        du(e, t, (i) => {
          i ? n(i) : r();
        });
      });
    }
    qo.exports = du;
    qo.exports.finished = eg;
  });
  Eu = g4((BA, Wo) => {
    var _u = globalThis.AbortController || qn().AbortController, { codes: { ERR_INVALID_ARG_TYPE: qr, ERR_MISSING_ARGS: tg, ERR_OUT_OF_RANGE: rg }, AbortError: Ue } = ne(), { validateAbortSignal: lr, validateInteger: ng, validateObject: ur } = Ur3(), ig = V4().Symbol("kWeak"), { finished: og } = at2(), { ArrayPrototypePush: ag, MathFloor: fg, Number: lg, NumberIsNaN: ug, Promise: hu, PromiseReject: pu, PromisePrototypeThen: sg, Symbol: gu } = V4(), Yn = gu("kEmpty"), yu = gu("kEof");
    function Kn(e, t) {
      if (typeof e != "function")
        throw new qr("fn", ["Function", "AsyncFunction"], e);
      t != null && ur(t, "options"), t?.signal != null && lr(t.signal, "options.signal");
      let r = 1;
      return t?.concurrency != null && (r = fg(t.concurrency)), ng(r, "concurrency", 1), async function* () {
        var i, o2;
        let a3 = new _u, f2 = this, u3 = [], l3 = a3.signal, s2 = { signal: l3 }, c2 = () => a3.abort();
        t != null && (i = t.signal) !== null && i !== undefined && i.aborted && c2(), t == null || (o2 = t.signal) === null || o2 === undefined || o2.addEventListener("abort", c2);
        let h4, d3, y4 = false;
        function b4() {
          y4 = true;
        }
        async function R3() {
          try {
            for await (let m3 of f2) {
              var _4;
              if (y4)
                return;
              if (l3.aborted)
                throw new Ue;
              try {
                m3 = e(m3, s2);
              } catch (A3) {
                m3 = pu(A3);
              }
              m3 !== Yn && (typeof ((_4 = m3) === null || _4 === undefined ? undefined : _4.catch) == "function" && m3.catch(b4), u3.push(m3), h4 && (h4(), h4 = null), !y4 && u3.length && u3.length >= r && await new hu((A3) => {
                d3 = A3;
              }));
            }
            u3.push(yu);
          } catch (m3) {
            let A3 = pu(m3);
            sg(A3, undefined, b4), u3.push(A3);
          } finally {
            var E5;
            y4 = true, h4 && (h4(), h4 = null), t == null || (E5 = t.signal) === null || E5 === undefined || E5.removeEventListener("abort", c2);
          }
        }
        R3();
        try {
          for (;; ) {
            for (;u3.length > 0; ) {
              let _4 = await u3[0];
              if (_4 === yu)
                return;
              if (l3.aborted)
                throw new Ue;
              _4 !== Yn && (yield _4), u3.shift(), d3 && (d3(), d3 = null);
            }
            await new hu((_4) => {
              h4 = _4;
            });
          }
        } finally {
          a3.abort(), y4 = true, d3 && (d3(), d3 = null);
        }
      }.call(this);
    }
    function cg(e = undefined) {
      return e != null && ur(e, "options"), e?.signal != null && lr(e.signal, "options.signal"), async function* () {
        let r = 0;
        for await (let i of this) {
          var n;
          if (e != null && (n = e.signal) !== null && n !== undefined && n.aborted)
            throw new Ue({ cause: e.signal.reason });
          yield [r++, i];
        }
      }.call(this);
    }
    async function bu(e, t = undefined) {
      for await (let r of zo.call(this, e, t))
        return true;
      return false;
    }
    async function dg(e, t = undefined) {
      if (typeof e != "function")
        throw new qr("fn", ["Function", "AsyncFunction"], e);
      return !await bu.call(this, async (...r) => !await e(...r), t);
    }
    async function hg(e, t) {
      for await (let r of zo.call(this, e, t))
        return r;
    }
    async function pg(e, t) {
      if (typeof e != "function")
        throw new qr("fn", ["Function", "AsyncFunction"], e);
      async function r(n, i) {
        return await e(n, i), Yn;
      }
      for await (let n of Kn.call(this, r, t))
        ;
    }
    function zo(e, t) {
      if (typeof e != "function")
        throw new qr("fn", ["Function", "AsyncFunction"], e);
      async function r(n, i) {
        return await e(n, i) ? n : Yn;
      }
      return Kn.call(this, r, t);
    }
    var Co = class extends tg {
      constructor() {
        super("reduce"), this.message = "Reduce of an empty stream requires an initial value";
      }
    };
    async function yg(e, t, r) {
      var n;
      if (typeof e != "function")
        throw new qr("reducer", ["Function", "AsyncFunction"], e);
      r != null && ur(r, "options"), r?.signal != null && lr(r.signal, "options.signal");
      let i = arguments.length > 1;
      if (r != null && (n = r.signal) !== null && n !== undefined && n.aborted) {
        let l3 = new Ue(undefined, { cause: r.signal.reason });
        throw this.once("error", () => {
        }), await og(this.destroy(l3)), l3;
      }
      let o2 = new _u, a3 = o2.signal;
      if (r != null && r.signal) {
        let l3 = { once: true, [ig]: this };
        r.signal.addEventListener("abort", () => o2.abort(), l3);
      }
      let f2 = false;
      try {
        for await (let l3 of this) {
          var u3;
          if (f2 = true, r != null && (u3 = r.signal) !== null && u3 !== undefined && u3.aborted)
            throw new Ue;
          i ? t = await e(t, l3, { signal: a3 }) : (t = l3, i = true);
        }
        if (!f2 && !i)
          throw new Co;
      } finally {
        o2.abort();
      }
      return t;
    }
    async function _g(e) {
      e != null && ur(e, "options"), e?.signal != null && lr(e.signal, "options.signal");
      let t = [];
      for await (let n of this) {
        var r;
        if (e != null && (r = e.signal) !== null && r !== undefined && r.aborted)
          throw new Ue(undefined, { cause: e.signal.reason });
        ag(t, n);
      }
      return t;
    }
    function gg(e, t) {
      let r = Kn.call(this, e, t);
      return async function* () {
        for await (let i of r)
          yield* i;
      }.call(this);
    }
    function wu(e) {
      if (e = lg(e), ug(e))
        return 0;
      if (e < 0)
        throw new rg("number", ">= 0", e);
      return e;
    }
    function bg(e, t = undefined) {
      return t != null && ur(t, "options"), t?.signal != null && lr(t.signal, "options.signal"), e = wu(e), async function* () {
        var n;
        if (t != null && (n = t.signal) !== null && n !== undefined && n.aborted)
          throw new Ue;
        for await (let o2 of this) {
          var i;
          if (t != null && (i = t.signal) !== null && i !== undefined && i.aborted)
            throw new Ue;
          e-- <= 0 && (yield o2);
        }
      }.call(this);
    }
    function wg(e, t = undefined) {
      return t != null && ur(t, "options"), t?.signal != null && lr(t.signal, "options.signal"), e = wu(e), async function* () {
        var n;
        if (t != null && (n = t.signal) !== null && n !== undefined && n.aborted)
          throw new Ue;
        for await (let o2 of this) {
          var i;
          if (t != null && (i = t.signal) !== null && i !== undefined && i.aborted)
            throw new Ue;
          if (e-- > 0)
            yield o2;
          else
            return;
        }
      }.call(this);
    }
    Wo.exports.streamReturningOperators = { asIndexedPairs: cg, drop: bg, filter: zo, flatMap: gg, map: Kn, take: wg };
    Wo.exports.promiseReturningOperators = { every: dg, forEach: pg, reduce: yg, toArray: _g, some: bu, find: hg };
  });
  Tt = g4((PA, Tu) => {
    var ft2 = (it(), se(ye)), { aggregateTwoErrors: Eg, codes: { ERR_MULTIPLE_CALLBACK: vg }, AbortError: mg } = ne(), { Symbol: Su } = V4(), { kDestroyed: Sg, isDestroyed: Ag, isFinished: xg, isServerRequest: Rg } = ot2(), Au = Su("kDestroy"), Zo = Su("kConstruct");
    function xu(e, t, r) {
      e && (e.stack, t && !t.errored && (t.errored = e), r && !r.errored && (r.errored = e));
    }
    function Ig(e, t) {
      let r = this._readableState, n = this._writableState, i = n || r;
      return n && n.destroyed || r && r.destroyed ? (typeof t == "function" && t(), this) : (xu(e, n, r), n && (n.destroyed = true), r && (r.destroyed = true), i.constructed ? vu(this, e, t) : this.once(Au, function(o2) {
        vu(this, Eg(o2, e), t);
      }), this);
    }
    function vu(e, t, r) {
      let n = false;
      function i(o2) {
        if (n)
          return;
        n = true;
        let { _readableState: a3, _writableState: f2 } = e;
        xu(o2, f2, a3), f2 && (f2.closed = true), a3 && (a3.closed = true), typeof r == "function" && r(o2), o2 ? ft2.nextTick(Tg, e, o2) : ft2.nextTick(Ru, e);
      }
      try {
        e._destroy(t || null, i);
      } catch (o2) {
        i(o2);
      }
    }
    function Tg(e, t) {
      $o(e, t), Ru(e);
    }
    function Ru(e) {
      let { _readableState: t, _writableState: r } = e;
      r && (r.closeEmitted = true), t && (t.closeEmitted = true), (r && r.emitClose || t && t.emitClose) && e.emit("close");
    }
    function $o(e, t) {
      let { _readableState: r, _writableState: n } = e;
      n && n.errorEmitted || r && r.errorEmitted || (n && (n.errorEmitted = true), r && (r.errorEmitted = true), e.emit("error", t));
    }
    function Og() {
      let e = this._readableState, t = this._writableState;
      e && (e.constructed = true, e.closed = false, e.closeEmitted = false, e.destroyed = false, e.errored = null, e.errorEmitted = false, e.reading = false, e.ended = e.readable === false, e.endEmitted = e.readable === false), t && (t.constructed = true, t.destroyed = false, t.closed = false, t.closeEmitted = false, t.errored = null, t.errorEmitted = false, t.finalCalled = false, t.prefinished = false, t.ended = t.writable === false, t.ending = t.writable === false, t.finished = t.writable === false);
    }
    function Go(e, t, r) {
      let { _readableState: n, _writableState: i } = e;
      if (i && i.destroyed || n && n.destroyed)
        return this;
      n && n.autoDestroy || i && i.autoDestroy ? e.destroy(t) : t && (t.stack, i && !i.errored && (i.errored = t), n && !n.errored && (n.errored = t), r ? ft2.nextTick($o, e, t) : $o(e, t));
    }
    function Ng(e, t) {
      if (typeof e._construct != "function")
        return;
      let { _readableState: r, _writableState: n } = e;
      r && (r.constructed = false), n && (n.constructed = false), e.once(Zo, t), !(e.listenerCount(Zo) > 1) && ft2.nextTick(kg, e);
    }
    function kg(e) {
      let t = false;
      function r(n) {
        if (t) {
          Go(e, n ?? new vg);
          return;
        }
        t = true;
        let { _readableState: i, _writableState: o2 } = e, a3 = o2 || i;
        i && (i.constructed = true), o2 && (o2.constructed = true), a3.destroyed ? e.emit(Au, n) : n ? Go(e, n, true) : ft2.nextTick(Fg, e);
      }
      try {
        e._construct(r);
      } catch (n) {
        r(n);
      }
    }
    function Fg(e) {
      e.emit(Zo);
    }
    function mu(e) {
      return e && e.setHeader && typeof e.abort == "function";
    }
    function Iu(e) {
      e.emit("close");
    }
    function Lg(e, t) {
      e.emit("error", t), ft2.nextTick(Iu, e);
    }
    function Dg(e, t) {
      !e || Ag(e) || (!t && !xg(e) && (t = new mg), Rg(e) ? (e.socket = null, e.destroy(t)) : mu(e) ? e.abort() : mu(e.req) ? e.req.abort() : typeof e.destroy == "function" ? e.destroy(t) : typeof e.close == "function" ? e.close() : t ? ft2.nextTick(Lg, e, t) : ft2.nextTick(Iu, e), e.destroyed || (e[Sg] = true));
    }
    Tu.exports = { construct: Ng, destroyer: Dg, destroy: Ig, undestroy: Og, errorOrDestroy: Go };
  });
  Qn = g4((MA, Ho) => {
    var sr = typeof Reflect == "object" ? Reflect : null, Ou = sr && typeof sr.apply == "function" ? sr.apply : function(t, r, n) {
      return Function.prototype.apply.call(t, r, n);
    }, Xn;
    sr && typeof sr.ownKeys == "function" ? Xn = sr.ownKeys : Object.getOwnPropertySymbols ? Xn = function(t) {
      return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
    } : Xn = function(t) {
      return Object.getOwnPropertyNames(t);
    };
    function Bg(e) {
      console && console.warn && console.warn(e);
    }
    var ku = Number.isNaN || function(t) {
      return t !== t;
    };
    function U3() {
      U3.init.call(this);
    }
    Ho.exports = U3;
    Ho.exports.once = Ug;
    U3.EventEmitter = U3;
    U3.prototype._events = undefined;
    U3.prototype._eventsCount = 0;
    U3.prototype._maxListeners = undefined;
    var Nu = 10;
    function Jn(e) {
      if (typeof e != "function")
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e);
    }
    Object.defineProperty(U3, "defaultMaxListeners", { enumerable: true, get: function() {
      return Nu;
    }, set: function(e) {
      if (typeof e != "number" || e < 0 || ku(e))
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
      Nu = e;
    } });
    U3.init = function() {
      (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
    };
    U3.prototype.setMaxListeners = function(t) {
      if (typeof t != "number" || t < 0 || ku(t))
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
      return this._maxListeners = t, this;
    };
    function Fu(e) {
      return e._maxListeners === undefined ? U3.defaultMaxListeners : e._maxListeners;
    }
    U3.prototype.getMaxListeners = function() {
      return Fu(this);
    };
    U3.prototype.emit = function(t) {
      for (var r = [], n = 1;n < arguments.length; n++)
        r.push(arguments[n]);
      var i = t === "error", o2 = this._events;
      if (o2 !== undefined)
        i = i && o2.error === undefined;
      else if (!i)
        return false;
      if (i) {
        var a3;
        if (r.length > 0 && (a3 = r[0]), a3 instanceof Error)
          throw a3;
        var f2 = new Error("Unhandled error." + (a3 ? " (" + a3.message + ")" : ""));
        throw f2.context = a3, f2;
      }
      var u3 = o2[t];
      if (u3 === undefined)
        return false;
      if (typeof u3 == "function")
        Ou(u3, this, r);
      else
        for (var l3 = u3.length, s2 = Mu(u3, l3), n = 0;n < l3; ++n)
          Ou(s2[n], this, r);
      return true;
    };
    function Lu(e, t, r, n) {
      var i, o2, a3;
      if (Jn(r), o2 = e._events, o2 === undefined ? (o2 = e._events = Object.create(null), e._eventsCount = 0) : (o2.newListener !== undefined && (e.emit("newListener", t, r.listener ? r.listener : r), o2 = e._events), a3 = o2[t]), a3 === undefined)
        a3 = o2[t] = r, ++e._eventsCount;
      else if (typeof a3 == "function" ? a3 = o2[t] = n ? [r, a3] : [a3, r] : n ? a3.unshift(r) : a3.push(r), i = Fu(e), i > 0 && a3.length > i && !a3.warned) {
        a3.warned = true;
        var f2 = new Error("Possible EventEmitter memory leak detected. " + a3.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        f2.name = "MaxListenersExceededWarning", f2.emitter = e, f2.type = t, f2.count = a3.length, Bg(f2);
      }
      return e;
    }
    U3.prototype.addListener = function(t, r) {
      return Lu(this, t, r, false);
    };
    U3.prototype.on = U3.prototype.addListener;
    U3.prototype.prependListener = function(t, r) {
      return Lu(this, t, r, true);
    };
    function Pg() {
      if (!this.fired)
        return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
    }
    function Du(e, t, r) {
      var n = { fired: false, wrapFn: undefined, target: e, type: t, listener: r }, i = Pg.bind(n);
      return i.listener = r, n.wrapFn = i, i;
    }
    U3.prototype.once = function(t, r) {
      return Jn(r), this.on(t, Du(this, t, r)), this;
    };
    U3.prototype.prependOnceListener = function(t, r) {
      return Jn(r), this.prependListener(t, Du(this, t, r)), this;
    };
    U3.prototype.removeListener = function(t, r) {
      var n, i, o2, a3, f2;
      if (Jn(r), i = this._events, i === undefined)
        return this;
      if (n = i[t], n === undefined)
        return this;
      if (n === r || n.listener === r)
        --this._eventsCount === 0 ? this._events = Object.create(null) : (delete i[t], i.removeListener && this.emit("removeListener", t, n.listener || r));
      else if (typeof n != "function") {
        for (o2 = -1, a3 = n.length - 1;a3 >= 0; a3--)
          if (n[a3] === r || n[a3].listener === r) {
            f2 = n[a3].listener, o2 = a3;
            break;
          }
        if (o2 < 0)
          return this;
        o2 === 0 ? n.shift() : Mg(n, o2), n.length === 1 && (i[t] = n[0]), i.removeListener !== undefined && this.emit("removeListener", t, f2 || r);
      }
      return this;
    };
    U3.prototype.off = U3.prototype.removeListener;
    U3.prototype.removeAllListeners = function(t) {
      var r, n, i;
      if (n = this._events, n === undefined)
        return this;
      if (n.removeListener === undefined)
        return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : n[t] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete n[t]), this;
      if (arguments.length === 0) {
        var o2 = Object.keys(n), a3;
        for (i = 0;i < o2.length; ++i)
          a3 = o2[i], a3 !== "removeListener" && this.removeAllListeners(a3);
        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
      }
      if (r = n[t], typeof r == "function")
        this.removeListener(t, r);
      else if (r !== undefined)
        for (i = r.length - 1;i >= 0; i--)
          this.removeListener(t, r[i]);
      return this;
    };
    function Bu(e, t, r) {
      var n = e._events;
      if (n === undefined)
        return [];
      var i = n[t];
      return i === undefined ? [] : typeof i == "function" ? r ? [i.listener || i] : [i] : r ? jg(i) : Mu(i, i.length);
    }
    U3.prototype.listeners = function(t) {
      return Bu(this, t, true);
    };
    U3.prototype.rawListeners = function(t) {
      return Bu(this, t, false);
    };
    U3.listenerCount = function(e, t) {
      return typeof e.listenerCount == "function" ? e.listenerCount(t) : Pu.call(e, t);
    };
    U3.prototype.listenerCount = Pu;
    function Pu(e) {
      var t = this._events;
      if (t !== undefined) {
        var r = t[e];
        if (typeof r == "function")
          return 1;
        if (r !== undefined)
          return r.length;
      }
      return 0;
    }
    U3.prototype.eventNames = function() {
      return this._eventsCount > 0 ? Xn(this._events) : [];
    };
    function Mu(e, t) {
      for (var r = new Array(t), n = 0;n < t; ++n)
        r[n] = e[n];
      return r;
    }
    function Mg(e, t) {
      for (;t + 1 < e.length; t++)
        e[t] = e[t + 1];
      e.pop();
    }
    function jg(e) {
      for (var t = new Array(e.length), r = 0;r < t.length; ++r)
        t[r] = e[r].listener || e[r];
      return t;
    }
    function Ug(e, t) {
      return new Promise(function(r, n) {
        function i(a3) {
          e.removeListener(t, o2), n(a3);
        }
        function o2() {
          typeof e.removeListener == "function" && e.removeListener("error", i), r([].slice.call(arguments));
        }
        ju(e, t, o2, { once: true }), t !== "error" && qg(e, i, { once: true });
      });
    }
    function qg(e, t, r) {
      typeof e.on == "function" && ju(e, "error", t, r);
    }
    function ju(e, t, r, n) {
      if (typeof e.on == "function")
        n.once ? e.once(t, r) : e.on(t, r);
      else if (typeof e.addEventListener == "function")
        e.addEventListener(t, function i(o2) {
          n.once && e.removeEventListener(t, i), r(o2);
        });
      else
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
    }
  });
  ri = g4((jA, qu) => {
    var { ArrayIsArray: Cg, ObjectSetPrototypeOf: Uu } = V4(), { EventEmitter: ei } = Qn();
    function ti(e) {
      ei.call(this, e);
    }
    Uu(ti.prototype, ei.prototype);
    Uu(ti, ei);
    ti.prototype.pipe = function(e, t) {
      let r = this;
      function n(s2) {
        e.writable && e.write(s2) === false && r.pause && r.pause();
      }
      r.on("data", n);
      function i() {
        r.readable && r.resume && r.resume();
      }
      e.on("drain", i), !e._isStdio && (!t || t.end !== false) && (r.on("end", a3), r.on("close", f2));
      let o2 = false;
      function a3() {
        o2 || (o2 = true, e.end());
      }
      function f2() {
        o2 || (o2 = true, typeof e.destroy == "function" && e.destroy());
      }
      function u3(s2) {
        l3(), ei.listenerCount(this, "error") === 0 && this.emit("error", s2);
      }
      Vo(r, "error", u3), Vo(e, "error", u3);
      function l3() {
        r.removeListener("data", n), e.removeListener("drain", i), r.removeListener("end", a3), r.removeListener("close", f2), r.removeListener("error", u3), e.removeListener("error", u3), r.removeListener("end", l3), r.removeListener("close", l3), e.removeListener("close", l3);
      }
      return r.on("end", l3), r.on("close", l3), e.on("close", l3), e.emit("pipe", r), e;
    };
    function Vo(e, t, r) {
      if (typeof e.prependListener == "function")
        return e.prependListener(t, r);
      !e._events || !e._events[t] ? e.on(t, r) : Cg(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [r, e._events[t]];
    }
    qu.exports = { Stream: ti, prependListener: Vo };
  });
  ii = g4((UA, ni) => {
    var { AbortError: zg, codes: Wg } = ne(), Zg = at2(), { ERR_INVALID_ARG_TYPE: Cu } = Wg, $g = (e, t) => {
      if (typeof e != "object" || !("aborted" in e))
        throw new Cu(t, "AbortSignal", e);
    };
    function Gg(e) {
      return !!(e && typeof e.pipe == "function");
    }
    ni.exports.addAbortSignal = function(t, r) {
      if ($g(t, "signal"), !Gg(r))
        throw new Cu("stream", "stream.Stream", r);
      return ni.exports.addAbortSignalNoValidate(t, r);
    };
    ni.exports.addAbortSignalNoValidate = function(e, t) {
      if (typeof e != "object" || !("aborted" in e))
        return t;
      let r = () => {
        t.destroy(new zg(undefined, { cause: e.reason }));
      };
      return e.aborted ? r() : (e.addEventListener("abort", r), Zg(t, () => e.removeEventListener("abort", r))), t;
    };
  });
  Zu = g4((CA, Wu) => {
    var { StringPrototypeSlice: zu, SymbolIterator: Hg, TypedArrayPrototypeSet: oi, Uint8Array: Vg } = V4(), { Buffer: Yo } = xe(), { inspect: Yg } = Pe2();
    Wu.exports = class {
      constructor() {
        this.head = null, this.tail = null, this.length = 0;
      }
      push(t) {
        let r = { data: t, next: null };
        this.length > 0 ? this.tail.next = r : this.head = r, this.tail = r, ++this.length;
      }
      unshift(t) {
        let r = { data: t, next: this.head };
        this.length === 0 && (this.tail = r), this.head = r, ++this.length;
      }
      shift() {
        if (this.length === 0)
          return;
        let t = this.head.data;
        return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
      }
      clear() {
        this.head = this.tail = null, this.length = 0;
      }
      join(t) {
        if (this.length === 0)
          return "";
        let r = this.head, n = "" + r.data;
        for (;(r = r.next) !== null; )
          n += t + r.data;
        return n;
      }
      concat(t) {
        if (this.length === 0)
          return Yo.alloc(0);
        let r = Yo.allocUnsafe(t >>> 0), n = this.head, i = 0;
        for (;n; )
          oi(r, n.data, i), i += n.data.length, n = n.next;
        return r;
      }
      consume(t, r) {
        let n = this.head.data;
        if (t < n.length) {
          let i = n.slice(0, t);
          return this.head.data = n.slice(t), i;
        }
        return t === n.length ? this.shift() : r ? this._getString(t) : this._getBuffer(t);
      }
      first() {
        return this.head.data;
      }
      *[Hg]() {
        for (let t = this.head;t; t = t.next)
          yield t.data;
      }
      _getString(t) {
        let r = "", n = this.head, i = 0;
        do {
          let o2 = n.data;
          if (t > o2.length)
            r += o2, t -= o2.length;
          else {
            t === o2.length ? (r += o2, ++i, n.next ? this.head = n.next : this.head = this.tail = null) : (r += zu(o2, 0, t), this.head = n, n.data = zu(o2, t));
            break;
          }
          ++i;
        } while ((n = n.next) !== null);
        return this.length -= i, r;
      }
      _getBuffer(t) {
        let r = Yo.allocUnsafe(t), n = t, i = this.head, o2 = 0;
        do {
          let a3 = i.data;
          if (t > a3.length)
            oi(r, a3, n - t), t -= a3.length;
          else {
            t === a3.length ? (oi(r, a3, n - t), ++o2, i.next ? this.head = i.next : this.head = this.tail = null) : (oi(r, new Vg(a3.buffer, a3.byteOffset, t), n - t), this.head = i, i.data = a3.slice(t));
            break;
          }
          ++o2;
        } while ((i = i.next) !== null);
        return this.length -= o2, r;
      }
      [Symbol.for("nodejs.util.inspect.custom")](t, r) {
        return Yg(this, { ...r, depth: 0, customInspect: false });
      }
    };
  });
  ai = g4((zA, Gu) => {
    var { MathFloor: Kg, NumberIsInteger: Xg } = V4(), { ERR_INVALID_ARG_VALUE: Jg } = ne().codes;
    function Qg(e, t, r) {
      return e.highWaterMark != null ? e.highWaterMark : t ? e[r] : null;
    }
    function $u(e) {
      return e ? 16 : 16 * 1024;
    }
    function eb(e, t, r, n) {
      let i = Qg(t, n, r);
      if (i != null) {
        if (!Xg(i) || i < 0) {
          let o2 = n ? `options.${r}` : "options.highWaterMark";
          throw new Jg(o2, i);
        }
        return Kg(i);
      }
      return $u(e.objectMode);
    }
    Gu.exports = { getHighWaterMark: eb, getDefaultHighWaterMark: $u };
  });
  Yu = g4((Ko, Vu) => {
    var fi = xe(), qe2 = fi.Buffer;
    function Hu(e, t) {
      for (var r in e)
        t[r] = e[r];
    }
    qe2.from && qe2.alloc && qe2.allocUnsafe && qe2.allocUnsafeSlow ? Vu.exports = fi : (Hu(fi, Ko), Ko.Buffer = Ot);
    function Ot(e, t, r) {
      return qe2(e, t, r);
    }
    Ot.prototype = Object.create(qe2.prototype);
    Hu(qe2, Ot);
    Ot.from = function(e, t, r) {
      if (typeof e == "number")
        throw new TypeError("Argument must not be a number");
      return qe2(e, t, r);
    };
    Ot.alloc = function(e, t, r) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      var n = qe2(e);
      return t !== undefined ? typeof r == "string" ? n.fill(t, r) : n.fill(t) : n.fill(0), n;
    };
    Ot.allocUnsafe = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return qe2(e);
    };
    Ot.allocUnsafeSlow = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return fi.SlowBuffer(e);
    };
  });
  Ju = g4((Xu) => {
    var Jo = Yu().Buffer, Ku = Jo.isEncoding || function(e) {
      switch (e = "" + e, e && e.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return true;
        default:
          return false;
      }
    };
    function tb(e) {
      if (!e)
        return "utf8";
      for (var t;; )
        switch (e) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return e;
          default:
            if (t)
              return;
            e = ("" + e).toLowerCase(), t = true;
        }
    }
    function rb(e) {
      var t = tb(e);
      if (typeof t != "string" && (Jo.isEncoding === Ku || !Ku(e)))
        throw new Error("Unknown encoding: " + e);
      return t || e;
    }
    Xu.StringDecoder = Cr;
    function Cr(e) {
      this.encoding = rb(e);
      var t;
      switch (this.encoding) {
        case "utf16le":
          this.text = lb, this.end = ub, t = 4;
          break;
        case "utf8":
          this.fillLast = ob, t = 4;
          break;
        case "base64":
          this.text = sb, this.end = cb, t = 3;
          break;
        default:
          this.write = db, this.end = hb;
          return;
      }
      this.lastNeed = 0, this.lastTotal = 0, this.lastChar = Jo.allocUnsafe(t);
    }
    Cr.prototype.write = function(e) {
      if (e.length === 0)
        return "";
      var t, r;
      if (this.lastNeed) {
        if (t = this.fillLast(e), t === undefined)
          return "";
        r = this.lastNeed, this.lastNeed = 0;
      } else
        r = 0;
      return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || "";
    };
    Cr.prototype.end = fb;
    Cr.prototype.text = ab;
    Cr.prototype.fillLast = function(e) {
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;
    };
    function Xo(e) {
      return e <= 127 ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : e >> 6 === 2 ? -1 : -2;
    }
    function nb(e, t, r) {
      var n = t.length - 1;
      if (n < r)
        return 0;
      var i = Xo(t[n]);
      return i >= 0 ? (i > 0 && (e.lastNeed = i - 1), i) : --n < r || i === -2 ? 0 : (i = Xo(t[n]), i >= 0 ? (i > 0 && (e.lastNeed = i - 2), i) : --n < r || i === -2 ? 0 : (i = Xo(t[n]), i >= 0 ? (i > 0 && (i === 2 ? i = 0 : e.lastNeed = i - 3), i) : 0));
    }
    function ib(e, t, r) {
      if ((t[0] & 192) !== 128)
        return e.lastNeed = 0, "�";
      if (e.lastNeed > 1 && t.length > 1) {
        if ((t[1] & 192) !== 128)
          return e.lastNeed = 1, "�";
        if (e.lastNeed > 2 && t.length > 2 && (t[2] & 192) !== 128)
          return e.lastNeed = 2, "�";
      }
    }
    function ob(e) {
      var t = this.lastTotal - this.lastNeed, r = ib(this, e, t);
      if (r !== undefined)
        return r;
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, t, 0, e.length), this.lastNeed -= e.length;
    }
    function ab(e, t) {
      var r = nb(this, e, t);
      if (!this.lastNeed)
        return e.toString("utf8", t);
      this.lastTotal = r;
      var n = e.length - (r - this.lastNeed);
      return e.copy(this.lastChar, 0, n), e.toString("utf8", t, n);
    }
    function fb(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + "�" : t;
    }
    function lb(e, t) {
      if ((e.length - t) % 2 === 0) {
        var r = e.toString("utf16le", t);
        if (r) {
          var n = r.charCodeAt(r.length - 1);
          if (n >= 55296 && n <= 56319)
            return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], r.slice(0, -1);
        }
        return r;
      }
      return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString("utf16le", t, e.length - 1);
    }
    function ub(e) {
      var t = e && e.length ? this.write(e) : "";
      if (this.lastNeed) {
        var r = this.lastTotal - this.lastNeed;
        return t + this.lastChar.toString("utf16le", 0, r);
      }
      return t;
    }
    function sb(e, t) {
      var r = (e.length - t) % 3;
      return r === 0 ? e.toString("base64", t) : (this.lastNeed = 3 - r, this.lastTotal = 3, r === 1 ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString("base64", t, e.length - r));
    }
    function cb(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t;
    }
    function db(e) {
      return e.toString(this.encoding);
    }
    function hb(e) {
      return e && e.length ? this.write(e) : "";
    }
  });
  Qo = g4((ZA, rs) => {
    var Qu = (it(), se(ye)), { PromisePrototypeThen: pb, SymbolAsyncIterator: es, SymbolIterator: ts } = V4(), { Buffer: yb } = xe(), { ERR_INVALID_ARG_TYPE: _b, ERR_STREAM_NULL_VALUES: gb } = ne().codes;
    function bb(e, t, r) {
      let n;
      if (typeof t == "string" || t instanceof yb)
        return new e({ objectMode: true, ...r, read() {
          this.push(t), this.push(null);
        } });
      let i;
      if (t && t[es])
        i = true, n = t[es]();
      else if (t && t[ts])
        i = false, n = t[ts]();
      else
        throw new _b("iterable", ["Iterable"], t);
      let o2 = new e({ objectMode: true, highWaterMark: 1, ...r }), a3 = false;
      o2._read = function() {
        a3 || (a3 = true, u3());
      }, o2._destroy = function(l3, s2) {
        pb(f2(l3), () => Qu.nextTick(s2, l3), (c2) => Qu.nextTick(s2, c2 || l3));
      };
      async function f2(l3) {
        let s2 = l3 != null, c2 = typeof n.throw == "function";
        if (s2 && c2) {
          let { value: h4, done: d3 } = await n.throw(l3);
          if (await h4, d3)
            return;
        }
        if (typeof n.return == "function") {
          let { value: h4 } = await n.return();
          await h4;
        }
      }
      async function u3() {
        for (;; ) {
          try {
            let { value: l3, done: s2 } = i ? await n.next() : n.next();
            if (s2)
              o2.push(null);
            else {
              let c2 = l3 && typeof l3.then == "function" ? await l3 : l3;
              if (c2 === null)
                throw a3 = false, new gb;
              if (o2.push(c2))
                continue;
              a3 = false;
            }
          } catch (l3) {
            o2.destroy(l3);
          }
          break;
        }
      }
      return o2;
    }
    rs.exports = bb;
  });
  zr = g4(($A, ys) => {
    var Ie = (it(), se(ye)), { ArrayPrototypeIndexOf: wb, NumberIsInteger: Eb, NumberIsNaN: vb, NumberParseInt: mb, ObjectDefineProperties: os, ObjectKeys: Sb, ObjectSetPrototypeOf: as, Promise: Ab, SafeSet: xb, SymbolAsyncIterator: Rb, Symbol: Ib } = V4();
    ys.exports = F2;
    F2.ReadableState = oa;
    var { EventEmitter: Tb } = Qn(), { Stream: lt3, prependListener: Ob } = ri(), { Buffer: ea } = xe(), { addAbortSignal: Nb } = ii(), kb = at2(), B3 = Pe2().debuglog("stream", (e) => {
      B3 = e;
    }), Fb = Zu(), dr2 = Tt(), { getHighWaterMark: Lb, getDefaultHighWaterMark: Db } = ai(), { aggregateTwoErrors: ns, codes: { ERR_INVALID_ARG_TYPE: Bb, ERR_METHOD_NOT_IMPLEMENTED: Pb, ERR_OUT_OF_RANGE: Mb, ERR_STREAM_PUSH_AFTER_EOF: jb, ERR_STREAM_UNSHIFT_AFTER_END_EVENT: Ub } } = ne(), { validateObject: qb } = Ur3(), Nt = Ib("kPaused"), { StringDecoder: fs } = Ju(), Cb = Qo();
    as(F2.prototype, lt3.prototype);
    as(F2, lt3);
    var ta = () => {
    }, { errorOrDestroy: cr } = dr2;
    function oa(e, t, r) {
      typeof r != "boolean" && (r = t instanceof Ce()), this.objectMode = !!(e && e.objectMode), r && (this.objectMode = this.objectMode || !!(e && e.readableObjectMode)), this.highWaterMark = e ? Lb(this, e, "readableHighWaterMark", r) : Db(false), this.buffer = new Fb, this.length = 0, this.pipes = [], this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.constructed = true, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this[Nt] = null, this.errorEmitted = false, this.emitClose = !e || e.emitClose !== false, this.autoDestroy = !e || e.autoDestroy !== false, this.destroyed = false, this.errored = null, this.closed = false, this.closeEmitted = false, this.defaultEncoding = e && e.defaultEncoding || "utf8", this.awaitDrainWriters = null, this.multiAwaitDrain = false, this.readingMore = false, this.dataEmitted = false, this.decoder = null, this.encoding = null, e && e.encoding && (this.decoder = new fs(e.encoding), this.encoding = e.encoding);
    }
    function F2(e) {
      if (!(this instanceof F2))
        return new F2(e);
      let t = this instanceof Ce();
      this._readableState = new oa(e, this, t), e && (typeof e.read == "function" && (this._read = e.read), typeof e.destroy == "function" && (this._destroy = e.destroy), typeof e.construct == "function" && (this._construct = e.construct), e.signal && !t && Nb(e.signal, this)), lt3.call(this, e), dr2.construct(this, () => {
        this._readableState.needReadable && li(this, this._readableState);
      });
    }
    F2.prototype.destroy = dr2.destroy;
    F2.prototype._undestroy = dr2.undestroy;
    F2.prototype._destroy = function(e, t) {
      t(e);
    };
    F2.prototype[Tb.captureRejectionSymbol] = function(e) {
      this.destroy(e);
    };
    F2.prototype.push = function(e, t) {
      return ls(this, e, t, false);
    };
    F2.prototype.unshift = function(e, t) {
      return ls(this, e, t, true);
    };
    function ls(e, t, r, n) {
      B3("readableAddChunk", t);
      let i = e._readableState, o2;
      if (i.objectMode || (typeof t == "string" ? (r = r || i.defaultEncoding, i.encoding !== r && (n && i.encoding ? t = ea.from(t, r).toString(i.encoding) : (t = ea.from(t, r), r = ""))) : t instanceof ea ? r = "" : lt3._isUint8Array(t) ? (t = lt3._uint8ArrayToBuffer(t), r = "") : t != null && (o2 = new Bb("chunk", ["string", "Buffer", "Uint8Array"], t))), o2)
        cr(e, o2);
      else if (t === null)
        i.reading = false, Zb(e, i);
      else if (i.objectMode || t && t.length > 0)
        if (n)
          if (i.endEmitted)
            cr(e, new Ub);
          else {
            if (i.destroyed || i.errored)
              return false;
            ra(e, i, t, true);
          }
        else if (i.ended)
          cr(e, new jb);
        else {
          if (i.destroyed || i.errored)
            return false;
          i.reading = false, i.decoder && !r ? (t = i.decoder.write(t), i.objectMode || t.length !== 0 ? ra(e, i, t, false) : li(e, i)) : ra(e, i, t, false);
        }
      else
        n || (i.reading = false, li(e, i));
      return !i.ended && (i.length < i.highWaterMark || i.length === 0);
    }
    function ra(e, t, r, n) {
      t.flowing && t.length === 0 && !t.sync && e.listenerCount("data") > 0 ? (t.multiAwaitDrain ? t.awaitDrainWriters.clear() : t.awaitDrainWriters = null, t.dataEmitted = true, e.emit("data", r)) : (t.length += t.objectMode ? 1 : r.length, n ? t.buffer.unshift(r) : t.buffer.push(r), t.needReadable && ui(e)), li(e, t);
    }
    F2.prototype.isPaused = function() {
      let e = this._readableState;
      return e[Nt] === true || e.flowing === false;
    };
    F2.prototype.setEncoding = function(e) {
      let t = new fs(e);
      this._readableState.decoder = t, this._readableState.encoding = this._readableState.decoder.encoding;
      let r = this._readableState.buffer, n = "";
      for (let i of r)
        n += t.write(i);
      return r.clear(), n !== "" && r.push(n), this._readableState.length = n.length, this;
    };
    var zb = 1073741824;
    function Wb(e) {
      if (e > zb)
        throw new Mb("size", "<= 1GiB", e);
      return e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++, e;
    }
    function is(e, t) {
      return e <= 0 || t.length === 0 && t.ended ? 0 : t.objectMode ? 1 : vb(e) ? t.flowing && t.length ? t.buffer.first().length : t.length : e <= t.length ? e : t.ended ? t.length : 0;
    }
    F2.prototype.read = function(e) {
      B3("read", e), e === undefined ? e = NaN : Eb(e) || (e = mb(e, 10));
      let t = this._readableState, r = e;
      if (e > t.highWaterMark && (t.highWaterMark = Wb(e)), e !== 0 && (t.emittedReadable = false), e === 0 && t.needReadable && ((t.highWaterMark !== 0 ? t.length >= t.highWaterMark : t.length > 0) || t.ended))
        return B3("read: emitReadable", t.length, t.ended), t.length === 0 && t.ended ? na(this) : ui(this), null;
      if (e = is(e, t), e === 0 && t.ended)
        return t.length === 0 && na(this), null;
      let n = t.needReadable;
      if (B3("need readable", n), (t.length === 0 || t.length - e < t.highWaterMark) && (n = true, B3("length less than watermark", n)), t.ended || t.reading || t.destroyed || t.errored || !t.constructed)
        n = false, B3("reading, ended or constructing", n);
      else if (n) {
        B3("do read"), t.reading = true, t.sync = true, t.length === 0 && (t.needReadable = true);
        try {
          this._read(t.highWaterMark);
        } catch (o2) {
          cr(this, o2);
        }
        t.sync = false, t.reading || (e = is(r, t));
      }
      let i;
      return e > 0 ? i = hs(e, t) : i = null, i === null ? (t.needReadable = t.length <= t.highWaterMark, e = 0) : (t.length -= e, t.multiAwaitDrain ? t.awaitDrainWriters.clear() : t.awaitDrainWriters = null), t.length === 0 && (t.ended || (t.needReadable = true), r !== e && t.ended && na(this)), i !== null && !t.errorEmitted && !t.closeEmitted && (t.dataEmitted = true, this.emit("data", i)), i;
    };
    function Zb(e, t) {
      if (B3("onEofChunk"), !t.ended) {
        if (t.decoder) {
          let r = t.decoder.end();
          r && r.length && (t.buffer.push(r), t.length += t.objectMode ? 1 : r.length);
        }
        t.ended = true, t.sync ? ui(e) : (t.needReadable = false, t.emittedReadable = true, us(e));
      }
    }
    function ui(e) {
      let t = e._readableState;
      B3("emitReadable", t.needReadable, t.emittedReadable), t.needReadable = false, t.emittedReadable || (B3("emitReadable", t.flowing), t.emittedReadable = true, Ie.nextTick(us, e));
    }
    function us(e) {
      let t = e._readableState;
      B3("emitReadable_", t.destroyed, t.length, t.ended), !t.destroyed && !t.errored && (t.length || t.ended) && (e.emit("readable"), t.emittedReadable = false), t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark, cs(e);
    }
    function li(e, t) {
      !t.readingMore && t.constructed && (t.readingMore = true, Ie.nextTick($b, e, t));
    }
    function $b(e, t) {
      for (;!t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && t.length === 0); ) {
        let r = t.length;
        if (B3("maybeReadMore read 0"), e.read(0), r === t.length)
          break;
      }
      t.readingMore = false;
    }
    F2.prototype._read = function(e) {
      throw new Pb("_read()");
    };
    F2.prototype.pipe = function(e, t) {
      let r = this, n = this._readableState;
      n.pipes.length === 1 && (n.multiAwaitDrain || (n.multiAwaitDrain = true, n.awaitDrainWriters = new xb(n.awaitDrainWriters ? [n.awaitDrainWriters] : []))), n.pipes.push(e), B3("pipe count=%d opts=%j", n.pipes.length, t);
      let o2 = (!t || t.end !== false) && e !== Ie.stdout && e !== Ie.stderr ? f2 : R3;
      n.endEmitted ? Ie.nextTick(o2) : r.once("end", o2), e.on("unpipe", a3);
      function a3(_4, E5) {
        B3("onunpipe"), _4 === r && E5 && E5.hasUnpiped === false && (E5.hasUnpiped = true, s2());
      }
      function f2() {
        B3("onend"), e.end();
      }
      let u3, l3 = false;
      function s2() {
        B3("cleanup"), e.removeListener("close", y4), e.removeListener("finish", b4), u3 && e.removeListener("drain", u3), e.removeListener("error", d3), e.removeListener("unpipe", a3), r.removeListener("end", f2), r.removeListener("end", R3), r.removeListener("data", h4), l3 = true, u3 && n.awaitDrainWriters && (!e._writableState || e._writableState.needDrain) && u3();
      }
      function c2() {
        l3 || (n.pipes.length === 1 && n.pipes[0] === e ? (B3("false write response, pause", 0), n.awaitDrainWriters = e, n.multiAwaitDrain = false) : n.pipes.length > 1 && n.pipes.includes(e) && (B3("false write response, pause", n.awaitDrainWriters.size), n.awaitDrainWriters.add(e)), r.pause()), u3 || (u3 = Gb(r, e), e.on("drain", u3));
      }
      r.on("data", h4);
      function h4(_4) {
        B3("ondata");
        let E5 = e.write(_4);
        B3("dest.write", E5), E5 === false && c2();
      }
      function d3(_4) {
        if (B3("onerror", _4), R3(), e.removeListener("error", d3), e.listenerCount("error") === 0) {
          let E5 = e._writableState || e._readableState;
          E5 && !E5.errorEmitted ? cr(e, _4) : e.emit("error", _4);
        }
      }
      Ob(e, "error", d3);
      function y4() {
        e.removeListener("finish", b4), R3();
      }
      e.once("close", y4);
      function b4() {
        B3("onfinish"), e.removeListener("close", y4), R3();
      }
      e.once("finish", b4);
      function R3() {
        B3("unpipe"), r.unpipe(e);
      }
      return e.emit("pipe", r), e.writableNeedDrain === true ? n.flowing && c2() : n.flowing || (B3("pipe resume"), r.resume()), e;
    };
    function Gb(e, t) {
      return function() {
        let n = e._readableState;
        n.awaitDrainWriters === t ? (B3("pipeOnDrain", 1), n.awaitDrainWriters = null) : n.multiAwaitDrain && (B3("pipeOnDrain", n.awaitDrainWriters.size), n.awaitDrainWriters.delete(t)), (!n.awaitDrainWriters || n.awaitDrainWriters.size === 0) && e.listenerCount("data") && e.resume();
      };
    }
    F2.prototype.unpipe = function(e) {
      let t = this._readableState, r = { hasUnpiped: false };
      if (t.pipes.length === 0)
        return this;
      if (!e) {
        let i = t.pipes;
        t.pipes = [], this.pause();
        for (let o2 = 0;o2 < i.length; o2++)
          i[o2].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      let n = wb(t.pipes, e);
      return n === -1 ? this : (t.pipes.splice(n, 1), t.pipes.length === 0 && this.pause(), e.emit("unpipe", this, r), this);
    };
    F2.prototype.on = function(e, t) {
      let r = lt3.prototype.on.call(this, e, t), n = this._readableState;
      return e === "data" ? (n.readableListening = this.listenerCount("readable") > 0, n.flowing !== false && this.resume()) : e === "readable" && !n.endEmitted && !n.readableListening && (n.readableListening = n.needReadable = true, n.flowing = false, n.emittedReadable = false, B3("on readable", n.length, n.reading), n.length ? ui(this) : n.reading || Ie.nextTick(Hb, this)), r;
    };
    F2.prototype.addListener = F2.prototype.on;
    F2.prototype.removeListener = function(e, t) {
      let r = lt3.prototype.removeListener.call(this, e, t);
      return e === "readable" && Ie.nextTick(ss, this), r;
    };
    F2.prototype.off = F2.prototype.removeListener;
    F2.prototype.removeAllListeners = function(e) {
      let t = lt3.prototype.removeAllListeners.apply(this, arguments);
      return (e === "readable" || e === undefined) && Ie.nextTick(ss, this), t;
    };
    function ss(e) {
      let t = e._readableState;
      t.readableListening = e.listenerCount("readable") > 0, t.resumeScheduled && t[Nt] === false ? t.flowing = true : e.listenerCount("data") > 0 ? e.resume() : t.readableListening || (t.flowing = null);
    }
    function Hb(e) {
      B3("readable nexttick read 0"), e.read(0);
    }
    F2.prototype.resume = function() {
      let e = this._readableState;
      return e.flowing || (B3("resume"), e.flowing = !e.readableListening, Vb(this, e)), e[Nt] = false, this;
    };
    function Vb(e, t) {
      t.resumeScheduled || (t.resumeScheduled = true, Ie.nextTick(Yb, e, t));
    }
    function Yb(e, t) {
      B3("resume", t.reading), t.reading || e.read(0), t.resumeScheduled = false, e.emit("resume"), cs(e), t.flowing && !t.reading && e.read(0);
    }
    F2.prototype.pause = function() {
      return B3("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (B3("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState[Nt] = true, this;
    };
    function cs(e) {
      let t = e._readableState;
      for (B3("flow", t.flowing);t.flowing && e.read() !== null; )
        ;
    }
    F2.prototype.wrap = function(e) {
      let t = false;
      e.on("data", (n) => {
        !this.push(n) && e.pause && (t = true, e.pause());
      }), e.on("end", () => {
        this.push(null);
      }), e.on("error", (n) => {
        cr(this, n);
      }), e.on("close", () => {
        this.destroy();
      }), e.on("destroy", () => {
        this.destroy();
      }), this._read = () => {
        t && e.resume && (t = false, e.resume());
      };
      let r = Sb(e);
      for (let n = 1;n < r.length; n++) {
        let i = r[n];
        this[i] === undefined && typeof e[i] == "function" && (this[i] = e[i].bind(e));
      }
      return this;
    };
    F2.prototype[Rb] = function() {
      return ds(this);
    };
    F2.prototype.iterator = function(e) {
      return e !== undefined && qb(e, "options"), ds(this, e);
    };
    function ds(e, t) {
      typeof e.read != "function" && (e = F2.wrap(e, { objectMode: true }));
      let r = Kb(e, t);
      return r.stream = e, r;
    }
    async function* Kb(e, t) {
      let r = ta;
      function n(a3) {
        this === e ? (r(), r = ta) : r = a3;
      }
      e.on("readable", n);
      let i, o2 = kb(e, { writable: false }, (a3) => {
        i = a3 ? ns(i, a3) : null, r(), r = ta;
      });
      try {
        for (;; ) {
          let a3 = e.destroyed ? null : e.read();
          if (a3 !== null)
            yield a3;
          else {
            if (i)
              throw i;
            if (i === null)
              return;
            await new Ab(n);
          }
        }
      } catch (a3) {
        throw i = ns(i, a3), i;
      } finally {
        (i || t?.destroyOnReturn !== false) && (i === undefined || e._readableState.autoDestroy) ? dr2.destroyer(e, null) : (e.off("readable", n), o2());
      }
    }
    os(F2.prototype, { readable: { __proto__: null, get() {
      let e = this._readableState;
      return !!e && e.readable !== false && !e.destroyed && !e.errorEmitted && !e.endEmitted;
    }, set(e) {
      this._readableState && (this._readableState.readable = !!e);
    } }, readableDidRead: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.dataEmitted;
    } }, readableAborted: { __proto__: null, enumerable: false, get: function() {
      return !!(this._readableState.readable !== false && (this._readableState.destroyed || this._readableState.errored) && !this._readableState.endEmitted);
    } }, readableHighWaterMark: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } }, readableBuffer: { __proto__: null, enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } }, readableFlowing: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(e) {
      this._readableState && (this._readableState.flowing = e);
    } }, readableLength: { __proto__: null, enumerable: false, get() {
      return this._readableState.length;
    } }, readableObjectMode: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.objectMode : false;
    } }, readableEncoding: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.encoding : null;
    } }, errored: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.errored : null;
    } }, closed: { __proto__: null, get() {
      return this._readableState ? this._readableState.closed : false;
    } }, destroyed: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.destroyed : false;
    }, set(e) {
      !this._readableState || (this._readableState.destroyed = e);
    } }, readableEnded: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.endEmitted : false;
    } } });
    os(oa.prototype, { pipesCount: { __proto__: null, get() {
      return this.pipes.length;
    } }, paused: { __proto__: null, get() {
      return this[Nt] !== false;
    }, set(e) {
      this[Nt] = !!e;
    } } });
    F2._fromList = hs;
    function hs(e, t) {
      if (t.length === 0)
        return null;
      let r;
      return t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (t.decoder ? r = t.buffer.join("") : t.buffer.length === 1 ? r = t.buffer.first() : r = t.buffer.concat(t.length), t.buffer.clear()) : r = t.buffer.consume(e, t.decoder), r;
    }
    function na(e) {
      let t = e._readableState;
      B3("endReadable", t.endEmitted), t.endEmitted || (t.ended = true, Ie.nextTick(Xb, t, e));
    }
    function Xb(e, t) {
      if (B3("endReadableNT", e.endEmitted, e.length), !e.errored && !e.closeEmitted && !e.endEmitted && e.length === 0) {
        if (e.endEmitted = true, t.emit("end"), t.writable && t.allowHalfOpen === false)
          Ie.nextTick(Jb, t);
        else if (e.autoDestroy) {
          let r = t._writableState;
          (!r || r.autoDestroy && (r.finished || r.writable === false)) && t.destroy();
        }
      }
    }
    function Jb(e) {
      e.writable && !e.writableEnded && !e.destroyed && e.end();
    }
    F2.from = function(e, t) {
      return Cb(F2, e, t);
    };
    var ia;
    function ps() {
      return ia === undefined && (ia = {}), ia;
    }
    F2.fromWeb = function(e, t) {
      return ps().newStreamReadableFromReadableStream(e, t);
    };
    F2.toWeb = function(e, t) {
      return ps().newReadableStreamFromStreamReadable(e, t);
    };
    F2.wrap = function(e, t) {
      var r, n;
      return new F2({ objectMode: (r = (n = e.readableObjectMode) !== null && n !== undefined ? n : e.objectMode) !== null && r !== undefined ? r : true, ...t, destroy(i, o2) {
        dr2.destroyer(e, i), o2(i);
      } }).wrap(e);
    };
  });
  da = g4((GA, Is) => {
    var kt = (it(), se(ye)), { ArrayPrototypeSlice: bs, Error: Qb, FunctionPrototypeSymbolHasInstance: ws, ObjectDefineProperty: Es, ObjectDefineProperties: ew, ObjectSetPrototypeOf: vs, StringPrototypeToLowerCase: tw, Symbol: rw, SymbolHasInstance: nw } = V4();
    Is.exports = W;
    W.WritableState = $r;
    var { EventEmitter: iw } = Qn(), Wr = ri().Stream, { Buffer: si } = xe(), hi = Tt(), { addAbortSignal: ow } = ii(), { getHighWaterMark: aw, getDefaultHighWaterMark: fw } = ai(), { ERR_INVALID_ARG_TYPE: lw, ERR_METHOD_NOT_IMPLEMENTED: uw, ERR_MULTIPLE_CALLBACK: ms, ERR_STREAM_CANNOT_PIPE: sw, ERR_STREAM_DESTROYED: Zr2, ERR_STREAM_ALREADY_FINISHED: cw, ERR_STREAM_NULL_VALUES: dw, ERR_STREAM_WRITE_AFTER_END: hw, ERR_UNKNOWN_ENCODING: Ss } = ne().codes, { errorOrDestroy: hr } = hi;
    vs(W.prototype, Wr.prototype);
    vs(W, Wr);
    function la() {
    }
    var pr = rw("kOnFinished");
    function $r(e, t, r) {
      typeof r != "boolean" && (r = t instanceof Ce()), this.objectMode = !!(e && e.objectMode), r && (this.objectMode = this.objectMode || !!(e && e.writableObjectMode)), this.highWaterMark = e ? aw(this, e, "writableHighWaterMark", r) : fw(false), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      let n = !!(e && e.decodeStrings === false);
      this.decodeStrings = !n, this.defaultEncoding = e && e.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = yw.bind(undefined, t), this.writecb = null, this.writelen = 0, this.afterWriteTickInfo = null, di(this), this.pendingcb = 0, this.constructed = true, this.prefinished = false, this.errorEmitted = false, this.emitClose = !e || e.emitClose !== false, this.autoDestroy = !e || e.autoDestroy !== false, this.errored = null, this.closed = false, this.closeEmitted = false, this[pr] = [];
    }
    function di(e) {
      e.buffered = [], e.bufferedIndex = 0, e.allBuffers = true, e.allNoop = true;
    }
    $r.prototype.getBuffer = function() {
      return bs(this.buffered, this.bufferedIndex);
    };
    Es($r.prototype, "bufferedRequestCount", { __proto__: null, get() {
      return this.buffered.length - this.bufferedIndex;
    } });
    function W(e) {
      let t = this instanceof Ce();
      if (!t && !ws(W, this))
        return new W(e);
      this._writableState = new $r(e, this, t), e && (typeof e.write == "function" && (this._write = e.write), typeof e.writev == "function" && (this._writev = e.writev), typeof e.destroy == "function" && (this._destroy = e.destroy), typeof e.final == "function" && (this._final = e.final), typeof e.construct == "function" && (this._construct = e.construct), e.signal && ow(e.signal, this)), Wr.call(this, e), hi.construct(this, () => {
        let r = this._writableState;
        r.writing || sa(this, r), ca(this, r);
      });
    }
    Es(W, nw, { __proto__: null, value: function(e) {
      return ws(this, e) ? true : this !== W ? false : e && e._writableState instanceof $r;
    } });
    W.prototype.pipe = function() {
      hr(this, new sw);
    };
    function As(e, t, r, n) {
      let i = e._writableState;
      if (typeof r == "function")
        n = r, r = i.defaultEncoding;
      else {
        if (!r)
          r = i.defaultEncoding;
        else if (r !== "buffer" && !si.isEncoding(r))
          throw new Ss(r);
        typeof n != "function" && (n = la);
      }
      if (t === null)
        throw new dw;
      if (!i.objectMode)
        if (typeof t == "string")
          i.decodeStrings !== false && (t = si.from(t, r), r = "buffer");
        else if (t instanceof si)
          r = "buffer";
        else if (Wr._isUint8Array(t))
          t = Wr._uint8ArrayToBuffer(t), r = "buffer";
        else
          throw new lw("chunk", ["string", "Buffer", "Uint8Array"], t);
      let o2;
      return i.ending ? o2 = new hw : i.destroyed && (o2 = new Zr2("write")), o2 ? (kt.nextTick(n, o2), hr(e, o2, true), o2) : (i.pendingcb++, pw(e, i, t, r, n));
    }
    W.prototype.write = function(e, t, r) {
      return As(this, e, t, r) === true;
    };
    W.prototype.cork = function() {
      this._writableState.corked++;
    };
    W.prototype.uncork = function() {
      let e = this._writableState;
      e.corked && (e.corked--, e.writing || sa(this, e));
    };
    W.prototype.setDefaultEncoding = function(t) {
      if (typeof t == "string" && (t = tw(t)), !si.isEncoding(t))
        throw new Ss(t);
      return this._writableState.defaultEncoding = t, this;
    };
    function pw(e, t, r, n, i) {
      let o2 = t.objectMode ? 1 : r.length;
      t.length += o2;
      let a3 = t.length < t.highWaterMark;
      return a3 || (t.needDrain = true), t.writing || t.corked || t.errored || !t.constructed ? (t.buffered.push({ chunk: r, encoding: n, callback: i }), t.allBuffers && n !== "buffer" && (t.allBuffers = false), t.allNoop && i !== la && (t.allNoop = false)) : (t.writelen = o2, t.writecb = i, t.writing = true, t.sync = true, e._write(r, n, t.onwrite), t.sync = false), a3 && !t.errored && !t.destroyed;
    }
    function _s(e, t, r, n, i, o2, a3) {
      t.writelen = n, t.writecb = a3, t.writing = true, t.sync = true, t.destroyed ? t.onwrite(new Zr2("write")) : r ? e._writev(i, t.onwrite) : e._write(i, o2, t.onwrite), t.sync = false;
    }
    function gs(e, t, r, n) {
      --t.pendingcb, n(r), ua(t), hr(e, r);
    }
    function yw(e, t) {
      let r = e._writableState, n = r.sync, i = r.writecb;
      if (typeof i != "function") {
        hr(e, new ms);
        return;
      }
      r.writing = false, r.writecb = null, r.length -= r.writelen, r.writelen = 0, t ? (t.stack, r.errored || (r.errored = t), e._readableState && !e._readableState.errored && (e._readableState.errored = t), n ? kt.nextTick(gs, e, r, t, i) : gs(e, r, t, i)) : (r.buffered.length > r.bufferedIndex && sa(e, r), n ? r.afterWriteTickInfo !== null && r.afterWriteTickInfo.cb === i ? r.afterWriteTickInfo.count++ : (r.afterWriteTickInfo = { count: 1, cb: i, stream: e, state: r }, kt.nextTick(_w, r.afterWriteTickInfo)) : xs(e, r, 1, i));
    }
    function _w({ stream: e, state: t, count: r, cb: n }) {
      return t.afterWriteTickInfo = null, xs(e, t, r, n);
    }
    function xs(e, t, r, n) {
      for (!t.ending && !e.destroyed && t.length === 0 && t.needDrain && (t.needDrain = false, e.emit("drain"));r-- > 0; )
        t.pendingcb--, n();
      t.destroyed && ua(t), ca(e, t);
    }
    function ua(e) {
      if (e.writing)
        return;
      for (let i = e.bufferedIndex;i < e.buffered.length; ++i) {
        var t;
        let { chunk: o2, callback: a3 } = e.buffered[i], f2 = e.objectMode ? 1 : o2.length;
        e.length -= f2, a3((t = e.errored) !== null && t !== undefined ? t : new Zr2("write"));
      }
      let r = e[pr].splice(0);
      for (let i = 0;i < r.length; i++) {
        var n;
        r[i]((n = e.errored) !== null && n !== undefined ? n : new Zr2("end"));
      }
      di(e);
    }
    function sa(e, t) {
      if (t.corked || t.bufferProcessing || t.destroyed || !t.constructed)
        return;
      let { buffered: r, bufferedIndex: n, objectMode: i } = t, o2 = r.length - n;
      if (!o2)
        return;
      let a3 = n;
      if (t.bufferProcessing = true, o2 > 1 && e._writev) {
        t.pendingcb -= o2 - 1;
        let f2 = t.allNoop ? la : (l3) => {
          for (let s2 = a3;s2 < r.length; ++s2)
            r[s2].callback(l3);
        }, u3 = t.allNoop && a3 === 0 ? r : bs(r, a3);
        u3.allBuffers = t.allBuffers, _s(e, t, true, t.length, u3, "", f2), di(t);
      } else {
        do {
          let { chunk: f2, encoding: u3, callback: l3 } = r[a3];
          r[a3++] = null;
          let s2 = i ? 1 : f2.length;
          _s(e, t, false, s2, f2, u3, l3);
        } while (a3 < r.length && !t.writing);
        a3 === r.length ? di(t) : a3 > 256 ? (r.splice(0, a3), t.bufferedIndex = 0) : t.bufferedIndex = a3;
      }
      t.bufferProcessing = false;
    }
    W.prototype._write = function(e, t, r) {
      if (this._writev)
        this._writev([{ chunk: e, encoding: t }], r);
      else
        throw new uw("_write()");
    };
    W.prototype._writev = null;
    W.prototype.end = function(e, t, r) {
      let n = this._writableState;
      typeof e == "function" ? (r = e, e = null, t = null) : typeof t == "function" && (r = t, t = null);
      let i;
      if (e != null) {
        let o2 = As(this, e, t);
        o2 instanceof Qb && (i = o2);
      }
      return n.corked && (n.corked = 1, this.uncork()), i || (!n.errored && !n.ending ? (n.ending = true, ca(this, n, true), n.ended = true) : n.finished ? i = new cw("end") : n.destroyed && (i = new Zr2("end"))), typeof r == "function" && (i || n.finished ? kt.nextTick(r, i) : n[pr].push(r)), this;
    };
    function ci(e) {
      return e.ending && !e.destroyed && e.constructed && e.length === 0 && !e.errored && e.buffered.length === 0 && !e.finished && !e.writing && !e.errorEmitted && !e.closeEmitted;
    }
    function gw(e, t) {
      let r = false;
      function n(i) {
        if (r) {
          hr(e, i ?? ms());
          return;
        }
        if (r = true, t.pendingcb--, i) {
          let o2 = t[pr].splice(0);
          for (let a3 = 0;a3 < o2.length; a3++)
            o2[a3](i);
          hr(e, i, t.sync);
        } else
          ci(t) && (t.prefinished = true, e.emit("prefinish"), t.pendingcb++, kt.nextTick(fa, e, t));
      }
      t.sync = true, t.pendingcb++;
      try {
        e._final(n);
      } catch (i) {
        n(i);
      }
      t.sync = false;
    }
    function bw(e, t) {
      !t.prefinished && !t.finalCalled && (typeof e._final == "function" && !t.destroyed ? (t.finalCalled = true, gw(e, t)) : (t.prefinished = true, e.emit("prefinish")));
    }
    function ca(e, t, r) {
      ci(t) && (bw(e, t), t.pendingcb === 0 && (r ? (t.pendingcb++, kt.nextTick((n, i) => {
        ci(i) ? fa(n, i) : i.pendingcb--;
      }, e, t)) : ci(t) && (t.pendingcb++, fa(e, t))));
    }
    function fa(e, t) {
      t.pendingcb--, t.finished = true;
      let r = t[pr].splice(0);
      for (let n = 0;n < r.length; n++)
        r[n]();
      if (e.emit("finish"), t.autoDestroy) {
        let n = e._readableState;
        (!n || n.autoDestroy && (n.endEmitted || n.readable === false)) && e.destroy();
      }
    }
    ew(W.prototype, { closed: { __proto__: null, get() {
      return this._writableState ? this._writableState.closed : false;
    } }, destroyed: { __proto__: null, get() {
      return this._writableState ? this._writableState.destroyed : false;
    }, set(e) {
      this._writableState && (this._writableState.destroyed = e);
    } }, writable: { __proto__: null, get() {
      let e = this._writableState;
      return !!e && e.writable !== false && !e.destroyed && !e.errored && !e.ending && !e.ended;
    }, set(e) {
      this._writableState && (this._writableState.writable = !!e);
    } }, writableFinished: { __proto__: null, get() {
      return this._writableState ? this._writableState.finished : false;
    } }, writableObjectMode: { __proto__: null, get() {
      return this._writableState ? this._writableState.objectMode : false;
    } }, writableBuffer: { __proto__: null, get() {
      return this._writableState && this._writableState.getBuffer();
    } }, writableEnded: { __proto__: null, get() {
      return this._writableState ? this._writableState.ending : false;
    } }, writableNeedDrain: { __proto__: null, get() {
      let e = this._writableState;
      return e ? !e.destroyed && !e.ending && e.needDrain : false;
    } }, writableHighWaterMark: { __proto__: null, get() {
      return this._writableState && this._writableState.highWaterMark;
    } }, writableCorked: { __proto__: null, get() {
      return this._writableState ? this._writableState.corked : 0;
    } }, writableLength: { __proto__: null, get() {
      return this._writableState && this._writableState.length;
    } }, errored: { __proto__: null, enumerable: false, get() {
      return this._writableState ? this._writableState.errored : null;
    } }, writableAborted: { __proto__: null, enumerable: false, get: function() {
      return !!(this._writableState.writable !== false && (this._writableState.destroyed || this._writableState.errored) && !this._writableState.finished);
    } } });
    var ww = hi.destroy;
    W.prototype.destroy = function(e, t) {
      let r = this._writableState;
      return !r.destroyed && (r.bufferedIndex < r.buffered.length || r[pr].length) && kt.nextTick(ua, r), ww.call(this, e, t), this;
    };
    W.prototype._undestroy = hi.undestroy;
    W.prototype._destroy = function(e, t) {
      t(e);
    };
    W.prototype[iw.captureRejectionSymbol] = function(e) {
      this.destroy(e);
    };
    var aa;
    function Rs() {
      return aa === undefined && (aa = {}), aa;
    }
    W.fromWeb = function(e, t) {
      return Rs().newStreamWritableFromWritableStream(e, t);
    };
    W.toWeb = function(e) {
      return Rs().newWritableStreamFromStreamWritable(e);
    };
  });
  Us = g4((HA, js) => {
    var ha = (it(), se(ye)), Ew = xe(), { isReadable: vw, isWritable: mw, isIterable: Ts, isNodeStream: Sw, isReadableNodeStream: Os, isWritableNodeStream: Ns, isDuplexNodeStream: Aw } = ot2(), ks = at2(), { AbortError: Ms, codes: { ERR_INVALID_ARG_TYPE: xw, ERR_INVALID_RETURN_VALUE: Fs } } = ne(), { destroyer: yr } = Tt(), Rw = Ce(), Iw = zr(), { createDeferredPromise: Ls } = Pe2(), Ds = Qo(), Bs = globalThis.Blob || Ew.Blob, Tw = typeof Bs < "u" ? function(t) {
      return t instanceof Bs;
    } : function(t) {
      return false;
    }, Ow = globalThis.AbortController || qn().AbortController, { FunctionPrototypeCall: Ps } = V4(), Ft = class extends Rw {
      constructor(t) {
        super(t), t?.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), t?.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true);
      }
    };
    js.exports = function e(t, r) {
      if (Aw(t))
        return t;
      if (Os(t))
        return pi({ readable: t });
      if (Ns(t))
        return pi({ writable: t });
      if (Sw(t))
        return pi({ writable: false, readable: false });
      if (typeof t == "function") {
        let { value: i, write: o2, final: a3, destroy: f2 } = Nw(t);
        if (Ts(i))
          return Ds(Ft, i, { objectMode: true, write: o2, final: a3, destroy: f2 });
        let u3 = i?.then;
        if (typeof u3 == "function") {
          let l3, s2 = Ps(u3, i, (c2) => {
            if (c2 != null)
              throw new Fs("nully", "body", c2);
          }, (c2) => {
            yr(l3, c2);
          });
          return l3 = new Ft({ objectMode: true, readable: false, write: o2, final(c2) {
            a3(async () => {
              try {
                await s2, ha.nextTick(c2, null);
              } catch (h4) {
                ha.nextTick(c2, h4);
              }
            });
          }, destroy: f2 });
        }
        throw new Fs("Iterable, AsyncIterable or AsyncFunction", r, i);
      }
      if (Tw(t))
        return e(t.arrayBuffer());
      if (Ts(t))
        return Ds(Ft, t, { objectMode: true, writable: false });
      if (typeof t?.writable == "object" || typeof t?.readable == "object") {
        let i = t != null && t.readable ? Os(t?.readable) ? t?.readable : e(t.readable) : undefined, o2 = t != null && t.writable ? Ns(t?.writable) ? t?.writable : e(t.writable) : undefined;
        return pi({ readable: i, writable: o2 });
      }
      let n = t?.then;
      if (typeof n == "function") {
        let i;
        return Ps(n, t, (o2) => {
          o2 != null && i.push(o2), i.push(null);
        }, (o2) => {
          yr(i, o2);
        }), i = new Ft({ objectMode: true, writable: false, read() {
        } });
      }
      throw new xw(r, ["Blob", "ReadableStream", "WritableStream", "Stream", "Iterable", "AsyncIterable", "Function", "{ readable, writable } pair", "Promise"], t);
    };
    function Nw(e) {
      let { promise: t, resolve: r } = Ls(), n = new Ow, i = n.signal;
      return { value: e(async function* () {
        for (;; ) {
          let a3 = t;
          t = null;
          let { chunk: f2, done: u3, cb: l3 } = await a3;
          if (ha.nextTick(l3), u3)
            return;
          if (i.aborted)
            throw new Ms(undefined, { cause: i.reason });
          ({ promise: t, resolve: r } = Ls()), yield f2;
        }
      }(), { signal: i }), write(a3, f2, u3) {
        let l3 = r;
        r = null, l3({ chunk: a3, done: false, cb: u3 });
      }, final(a3) {
        let f2 = r;
        r = null, f2({ done: true, cb: a3 });
      }, destroy(a3, f2) {
        n.abort(), f2(a3);
      } };
    }
    function pi(e) {
      let t = e.readable && typeof e.readable.read != "function" ? Iw.wrap(e.readable) : e.readable, r = e.writable, n = !!vw(t), i = !!mw(r), o2, a3, f2, u3, l3;
      function s2(c2) {
        let h4 = u3;
        u3 = null, h4 ? h4(c2) : c2 ? l3.destroy(c2) : !n && !i && l3.destroy();
      }
      return l3 = new Ft({ readableObjectMode: !!(t != null && t.readableObjectMode), writableObjectMode: !!(r != null && r.writableObjectMode), readable: n, writable: i }), i && (ks(r, (c2) => {
        i = false, c2 && yr(t, c2), s2(c2);
      }), l3._write = function(c2, h4, d3) {
        r.write(c2, h4) ? d3() : o2 = d3;
      }, l3._final = function(c2) {
        r.end(), a3 = c2;
      }, r.on("drain", function() {
        if (o2) {
          let c2 = o2;
          o2 = null, c2();
        }
      }), r.on("finish", function() {
        if (a3) {
          let c2 = a3;
          a3 = null, c2();
        }
      })), n && (ks(t, (c2) => {
        n = false, c2 && yr(t, c2), s2(c2);
      }), t.on("readable", function() {
        if (f2) {
          let c2 = f2;
          f2 = null, c2();
        }
      }), t.on("end", function() {
        l3.push(null);
      }), l3._read = function() {
        for (;; ) {
          let c2 = t.read();
          if (c2 === null) {
            f2 = l3._read;
            return;
          }
          if (!l3.push(c2))
            return;
        }
      }), l3._destroy = function(c2, h4) {
        !c2 && u3 !== null && (c2 = new Ms), f2 = null, o2 = null, a3 = null, u3 === null ? h4(c2) : (u3 = h4, yr(r, c2), yr(t, c2));
      }, l3;
    }
  });
  Ce = g4((VA, zs) => {
    var { ObjectDefineProperties: kw, ObjectGetOwnPropertyDescriptor: Je, ObjectKeys: Fw, ObjectSetPrototypeOf: qs } = V4();
    zs.exports = Te;
    var _a = zr(), _e = da();
    qs(Te.prototype, _a.prototype);
    qs(Te, _a);
    {
      let e = Fw(_e.prototype);
      for (let t = 0;t < e.length; t++) {
        let r = e[t];
        Te.prototype[r] || (Te.prototype[r] = _e.prototype[r]);
      }
    }
    function Te(e) {
      if (!(this instanceof Te))
        return new Te(e);
      _a.call(this, e), _e.call(this, e), e ? (this.allowHalfOpen = e.allowHalfOpen !== false, e.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), e.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true)) : this.allowHalfOpen = true;
    }
    kw(Te.prototype, { writable: { __proto__: null, ...Je(_e.prototype, "writable") }, writableHighWaterMark: { __proto__: null, ...Je(_e.prototype, "writableHighWaterMark") }, writableObjectMode: { __proto__: null, ...Je(_e.prototype, "writableObjectMode") }, writableBuffer: { __proto__: null, ...Je(_e.prototype, "writableBuffer") }, writableLength: { __proto__: null, ...Je(_e.prototype, "writableLength") }, writableFinished: { __proto__: null, ...Je(_e.prototype, "writableFinished") }, writableCorked: { __proto__: null, ...Je(_e.prototype, "writableCorked") }, writableEnded: { __proto__: null, ...Je(_e.prototype, "writableEnded") }, writableNeedDrain: { __proto__: null, ...Je(_e.prototype, "writableNeedDrain") }, destroyed: { __proto__: null, get() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set(e) {
      this._readableState && this._writableState && (this._readableState.destroyed = e, this._writableState.destroyed = e);
    } } });
    var pa;
    function Cs() {
      return pa === undefined && (pa = {}), pa;
    }
    Te.fromWeb = function(e, t) {
      return Cs().newStreamDuplexFromReadableWritablePair(e, t);
    };
    Te.toWeb = function(e) {
      return Cs().newReadableWritablePairFromDuplex(e);
    };
    var ya;
    Te.from = function(e) {
      return ya || (ya = Us()), ya(e, "body");
    };
  });
  wa = g4((YA, Zs) => {
    var { ObjectSetPrototypeOf: Ws, Symbol: Lw } = V4();
    Zs.exports = Qe;
    var { ERR_METHOD_NOT_IMPLEMENTED: Dw } = ne().codes, ba = Ce(), { getHighWaterMark: Bw } = ai();
    Ws(Qe.prototype, ba.prototype);
    Ws(Qe, ba);
    var Gr = Lw("kCallback");
    function Qe(e) {
      if (!(this instanceof Qe))
        return new Qe(e);
      let t = e ? Bw(this, e, "readableHighWaterMark", true) : null;
      t === 0 && (e = { ...e, highWaterMark: null, readableHighWaterMark: t, writableHighWaterMark: e.writableHighWaterMark || 0 }), ba.call(this, e), this._readableState.sync = false, this[Gr] = null, e && (typeof e.transform == "function" && (this._transform = e.transform), typeof e.flush == "function" && (this._flush = e.flush)), this.on("prefinish", Pw);
    }
    function ga(e) {
      typeof this._flush == "function" && !this.destroyed ? this._flush((t, r) => {
        if (t) {
          e ? e(t) : this.destroy(t);
          return;
        }
        r != null && this.push(r), this.push(null), e && e();
      }) : (this.push(null), e && e());
    }
    function Pw() {
      this._final !== ga && ga.call(this);
    }
    Qe.prototype._final = ga;
    Qe.prototype._transform = function(e, t, r) {
      throw new Dw("_transform()");
    };
    Qe.prototype._write = function(e, t, r) {
      let n = this._readableState, i = this._writableState, o2 = n.length;
      this._transform(e, t, (a3, f2) => {
        if (a3) {
          r(a3);
          return;
        }
        f2 != null && this.push(f2), i.ended || o2 === n.length || n.length < n.highWaterMark ? r() : this[Gr] = r;
      });
    };
    Qe.prototype._read = function() {
      if (this[Gr]) {
        let e = this[Gr];
        this[Gr] = null, e();
      }
    };
  });
  va = g4((KA, Gs) => {
    var { ObjectSetPrototypeOf: $s } = V4();
    Gs.exports = _r;
    var Ea = wa();
    $s(_r.prototype, Ea.prototype);
    $s(_r, Ea);
    function _r(e) {
      if (!(this instanceof _r))
        return new _r(e);
      Ea.call(this, e);
    }
    _r.prototype._transform = function(e, t, r) {
      r(null, e);
    };
  });
  gi = g4((XA, Qs) => {
    var yi = (it(), se(ye)), { ArrayIsArray: Mw, Promise: jw, SymbolAsyncIterator: Uw } = V4(), _i = at2(), { once: qw } = Pe2(), Cw = Tt(), Hs = Ce(), { aggregateTwoErrors: zw, codes: { ERR_INVALID_ARG_TYPE: Xs, ERR_INVALID_RETURN_VALUE: ma, ERR_MISSING_ARGS: Ww, ERR_STREAM_DESTROYED: Zw, ERR_STREAM_PREMATURE_CLOSE: $w }, AbortError: Gw } = ne(), { validateFunction: Hw, validateAbortSignal: Vw } = Ur3(), { isIterable: gr3, isReadable: Sa, isReadableNodeStream: Ra, isNodeStream: Vs } = ot2(), Yw = globalThis.AbortController || qn().AbortController, Aa, xa;
    function Ys(e, t, r) {
      let n = false;
      e.on("close", () => {
        n = true;
      });
      let i = _i(e, { readable: t, writable: r }, (o2) => {
        n = !o2;
      });
      return { destroy: (o2) => {
        n || (n = true, Cw.destroyer(e, o2 || new Zw("pipe")));
      }, cleanup: i };
    }
    function Kw(e) {
      return Hw(e[e.length - 1], "streams[stream.length - 1]"), e.pop();
    }
    function Xw(e) {
      if (gr3(e))
        return e;
      if (Ra(e))
        return Jw(e);
      throw new Xs("val", ["Readable", "Iterable", "AsyncIterable"], e);
    }
    async function* Jw(e) {
      xa || (xa = zr()), yield* xa.prototype[Uw].call(e);
    }
    async function Ks(e, t, r, { end: n }) {
      let i, o2 = null, a3 = (l3) => {
        if (l3 && (i = l3), o2) {
          let s2 = o2;
          o2 = null, s2();
        }
      }, f2 = () => new jw((l3, s2) => {
        i ? s2(i) : o2 = () => {
          i ? s2(i) : l3();
        };
      });
      t.on("drain", a3);
      let u3 = _i(t, { readable: false }, a3);
      try {
        t.writableNeedDrain && await f2();
        for await (let l3 of e)
          t.write(l3) || await f2();
        n && t.end(), await f2(), r();
      } catch (l3) {
        r(i !== l3 ? zw(i, l3) : l3);
      } finally {
        u3(), t.off("drain", a3);
      }
    }
    function Qw(...e) {
      return Js(e, qw(Kw(e)));
    }
    function Js(e, t, r) {
      if (e.length === 1 && Mw(e[0]) && (e = e[0]), e.length < 2)
        throw new Ww("streams");
      let n = new Yw, i = n.signal, o2 = r?.signal, a3 = [];
      Vw(o2, "options.signal");
      function f2() {
        d3(new Gw);
      }
      o2?.addEventListener("abort", f2);
      let u3, l3, s2 = [], c2 = 0;
      function h4(_4) {
        d3(_4, --c2 === 0);
      }
      function d3(_4, E5) {
        if (_4 && (!u3 || u3.code === "ERR_STREAM_PREMATURE_CLOSE") && (u3 = _4), !(!u3 && !E5)) {
          for (;s2.length; )
            s2.shift()(u3);
          o2?.removeEventListener("abort", f2), n.abort(), E5 && (u3 || a3.forEach((m3) => m3()), yi.nextTick(t, u3, l3));
        }
      }
      let y4;
      for (let _4 = 0;_4 < e.length; _4++) {
        let E5 = e[_4], m3 = _4 < e.length - 1, A3 = _4 > 0, v3 = m3 || r?.end !== false, T2 = _4 === e.length - 1;
        if (Vs(E5)) {
          let I3 = function(S2) {
            S2 && S2.name !== "AbortError" && S2.code !== "ERR_STREAM_PREMATURE_CLOSE" && h4(S2);
          };
          var R3 = I3;
          if (v3) {
            let { destroy: S2, cleanup: k3 } = Ys(E5, m3, A3);
            s2.push(S2), Sa(E5) && T2 && a3.push(k3);
          }
          E5.on("error", I3), Sa(E5) && T2 && a3.push(() => {
            E5.removeListener("error", I3);
          });
        }
        if (_4 === 0)
          if (typeof E5 == "function") {
            if (y4 = E5({ signal: i }), !gr3(y4))
              throw new ma("Iterable, AsyncIterable or Stream", "source", y4);
          } else
            gr3(E5) || Ra(E5) ? y4 = E5 : y4 = Hs.from(E5);
        else if (typeof E5 == "function")
          if (y4 = Xw(y4), y4 = E5(y4, { signal: i }), m3) {
            if (!gr3(y4, true))
              throw new ma("AsyncIterable", `transform[${_4 - 1}]`, y4);
          } else {
            var b4;
            Aa || (Aa = va());
            let I3 = new Aa({ objectMode: true }), S2 = (b4 = y4) === null || b4 === undefined ? undefined : b4.then;
            if (typeof S2 == "function")
              c2++, S2.call(y4, (O4) => {
                l3 = O4, O4 != null && I3.write(O4), v3 && I3.end(), yi.nextTick(h4);
              }, (O4) => {
                I3.destroy(O4), yi.nextTick(h4, O4);
              });
            else if (gr3(y4, true))
              c2++, Ks(y4, I3, h4, { end: v3 });
            else
              throw new ma("AsyncIterable or Promise", "destination", y4);
            y4 = I3;
            let { destroy: k3, cleanup: z } = Ys(y4, false, true);
            s2.push(k3), T2 && a3.push(z);
          }
        else if (Vs(E5)) {
          if (Ra(y4)) {
            c2 += 2;
            let I3 = eE(y4, E5, h4, { end: v3 });
            Sa(E5) && T2 && a3.push(I3);
          } else if (gr3(y4))
            c2++, Ks(y4, E5, h4, { end: v3 });
          else
            throw new Xs("val", ["Readable", "Iterable", "AsyncIterable"], y4);
          y4 = E5;
        } else
          y4 = Hs.from(E5);
      }
      return (i != null && i.aborted || o2 != null && o2.aborted) && yi.nextTick(f2), y4;
    }
    function eE(e, t, r, { end: n }) {
      let i = false;
      return t.on("close", () => {
        i || r(new $w);
      }), e.pipe(t, { end: n }), n ? e.once("end", () => {
        i = true, t.end();
      }) : r(), _i(e, { readable: true, writable: false }, (o2) => {
        let a3 = e._readableState;
        o2 && o2.code === "ERR_STREAM_PREMATURE_CLOSE" && a3 && a3.ended && !a3.errored && !a3.errorEmitted ? e.once("end", r).once("error", r) : r(o2);
      }), _i(t, { readable: false, writable: true }, r);
    }
    Qs.exports = { pipelineImpl: Js, pipeline: Qw };
  });
  ic = g4((JA, nc) => {
    var { pipeline: tE } = gi(), bi = Ce(), { destroyer: rE } = Tt(), { isNodeStream: nE, isReadable: ec, isWritable: tc } = ot2(), { AbortError: iE, codes: { ERR_INVALID_ARG_VALUE: rc, ERR_MISSING_ARGS: oE } } = ne();
    nc.exports = function(...t) {
      if (t.length === 0)
        throw new oE("streams");
      if (t.length === 1)
        return bi.from(t[0]);
      let r = [...t];
      if (typeof t[0] == "function" && (t[0] = bi.from(t[0])), typeof t[t.length - 1] == "function") {
        let d3 = t.length - 1;
        t[d3] = bi.from(t[d3]);
      }
      for (let d3 = 0;d3 < t.length; ++d3)
        if (!!nE(t[d3])) {
          if (d3 < t.length - 1 && !ec(t[d3]))
            throw new rc(`streams[${d3}]`, r[d3], "must be readable");
          if (d3 > 0 && !tc(t[d3]))
            throw new rc(`streams[${d3}]`, r[d3], "must be writable");
        }
      let n, i, o2, a3, f2;
      function u3(d3) {
        let y4 = a3;
        a3 = null, y4 ? y4(d3) : d3 ? f2.destroy(d3) : !h4 && !c2 && f2.destroy();
      }
      let l3 = t[0], s2 = tE(t, u3), c2 = !!tc(l3), h4 = !!ec(s2);
      return f2 = new bi({ writableObjectMode: !!(l3 != null && l3.writableObjectMode), readableObjectMode: !!(s2 != null && s2.writableObjectMode), writable: c2, readable: h4 }), c2 && (f2._write = function(d3, y4, b4) {
        l3.write(d3, y4) ? b4() : n = b4;
      }, f2._final = function(d3) {
        l3.end(), i = d3;
      }, l3.on("drain", function() {
        if (n) {
          let d3 = n;
          n = null, d3();
        }
      }), s2.on("finish", function() {
        if (i) {
          let d3 = i;
          i = null, d3();
        }
      })), h4 && (s2.on("readable", function() {
        if (o2) {
          let d3 = o2;
          o2 = null, d3();
        }
      }), s2.on("end", function() {
        f2.push(null);
      }), f2._read = function() {
        for (;; ) {
          let d3 = s2.read();
          if (d3 === null) {
            o2 = f2._read;
            return;
          }
          if (!f2.push(d3))
            return;
        }
      }), f2._destroy = function(d3, y4) {
        !d3 && a3 !== null && (d3 = new iE), o2 = null, n = null, i = null, a3 === null ? y4(d3) : (a3 = y4, rE(s2, d3));
      }, f2;
    };
  });
  Ia = g4((QA, oc) => {
    var { ArrayPrototypePop: aE, Promise: fE } = V4(), { isIterable: lE, isNodeStream: uE } = ot2(), { pipelineImpl: sE } = gi(), { finished: cE } = at2();
    function dE(...e) {
      return new fE((t, r) => {
        let n, i, o2 = e[e.length - 1];
        if (o2 && typeof o2 == "object" && !uE(o2) && !lE(o2)) {
          let a3 = aE(e);
          n = a3.signal, i = a3.end;
        }
        sE(e, (a3, f2) => {
          a3 ? r(a3) : t(f2);
        }, { signal: n, end: i });
      });
    }
    oc.exports = { finished: cE, pipeline: dE };
  });
  yc = g4((ex, pc) => {
    var { Buffer: hE } = xe(), { ObjectDefineProperty: et, ObjectKeys: lc, ReflectApply: uc } = V4(), { promisify: { custom: sc } } = Pe2(), { streamReturningOperators: ac, promiseReturningOperators: fc } = Eu(), { codes: { ERR_ILLEGAL_CONSTRUCTOR: cc } } = ne(), pE = ic(), { pipeline: dc } = gi(), { destroyer: yE } = Tt(), hc = at2(), Ta = Ia(), Oa = ot2(), G2 = pc.exports = ri().Stream;
    G2.isDisturbed = Oa.isDisturbed;
    G2.isErrored = Oa.isErrored;
    G2.isReadable = Oa.isReadable;
    G2.Readable = zr();
    for (let e of lc(ac)) {
      let r = function(...n) {
        if (new.target)
          throw cc();
        return G2.Readable.from(uc(t, this, n));
      };
      gE = r;
      let t = ac[e];
      et(r, "name", { __proto__: null, value: t.name }), et(r, "length", { __proto__: null, value: t.length }), et(G2.Readable.prototype, e, { __proto__: null, value: r, enumerable: false, configurable: true, writable: true });
    }
    var gE;
    for (let e of lc(fc)) {
      let r = function(...i) {
        if (new.target)
          throw cc();
        return uc(t, this, i);
      };
      gE = r;
      let t = fc[e];
      et(r, "name", { __proto__: null, value: t.name }), et(r, "length", { __proto__: null, value: t.length }), et(G2.Readable.prototype, e, { __proto__: null, value: r, enumerable: false, configurable: true, writable: true });
    }
    var gE;
    G2.Writable = da();
    G2.Duplex = Ce();
    G2.Transform = wa();
    G2.PassThrough = va();
    G2.pipeline = dc;
    var { addAbortSignal: _E } = ii();
    G2.addAbortSignal = _E;
    G2.finished = hc;
    G2.destroy = yE;
    G2.compose = pE;
    et(G2, "promises", { __proto__: null, configurable: true, enumerable: true, get() {
      return Ta;
    } });
    et(dc, sc, { __proto__: null, enumerable: true, get() {
      return Ta.pipeline;
    } });
    et(hc, sc, { __proto__: null, enumerable: true, get() {
      return Ta.finished;
    } });
    G2.Stream = G2;
    G2._isUint8Array = function(t) {
      return t instanceof Uint8Array;
    };
    G2._uint8ArrayToBuffer = function(t) {
      return hE.from(t.buffer, t.byteOffset, t.byteLength);
    };
  });
  Na = g4((tx, H3) => {
    var Y3 = yc(), bE = Ia(), wE = Y3.Readable.destroy;
    H3.exports = Y3.Readable;
    H3.exports._uint8ArrayToBuffer = Y3._uint8ArrayToBuffer;
    H3.exports._isUint8Array = Y3._isUint8Array;
    H3.exports.isDisturbed = Y3.isDisturbed;
    H3.exports.isErrored = Y3.isErrored;
    H3.exports.isReadable = Y3.isReadable;
    H3.exports.Readable = Y3.Readable;
    H3.exports.Writable = Y3.Writable;
    H3.exports.Duplex = Y3.Duplex;
    H3.exports.Transform = Y3.Transform;
    H3.exports.PassThrough = Y3.PassThrough;
    H3.exports.addAbortSignal = Y3.addAbortSignal;
    H3.exports.finished = Y3.finished;
    H3.exports.destroy = Y3.destroy;
    H3.exports.destroy = wE;
    H3.exports.pipeline = Y3.pipeline;
    H3.exports.compose = Y3.compose;
    Object.defineProperty(Y3, "promises", { configurable: true, enumerable: true, get() {
      return bE;
    } });
    H3.exports.Stream = Y3.Stream;
    H3.exports.default = H3.exports;
  });
  br2 = {};
  Bn(br2, { default: () => EE });
  _c = wo(() => {
    X3(br2, vt(Na()));
    EE = vt(Na());
  });
  ka = g4((nx, gc) => {
    gc.exports = function() {
      if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
        return false;
      if (typeof Symbol.iterator == "symbol")
        return true;
      var t = {}, r = Symbol("test"), n = Object(r);
      if (typeof r == "string" || Object.prototype.toString.call(r) !== "[object Symbol]" || Object.prototype.toString.call(n) !== "[object Symbol]")
        return false;
      var i = 42;
      t[r] = i;
      for (r in t)
        return false;
      if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0)
        return false;
      var o2 = Object.getOwnPropertySymbols(t);
      if (o2.length !== 1 || o2[0] !== r || !Object.prototype.propertyIsEnumerable.call(t, r))
        return false;
      if (typeof Object.getOwnPropertyDescriptor == "function") {
        var a3 = Object.getOwnPropertyDescriptor(t, r);
        if (a3.value !== i || a3.enumerable !== true)
          return false;
      }
      return true;
    };
  });
  Hr = g4((ix, bc) => {
    var vE = ka();
    bc.exports = function() {
      return vE() && !!Symbol.toStringTag;
    };
  });
  vc = g4((ox, Ec) => {
    var wc = typeof Symbol < "u" && Symbol, mE = ka();
    Ec.exports = function() {
      return typeof wc != "function" || typeof Symbol != "function" || typeof wc("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? false : mE();
    };
  });
  Sc = g4((ax, mc) => {
    var SE = "Function.prototype.bind called on incompatible ", Fa = Array.prototype.slice, AE = Object.prototype.toString, xE = "[object Function]";
    mc.exports = function(t) {
      var r = this;
      if (typeof r != "function" || AE.call(r) !== xE)
        throw new TypeError(SE + r);
      for (var n = Fa.call(arguments, 1), i, o2 = function() {
        if (this instanceof i) {
          var s2 = r.apply(this, n.concat(Fa.call(arguments)));
          return Object(s2) === s2 ? s2 : this;
        } else
          return r.apply(t, n.concat(Fa.call(arguments)));
      }, a3 = Math.max(0, r.length - n.length), f2 = [], u3 = 0;u3 < a3; u3++)
        f2.push("$" + u3);
      if (i = Function("binder", "return function (" + f2.join(",") + "){ return binder.apply(this,arguments); }")(o2), r.prototype) {
        var l3 = function() {
        };
        l3.prototype = r.prototype, i.prototype = new l3, l3.prototype = null;
      }
      return i;
    };
  });
  wi = g4((fx, Ac) => {
    var RE = Sc();
    Ac.exports = Function.prototype.bind || RE;
  });
  Rc = g4((lx, xc) => {
    var IE = wi();
    xc.exports = IE.call(Function.call, Object.prototype.hasOwnProperty);
  });
  Yr = g4((ux, kc) => {
    var P4, mr2 = SyntaxError, Nc = Function, vr = TypeError, La = function(e) {
      try {
        return Nc('"use strict"; return (' + e + ").constructor;")();
      } catch {
      }
    }, Lt = Object.getOwnPropertyDescriptor;
    if (Lt)
      try {
        Lt({}, "");
      } catch {
        Lt = null;
      }
    var Da = function() {
      throw new vr;
    }, TE = Lt ? function() {
      try {
        return arguments.callee, Da;
      } catch {
        try {
          return Lt(arguments, "callee").get;
        } catch {
          return Da;
        }
      }
    }() : Da, wr = vc()(), ze = Object.getPrototypeOf || function(e) {
      return e.__proto__;
    }, Er2 = {}, OE = typeof Uint8Array > "u" ? P4 : ze(Uint8Array), Dt = { "%AggregateError%": typeof AggregateError > "u" ? P4 : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer > "u" ? P4 : ArrayBuffer, "%ArrayIteratorPrototype%": wr ? ze([][Symbol.iterator]()) : P4, "%AsyncFromSyncIteratorPrototype%": P4, "%AsyncFunction%": Er2, "%AsyncGenerator%": Er2, "%AsyncGeneratorFunction%": Er2, "%AsyncIteratorPrototype%": Er2, "%Atomics%": typeof Atomics > "u" ? P4 : Atomics, "%BigInt%": typeof BigInt > "u" ? P4 : BigInt, "%BigInt64Array%": typeof BigInt64Array > "u" ? P4 : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array > "u" ? P4 : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView > "u" ? P4 : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": Error, "%eval%": eval, "%EvalError%": EvalError, "%Float32Array%": typeof Float32Array > "u" ? P4 : Float32Array, "%Float64Array%": typeof Float64Array > "u" ? P4 : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? P4 : FinalizationRegistry, "%Function%": Nc, "%GeneratorFunction%": Er2, "%Int8Array%": typeof Int8Array > "u" ? P4 : Int8Array, "%Int16Array%": typeof Int16Array > "u" ? P4 : Int16Array, "%Int32Array%": typeof Int32Array > "u" ? P4 : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": wr ? ze(ze([][Symbol.iterator]())) : P4, "%JSON%": typeof JSON == "object" ? JSON : P4, "%Map%": typeof Map > "u" ? P4 : Map, "%MapIteratorPrototype%": typeof Map > "u" || !wr ? P4 : ze(new Map()[Symbol.iterator]()), "%Math%": Math, "%Number%": Number, "%Object%": Object, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise > "u" ? P4 : Promise, "%Proxy%": typeof Proxy > "u" ? P4 : Proxy, "%RangeError%": RangeError, "%ReferenceError%": ReferenceError, "%Reflect%": typeof Reflect > "u" ? P4 : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set > "u" ? P4 : Set, "%SetIteratorPrototype%": typeof Set > "u" || !wr ? P4 : ze(new Set()[Symbol.iterator]()), "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? P4 : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": wr ? ze(""[Symbol.iterator]()) : P4, "%Symbol%": wr ? Symbol : P4, "%SyntaxError%": mr2, "%ThrowTypeError%": TE, "%TypedArray%": OE, "%TypeError%": vr, "%Uint8Array%": typeof Uint8Array > "u" ? P4 : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? P4 : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array > "u" ? P4 : Uint16Array, "%Uint32Array%": typeof Uint32Array > "u" ? P4 : Uint32Array, "%URIError%": URIError, "%WeakMap%": typeof WeakMap > "u" ? P4 : WeakMap, "%WeakRef%": typeof WeakRef > "u" ? P4 : WeakRef, "%WeakSet%": typeof WeakSet > "u" ? P4 : WeakSet };
    try {
      null.error;
    } catch (e) {
      Ic = ze(ze(e)), Dt["%Error.prototype%"] = Ic;
    }
    var Ic, NE = function e(t) {
      var r;
      if (t === "%AsyncFunction%")
        r = La("async function () {}");
      else if (t === "%GeneratorFunction%")
        r = La("function* () {}");
      else if (t === "%AsyncGeneratorFunction%")
        r = La("async function* () {}");
      else if (t === "%AsyncGenerator%") {
        var n = e("%AsyncGeneratorFunction%");
        n && (r = n.prototype);
      } else if (t === "%AsyncIteratorPrototype%") {
        var i = e("%AsyncGenerator%");
        i && (r = ze(i.prototype));
      }
      return Dt[t] = r, r;
    }, Tc = { "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, Vr = wi(), Ei = Rc(), kE = Vr.call(Function.call, Array.prototype.concat), FE = Vr.call(Function.apply, Array.prototype.splice), Oc = Vr.call(Function.call, String.prototype.replace), vi = Vr.call(Function.call, String.prototype.slice), LE = Vr.call(Function.call, RegExp.prototype.exec), DE = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, BE = /\\(\\)?/g, PE = function(t) {
      var r = vi(t, 0, 1), n = vi(t, -1);
      if (r === "%" && n !== "%")
        throw new mr2("invalid intrinsic syntax, expected closing `%`");
      if (n === "%" && r !== "%")
        throw new mr2("invalid intrinsic syntax, expected opening `%`");
      var i = [];
      return Oc(t, DE, function(o2, a3, f2, u3) {
        i[i.length] = f2 ? Oc(u3, BE, "$1") : a3 || o2;
      }), i;
    }, ME = function(t, r) {
      var n = t, i;
      if (Ei(Tc, n) && (i = Tc[n], n = "%" + i[0] + "%"), Ei(Dt, n)) {
        var o2 = Dt[n];
        if (o2 === Er2 && (o2 = NE(n)), typeof o2 > "u" && !r)
          throw new vr("intrinsic " + t + " exists, but is not available. Please file an issue!");
        return { alias: i, name: n, value: o2 };
      }
      throw new mr2("intrinsic " + t + " does not exist!");
    };
    kc.exports = function(t, r) {
      if (typeof t != "string" || t.length === 0)
        throw new vr("intrinsic name must be a non-empty string");
      if (arguments.length > 1 && typeof r != "boolean")
        throw new vr('"allowMissing" argument must be a boolean');
      if (LE(/^%?[^%]*%?$/, t) === null)
        throw new mr2("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      var n = PE(t), i = n.length > 0 ? n[0] : "", o2 = ME("%" + i + "%", r), a3 = o2.name, f2 = o2.value, u3 = false, l3 = o2.alias;
      l3 && (i = l3[0], FE(n, kE([0, 1], l3)));
      for (var s2 = 1, c2 = true;s2 < n.length; s2 += 1) {
        var h4 = n[s2], d3 = vi(h4, 0, 1), y4 = vi(h4, -1);
        if ((d3 === '"' || d3 === "'" || d3 === "`" || y4 === '"' || y4 === "'" || y4 === "`") && d3 !== y4)
          throw new mr2("property names with quotes must have matching quotes");
        if ((h4 === "constructor" || !c2) && (u3 = true), i += "." + h4, a3 = "%" + i + "%", Ei(Dt, a3))
          f2 = Dt[a3];
        else if (f2 != null) {
          if (!(h4 in f2)) {
            if (!r)
              throw new vr("base intrinsic for " + t + " exists, but the property is not available.");
            return;
          }
          if (Lt && s2 + 1 >= n.length) {
            var b4 = Lt(f2, h4);
            c2 = !!b4, c2 && "get" in b4 && !("originalValue" in b4.get) ? f2 = b4.get : f2 = f2[h4];
          } else
            c2 = Ei(f2, h4), f2 = f2[h4];
          c2 && !u3 && (Dt[a3] = f2);
        }
      }
      return f2;
    };
  });
  Si = g4((sx, mi) => {
    var Ba = wi(), Sr = Yr(), Dc = Sr("%Function.prototype.apply%"), Bc = Sr("%Function.prototype.call%"), Pc = Sr("%Reflect.apply%", true) || Ba.call(Bc, Dc), Fc = Sr("%Object.getOwnPropertyDescriptor%", true), Bt = Sr("%Object.defineProperty%", true), jE = Sr("%Math.max%");
    if (Bt)
      try {
        Bt({}, "a", { value: 1 });
      } catch {
        Bt = null;
      }
    mi.exports = function(t) {
      var r = Pc(Ba, Bc, arguments);
      if (Fc && Bt) {
        var n = Fc(r, "length");
        n.configurable && Bt(r, "length", { value: 1 + jE(0, t.length - (arguments.length - 1)) });
      }
      return r;
    };
    var Lc = function() {
      return Pc(Ba, Dc, arguments);
    };
    Bt ? Bt(mi.exports, "apply", { value: Lc }) : mi.exports.apply = Lc;
  });
  Ai = g4((cx, Uc) => {
    var Mc = Yr(), jc = Si(), UE = jc(Mc("String.prototype.indexOf"));
    Uc.exports = function(t, r) {
      var n = Mc(t, !!r);
      return typeof n == "function" && UE(t, ".prototype.") > -1 ? jc(n) : n;
    };
  });
  zc = g4((dx, Cc) => {
    var qE = Hr()(), CE = Ai(), Pa = CE("Object.prototype.toString"), xi = function(t) {
      return qE && t && typeof t == "object" && Symbol.toStringTag in t ? false : Pa(t) === "[object Arguments]";
    }, qc = function(t) {
      return xi(t) ? true : t !== null && typeof t == "object" && typeof t.length == "number" && t.length >= 0 && Pa(t) !== "[object Array]" && Pa(t.callee) === "[object Function]";
    }, zE = function() {
      return xi(arguments);
    }();
    xi.isLegacyArguments = qc;
    Cc.exports = zE ? xi : qc;
  });
  $c = g4((hx, Zc) => {
    var WE = Object.prototype.toString, ZE = Function.prototype.toString, $E = /^\s*(?:function)?\*/, Wc = Hr()(), Ma = Object.getPrototypeOf, GE = function() {
      if (!Wc)
        return false;
      try {
        return Function("return function*() {}")();
      } catch {
      }
    }, ja;
    Zc.exports = function(t) {
      if (typeof t != "function")
        return false;
      if ($E.test(ZE.call(t)))
        return true;
      if (!Wc) {
        var r = WE.call(t);
        return r === "[object GeneratorFunction]";
      }
      if (!Ma)
        return false;
      if (typeof ja > "u") {
        var n = GE();
        ja = n ? Ma(n) : false;
      }
      return Ma(t) === ja;
    };
  });
  Yc = g4((px, Vc) => {
    var Hc = Function.prototype.toString, Ar2 = typeof Reflect == "object" && Reflect !== null && Reflect.apply, qa, Ri;
    if (typeof Ar2 == "function" && typeof Object.defineProperty == "function")
      try {
        qa = Object.defineProperty({}, "length", { get: function() {
          throw Ri;
        } }), Ri = {}, Ar2(function() {
          throw 42;
        }, null, qa);
      } catch (e) {
        e !== Ri && (Ar2 = null);
      }
    else
      Ar2 = null;
    var HE = /^\s*class\b/, Ca = function(t) {
      try {
        var r = Hc.call(t);
        return HE.test(r);
      } catch {
        return false;
      }
    }, Ua = function(t) {
      try {
        return Ca(t) ? false : (Hc.call(t), true);
      } catch {
        return false;
      }
    }, Ii = Object.prototype.toString, VE = "[object Object]", YE = "[object Function]", KE = "[object GeneratorFunction]", XE = "[object HTMLAllCollection]", JE = "[object HTML document.all class]", QE = "[object HTMLCollection]", ev = typeof Symbol == "function" && !!Symbol.toStringTag, tv = !(0 in [,]), za = function() {
      return false;
    };
    typeof document == "object" && (Gc = document.all, Ii.call(Gc) === Ii.call(document.all) && (za = function(t) {
      if ((tv || !t) && (typeof t > "u" || typeof t == "object"))
        try {
          var r = Ii.call(t);
          return (r === XE || r === JE || r === QE || r === VE) && t("") == null;
        } catch {
        }
      return false;
    }));
    var Gc;
    Vc.exports = Ar2 ? function(t) {
      if (za(t))
        return true;
      if (!t || typeof t != "function" && typeof t != "object")
        return false;
      try {
        Ar2(t, null, qa);
      } catch (r) {
        if (r !== Ri)
          return false;
      }
      return !Ca(t) && Ua(t);
    } : function(t) {
      if (za(t))
        return true;
      if (!t || typeof t != "function" && typeof t != "object")
        return false;
      if (ev)
        return Ua(t);
      if (Ca(t))
        return false;
      var r = Ii.call(t);
      return r !== YE && r !== KE && !/^\[object HTML/.test(r) ? false : Ua(t);
    };
  });
  Wa = g4((yx, Xc) => {
    var rv = Yc(), nv = Object.prototype.toString, Kc = Object.prototype.hasOwnProperty, iv = function(t, r, n) {
      for (var i = 0, o2 = t.length;i < o2; i++)
        Kc.call(t, i) && (n == null ? r(t[i], i, t) : r.call(n, t[i], i, t));
    }, ov = function(t, r, n) {
      for (var i = 0, o2 = t.length;i < o2; i++)
        n == null ? r(t.charAt(i), i, t) : r.call(n, t.charAt(i), i, t);
    }, av = function(t, r, n) {
      for (var i in t)
        Kc.call(t, i) && (n == null ? r(t[i], i, t) : r.call(n, t[i], i, t));
    }, fv = function(t, r, n) {
      if (!rv(r))
        throw new TypeError("iterator must be a function");
      var i;
      arguments.length >= 3 && (i = n), nv.call(t) === "[object Array]" ? iv(t, r, i) : typeof t == "string" ? ov(t, r, i) : av(t, r, i);
    };
    Xc.exports = fv;
  });
  $a = g4((_x, Jc) => {
    var Za = ["BigInt64Array", "BigUint64Array", "Float32Array", "Float64Array", "Int16Array", "Int32Array", "Int8Array", "Uint16Array", "Uint32Array", "Uint8Array", "Uint8ClampedArray"], lv = typeof globalThis > "u" ? global : globalThis;
    Jc.exports = function() {
      for (var t = [], r = 0;r < Za.length; r++)
        typeof lv[Za[r]] == "function" && (t[t.length] = Za[r]);
      return t;
    };
  });
  Ga = g4((gx, Qc) => {
    var uv = Yr(), Ti = uv("%Object.getOwnPropertyDescriptor%", true);
    if (Ti)
      try {
        Ti([], "length");
      } catch {
        Ti = null;
      }
    Qc.exports = Ti;
  });
  Ya = g4((bx, id) => {
    var ed = Wa(), sv = $a(), Va = Ai(), cv = Va("Object.prototype.toString"), td = Hr()(), Oi = Ga(), dv = typeof globalThis > "u" ? global : globalThis, rd = sv(), hv = Va("Array.prototype.indexOf", true) || function(t, r) {
      for (var n = 0;n < t.length; n += 1)
        if (t[n] === r)
          return n;
      return -1;
    }, pv = Va("String.prototype.slice"), nd = {}, Ha = Object.getPrototypeOf;
    td && Oi && Ha && ed(rd, function(e) {
      var t = new dv[e];
      if (Symbol.toStringTag in t) {
        var r = Ha(t), n = Oi(r, Symbol.toStringTag);
        if (!n) {
          var i = Ha(r);
          n = Oi(i, Symbol.toStringTag);
        }
        nd[e] = n.get;
      }
    });
    var yv = function(t) {
      var r = false;
      return ed(nd, function(n, i) {
        if (!r)
          try {
            r = n.call(t) === i;
          } catch {
          }
      }), r;
    };
    id.exports = function(t) {
      if (!t || typeof t != "object")
        return false;
      if (!td || !(Symbol.toStringTag in t)) {
        var r = pv(cv(t), 8, -1);
        return hv(rd, r) > -1;
      }
      return Oi ? yv(t) : false;
    };
  });
  cd = g4((wx, sd) => {
    var ad = Wa(), _v = $a(), fd = Ai(), Ka = Ga(), gv = fd("Object.prototype.toString"), ld = Hr()(), od = typeof globalThis > "u" ? global : globalThis, bv = _v(), wv = fd("String.prototype.slice"), ud = {}, Xa = Object.getPrototypeOf;
    ld && Ka && Xa && ad(bv, function(e) {
      if (typeof od[e] == "function") {
        var t = new od[e];
        if (Symbol.toStringTag in t) {
          var r = Xa(t), n = Ka(r, Symbol.toStringTag);
          if (!n) {
            var i = Xa(r);
            n = Ka(i, Symbol.toStringTag);
          }
          ud[e] = n.get;
        }
      }
    });
    var Ev = function(t) {
      var r = false;
      return ad(ud, function(n, i) {
        if (!r)
          try {
            var o2 = n.call(t);
            o2 === i && (r = o2);
          } catch {
          }
      }), r;
    }, vv = Ya();
    sd.exports = function(t) {
      return vv(t) ? !ld || !(Symbol.toStringTag in t) ? wv(gv(t), 8, -1) : Ev(t) : false;
    };
  });
  xd = g4((L4) => {
    var mv = zc(), Sv = $c(), Oe = cd(), dd = Ya();
    function xr(e) {
      return e.call.bind(e);
    }
    var hd = typeof BigInt < "u", pd = typeof Symbol < "u", ge = xr(Object.prototype.toString), Av = xr(Number.prototype.valueOf), xv = xr(String.prototype.valueOf), Rv = xr(Boolean.prototype.valueOf);
    hd && (yd = xr(BigInt.prototype.valueOf));
    var yd;
    pd && (_d = xr(Symbol.prototype.valueOf));
    var _d;
    function Xr(e, t) {
      if (typeof e != "object")
        return false;
      try {
        return t(e), true;
      } catch {
        return false;
      }
    }
    L4.isArgumentsObject = mv;
    L4.isGeneratorFunction = Sv;
    L4.isTypedArray = dd;
    function Iv(e) {
      return typeof Promise < "u" && e instanceof Promise || e !== null && typeof e == "object" && typeof e.then == "function" && typeof e.catch == "function";
    }
    L4.isPromise = Iv;
    function Tv(e) {
      return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(e) : dd(e) || bd(e);
    }
    L4.isArrayBufferView = Tv;
    function Ov(e) {
      return Oe(e) === "Uint8Array";
    }
    L4.isUint8Array = Ov;
    function Nv(e) {
      return Oe(e) === "Uint8ClampedArray";
    }
    L4.isUint8ClampedArray = Nv;
    function kv(e) {
      return Oe(e) === "Uint16Array";
    }
    L4.isUint16Array = kv;
    function Fv(e) {
      return Oe(e) === "Uint32Array";
    }
    L4.isUint32Array = Fv;
    function Lv(e) {
      return Oe(e) === "Int8Array";
    }
    L4.isInt8Array = Lv;
    function Dv(e) {
      return Oe(e) === "Int16Array";
    }
    L4.isInt16Array = Dv;
    function Bv(e) {
      return Oe(e) === "Int32Array";
    }
    L4.isInt32Array = Bv;
    function Pv(e) {
      return Oe(e) === "Float32Array";
    }
    L4.isFloat32Array = Pv;
    function Mv(e) {
      return Oe(e) === "Float64Array";
    }
    L4.isFloat64Array = Mv;
    function jv(e) {
      return Oe(e) === "BigInt64Array";
    }
    L4.isBigInt64Array = jv;
    function Uv(e) {
      return Oe(e) === "BigUint64Array";
    }
    L4.isBigUint64Array = Uv;
    function Ni(e) {
      return ge(e) === "[object Map]";
    }
    Ni.working = typeof Map < "u" && Ni(new Map);
    function qv(e) {
      return typeof Map > "u" ? false : Ni.working ? Ni(e) : e instanceof Map;
    }
    L4.isMap = qv;
    function ki(e) {
      return ge(e) === "[object Set]";
    }
    ki.working = typeof Set < "u" && ki(new Set);
    function Cv(e) {
      return typeof Set > "u" ? false : ki.working ? ki(e) : e instanceof Set;
    }
    L4.isSet = Cv;
    function Fi(e) {
      return ge(e) === "[object WeakMap]";
    }
    Fi.working = typeof WeakMap < "u" && Fi(new WeakMap);
    function zv(e) {
      return typeof WeakMap > "u" ? false : Fi.working ? Fi(e) : e instanceof WeakMap;
    }
    L4.isWeakMap = zv;
    function Qa(e) {
      return ge(e) === "[object WeakSet]";
    }
    Qa.working = typeof WeakSet < "u" && Qa(new WeakSet);
    function Wv(e) {
      return Qa(e);
    }
    L4.isWeakSet = Wv;
    function Li(e) {
      return ge(e) === "[object ArrayBuffer]";
    }
    Li.working = typeof ArrayBuffer < "u" && Li(new ArrayBuffer);
    function gd(e) {
      return typeof ArrayBuffer > "u" ? false : Li.working ? Li(e) : e instanceof ArrayBuffer;
    }
    L4.isArrayBuffer = gd;
    function Di(e) {
      return ge(e) === "[object DataView]";
    }
    Di.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && Di(new DataView(new ArrayBuffer(1), 0, 1));
    function bd(e) {
      return typeof DataView > "u" ? false : Di.working ? Di(e) : e instanceof DataView;
    }
    L4.isDataView = bd;
    var Ja = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : undefined;
    function Kr2(e) {
      return ge(e) === "[object SharedArrayBuffer]";
    }
    function wd(e) {
      return typeof Ja > "u" ? false : (typeof Kr2.working > "u" && (Kr2.working = Kr2(new Ja)), Kr2.working ? Kr2(e) : e instanceof Ja);
    }
    L4.isSharedArrayBuffer = wd;
    function Zv(e) {
      return ge(e) === "[object AsyncFunction]";
    }
    L4.isAsyncFunction = Zv;
    function $v(e) {
      return ge(e) === "[object Map Iterator]";
    }
    L4.isMapIterator = $v;
    function Gv(e) {
      return ge(e) === "[object Set Iterator]";
    }
    L4.isSetIterator = Gv;
    function Hv(e) {
      return ge(e) === "[object Generator]";
    }
    L4.isGeneratorObject = Hv;
    function Vv(e) {
      return ge(e) === "[object WebAssembly.Module]";
    }
    L4.isWebAssemblyCompiledModule = Vv;
    function Ed(e) {
      return Xr(e, Av);
    }
    L4.isNumberObject = Ed;
    function vd(e) {
      return Xr(e, xv);
    }
    L4.isStringObject = vd;
    function md(e) {
      return Xr(e, Rv);
    }
    L4.isBooleanObject = md;
    function Sd(e) {
      return hd && Xr(e, yd);
    }
    L4.isBigIntObject = Sd;
    function Ad(e) {
      return pd && Xr(e, _d);
    }
    L4.isSymbolObject = Ad;
    function Yv(e) {
      return Ed(e) || vd(e) || md(e) || Sd(e) || Ad(e);
    }
    L4.isBoxedPrimitive = Yv;
    function Kv(e) {
      return typeof Uint8Array < "u" && (gd(e) || wd(e));
    }
    L4.isAnyArrayBuffer = Kv;
    ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(e) {
      Object.defineProperty(L4, e, { enumerable: false, value: function() {
        throw new Error(e + " is not supported in userland");
      } });
    });
  });
  Id = g4((vx, Rd) => {
    Rd.exports = function(t) {
      return t && typeof t == "object" && typeof t.copy == "function" && typeof t.fill == "function" && typeof t.readUInt8 == "function";
    };
  });
  Td = g4((mx, ef) => {
    typeof Object.create == "function" ? ef.exports = function(t, r) {
      r && (t.super_ = r, t.prototype = Object.create(r.prototype, { constructor: { value: t, enumerable: false, writable: true, configurable: true } }));
    } : ef.exports = function(t, r) {
      if (r) {
        t.super_ = r;
        var n = function() {
        };
        n.prototype = r.prototype, t.prototype = new n, t.prototype.constructor = t;
      }
    };
  });
  ff = g4((D3) => {
    var Od = Object.getOwnPropertyDescriptors || function(t) {
      for (var r = Object.keys(t), n = {}, i = 0;i < r.length; i++)
        n[r[i]] = Object.getOwnPropertyDescriptor(t, r[i]);
      return n;
    }, Xv = /%[sdj%]/g;
    D3.format = function(e) {
      if (!Ci(e)) {
        for (var t = [], r = 0;r < arguments.length; r++)
          t.push(ut2(arguments[r]));
        return t.join(" ");
      }
      for (var r = 1, n = arguments, i = n.length, o2 = String(e).replace(Xv, function(f2) {
        if (f2 === "%%")
          return "%";
        if (r >= i)
          return f2;
        switch (f2) {
          case "%s":
            return String(n[r++]);
          case "%d":
            return Number(n[r++]);
          case "%j":
            try {
              return JSON.stringify(n[r++]);
            } catch {
              return "[Circular]";
            }
          default:
            return f2;
        }
      }), a3 = n[r];r < i; a3 = n[++r])
        qi(a3) || !Rr2(a3) ? o2 += " " + a3 : o2 += " " + ut2(a3);
      return o2;
    };
    D3.deprecate = function(e, t) {
      if (typeof process < "u" && process.noDeprecation === true)
        return e;
      if (typeof process > "u")
        return function() {
          return D3.deprecate(e, t).apply(this, arguments);
        };
      var r = false;
      function n() {
        if (!r) {
          if (process.throwDeprecation)
            throw new Error(t);
          process.traceDeprecation ? console.trace(t) : console.error(t), r = true;
        }
        return e.apply(this, arguments);
      }
      return n;
    };
    var Bi = {}, Nd = /^$/;
    process.env.NODE_DEBUG && (Pi = process.env.NODE_DEBUG, Pi = Pi.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), Nd = new RegExp("^" + Pi + "$", "i"));
    var Pi;
    D3.debuglog = function(e) {
      if (e = e.toUpperCase(), !Bi[e])
        if (Nd.test(e)) {
          var t = process.pid;
          Bi[e] = function() {
            var r = D3.format.apply(D3, arguments);
            console.error("%s %d: %s", e, t, r);
          };
        } else
          Bi[e] = function() {
          };
      return Bi[e];
    };
    function ut2(e, t) {
      var r = { seen: [], stylize: Qv };
      return arguments.length >= 3 && (r.depth = arguments[2]), arguments.length >= 4 && (r.colors = arguments[3]), of(t) ? r.showHidden = t : t && D3._extend(r, t), Mt(r.showHidden) && (r.showHidden = false), Mt(r.depth) && (r.depth = 2), Mt(r.colors) && (r.colors = false), Mt(r.customInspect) && (r.customInspect = true), r.colors && (r.stylize = Jv), ji(r, e, r.depth);
    }
    D3.inspect = ut2;
    ut2.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] };
    ut2.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" };
    function Jv(e, t) {
      var r = ut2.styles[t];
      return r ? "\x1B[" + ut2.colors[r][0] + "m" + e + "\x1B[" + ut2.colors[r][1] + "m" : e;
    }
    function Qv(e, t) {
      return e;
    }
    function em(e) {
      var t = {};
      return e.forEach(function(r, n) {
        t[r] = true;
      }), t;
    }
    function ji(e, t, r) {
      if (e.customInspect && t && Mi(t.inspect) && t.inspect !== D3.inspect && !(t.constructor && t.constructor.prototype === t)) {
        var n = t.inspect(r, e);
        return Ci(n) || (n = ji(e, n, r)), n;
      }
      var i = tm(e, t);
      if (i)
        return i;
      var o2 = Object.keys(t), a3 = em(o2);
      if (e.showHidden && (o2 = Object.getOwnPropertyNames(t)), Qr(t) && (o2.indexOf("message") >= 0 || o2.indexOf("description") >= 0))
        return tf(t);
      if (o2.length === 0) {
        if (Mi(t)) {
          var f2 = t.name ? ": " + t.name : "";
          return e.stylize("[Function" + f2 + "]", "special");
        }
        if (Jr(t))
          return e.stylize(RegExp.prototype.toString.call(t), "regexp");
        if (Ui(t))
          return e.stylize(Date.prototype.toString.call(t), "date");
        if (Qr(t))
          return tf(t);
      }
      var u3 = "", l3 = false, s2 = ["{", "}"];
      if (kd(t) && (l3 = true, s2 = ["[", "]"]), Mi(t)) {
        var c2 = t.name ? ": " + t.name : "";
        u3 = " [Function" + c2 + "]";
      }
      if (Jr(t) && (u3 = " " + RegExp.prototype.toString.call(t)), Ui(t) && (u3 = " " + Date.prototype.toUTCString.call(t)), Qr(t) && (u3 = " " + tf(t)), o2.length === 0 && (!l3 || t.length == 0))
        return s2[0] + u3 + s2[1];
      if (r < 0)
        return Jr(t) ? e.stylize(RegExp.prototype.toString.call(t), "regexp") : e.stylize("[Object]", "special");
      e.seen.push(t);
      var h4;
      return l3 ? h4 = rm(e, t, r, a3, o2) : h4 = o2.map(function(d3) {
        return nf(e, t, r, a3, d3, l3);
      }), e.seen.pop(), nm(h4, u3, s2);
    }
    function tm(e, t) {
      if (Mt(t))
        return e.stylize("undefined", "undefined");
      if (Ci(t)) {
        var r = "'" + JSON.stringify(t).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return e.stylize(r, "string");
      }
      if (Fd(t))
        return e.stylize("" + t, "number");
      if (of(t))
        return e.stylize("" + t, "boolean");
      if (qi(t))
        return e.stylize("null", "null");
    }
    function tf(e) {
      return "[" + Error.prototype.toString.call(e) + "]";
    }
    function rm(e, t, r, n, i) {
      for (var o2 = [], a3 = 0, f2 = t.length;a3 < f2; ++a3)
        Ld(t, String(a3)) ? o2.push(nf(e, t, r, n, String(a3), true)) : o2.push("");
      return i.forEach(function(u3) {
        u3.match(/^\d+$/) || o2.push(nf(e, t, r, n, u3, true));
      }), o2;
    }
    function nf(e, t, r, n, i, o2) {
      var a3, f2, u3;
      if (u3 = Object.getOwnPropertyDescriptor(t, i) || { value: t[i] }, u3.get ? u3.set ? f2 = e.stylize("[Getter/Setter]", "special") : f2 = e.stylize("[Getter]", "special") : u3.set && (f2 = e.stylize("[Setter]", "special")), Ld(n, i) || (a3 = "[" + i + "]"), f2 || (e.seen.indexOf(u3.value) < 0 ? (qi(r) ? f2 = ji(e, u3.value, null) : f2 = ji(e, u3.value, r - 1), f2.indexOf(`
`) > -1 && (o2 ? f2 = f2.split(`
`).map(function(l3) {
        return "  " + l3;
      }).join(`
`).slice(2) : f2 = `
` + f2.split(`
`).map(function(l3) {
        return "   " + l3;
      }).join(`
`))) : f2 = e.stylize("[Circular]", "special")), Mt(a3)) {
        if (o2 && i.match(/^\d+$/))
          return f2;
        a3 = JSON.stringify("" + i), a3.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a3 = a3.slice(1, -1), a3 = e.stylize(a3, "name")) : (a3 = a3.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a3 = e.stylize(a3, "string"));
      }
      return a3 + ": " + f2;
    }
    function nm(e, t, r) {
      var n = 0, i = e.reduce(function(o2, a3) {
        return n++, a3.indexOf(`
`) >= 0 && n++, o2 + a3.replace(/\u001b\[\d\d?m/g, "").length + 1;
      }, 0);
      return i > 60 ? r[0] + (t === "" ? "" : t + `
 `) + " " + e.join(`,
  `) + " " + r[1] : r[0] + t + " " + e.join(", ") + " " + r[1];
    }
    D3.types = xd();
    function kd(e) {
      return Array.isArray(e);
    }
    D3.isArray = kd;
    function of(e) {
      return typeof e == "boolean";
    }
    D3.isBoolean = of;
    function qi(e) {
      return e === null;
    }
    D3.isNull = qi;
    function im(e) {
      return e == null;
    }
    D3.isNullOrUndefined = im;
    function Fd(e) {
      return typeof e == "number";
    }
    D3.isNumber = Fd;
    function Ci(e) {
      return typeof e == "string";
    }
    D3.isString = Ci;
    function om(e) {
      return typeof e == "symbol";
    }
    D3.isSymbol = om;
    function Mt(e) {
      return e === undefined;
    }
    D3.isUndefined = Mt;
    function Jr(e) {
      return Rr2(e) && af(e) === "[object RegExp]";
    }
    D3.isRegExp = Jr;
    D3.types.isRegExp = Jr;
    function Rr2(e) {
      return typeof e == "object" && e !== null;
    }
    D3.isObject = Rr2;
    function Ui(e) {
      return Rr2(e) && af(e) === "[object Date]";
    }
    D3.isDate = Ui;
    D3.types.isDate = Ui;
    function Qr(e) {
      return Rr2(e) && (af(e) === "[object Error]" || e instanceof Error);
    }
    D3.isError = Qr;
    D3.types.isNativeError = Qr;
    function Mi(e) {
      return typeof e == "function";
    }
    D3.isFunction = Mi;
    function am(e) {
      return e === null || typeof e == "boolean" || typeof e == "number" || typeof e == "string" || typeof e == "symbol" || typeof e > "u";
    }
    D3.isPrimitive = am;
    D3.isBuffer = Id();
    function af(e) {
      return Object.prototype.toString.call(e);
    }
    function rf(e) {
      return e < 10 ? "0" + e.toString(10) : e.toString(10);
    }
    var fm = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    function lm() {
      var e = new Date, t = [rf(e.getHours()), rf(e.getMinutes()), rf(e.getSeconds())].join(":");
      return [e.getDate(), fm[e.getMonth()], t].join(" ");
    }
    D3.log = function() {
      console.log("%s - %s", lm(), D3.format.apply(D3, arguments));
    };
    D3.inherits = Td();
    D3._extend = function(e, t) {
      if (!t || !Rr2(t))
        return e;
      for (var r = Object.keys(t), n = r.length;n--; )
        e[r[n]] = t[r[n]];
      return e;
    };
    function Ld(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    var Pt = typeof Symbol < "u" ? Symbol("util.promisify.custom") : undefined;
    D3.promisify = function(t) {
      if (typeof t != "function")
        throw new TypeError('The "original" argument must be of type Function');
      if (Pt && t[Pt]) {
        var r = t[Pt];
        if (typeof r != "function")
          throw new TypeError('The "util.promisify.custom" argument must be of type Function');
        return Object.defineProperty(r, Pt, { value: r, enumerable: false, writable: false, configurable: true }), r;
      }
      function r() {
        for (var n, i, o2 = new Promise(function(u3, l3) {
          n = u3, i = l3;
        }), a3 = [], f2 = 0;f2 < arguments.length; f2++)
          a3.push(arguments[f2]);
        a3.push(function(u3, l3) {
          u3 ? i(u3) : n(l3);
        });
        try {
          t.apply(this, a3);
        } catch (u3) {
          i(u3);
        }
        return o2;
      }
      return Object.setPrototypeOf(r, Object.getPrototypeOf(t)), Pt && Object.defineProperty(r, Pt, { value: r, enumerable: false, writable: false, configurable: true }), Object.defineProperties(r, Od(t));
    };
    D3.promisify.custom = Pt;
    function um(e, t) {
      if (!e) {
        var r = new Error("Promise was rejected with a falsy value");
        r.reason = e, e = r;
      }
      return t(e);
    }
    function sm(e) {
      if (typeof e != "function")
        throw new TypeError('The "original" argument must be of type Function');
      function t() {
        for (var r = [], n = 0;n < arguments.length; n++)
          r.push(arguments[n]);
        var i = r.pop();
        if (typeof i != "function")
          throw new TypeError("The last argument must be of type Function");
        var o2 = this, a3 = function() {
          return i.apply(o2, arguments);
        };
        e.apply(this, r).then(function(f2) {
          process.nextTick(a3.bind(null, null, f2));
        }, function(f2) {
          process.nextTick(um.bind(null, f2, a3));
        });
      }
      return Object.setPrototypeOf(t, Object.getPrototypeOf(e)), Object.defineProperties(t, Od(e)), t;
    }
    D3.callbackify = sm;
  });
  be = {};
  Bn(be, { TextDecoder: () => Bd, TextEncoder: () => Dd, default: () => cm });
  Ir2 = wo(() => {
    X3(be, vt(ff()));
    Dd = globalThis.TextEncoder, Bd = globalThis.TextDecoder, cm = { TextEncoder: Dd, TextDecoder: Bd };
  });
  cf = g4((xx, jd) => {
    function Tr(e) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Tr = function(r) {
        return typeof r;
      } : Tr = function(r) {
        return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
      }, Tr(e);
    }
    function dm(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function hm(e, t) {
      return t && (Tr(t) === "object" || typeof t == "function") ? t : pm(e);
    }
    function pm(e) {
      if (e === undefined)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }
    function uf(e) {
      return uf = Object.setPrototypeOf ? Object.getPrototypeOf : function(r) {
        return r.__proto__ || Object.getPrototypeOf(r);
      }, uf(e);
    }
    function ym(e, t) {
      if (typeof t != "function" && t !== null)
        throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: true, configurable: true } }), t && sf(e, t);
    }
    function sf(e, t) {
      return sf = Object.setPrototypeOf || function(n, i) {
        return n.__proto__ = i, n;
      }, sf(e, t);
    }
    var Md = {}, Or, lf;
    function en(e, t, r) {
      r || (r = Error);
      function n(o2, a3, f2) {
        return typeof t == "string" ? t : t(o2, a3, f2);
      }
      var i = function(o2) {
        ym(a3, o2);
        function a3(f2, u3, l3) {
          var s2;
          return dm(this, a3), s2 = hm(this, uf(a3).call(this, n(f2, u3, l3))), s2.code = e, s2;
        }
        return a3;
      }(r);
      Md[e] = i;
    }
    function Pd(e, t) {
      if (Array.isArray(e)) {
        var r = e.length;
        return e = e.map(function(n) {
          return String(n);
        }), r > 2 ? "one of ".concat(t, " ").concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1] : r === 2 ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0]);
      } else
        return "of ".concat(t, " ").concat(String(e));
    }
    function _m(e, t, r) {
      return e.substr(!r || r < 0 ? 0 : +r, t.length) === t;
    }
    function gm(e, t, r) {
      return (r === undefined || r > e.length) && (r = e.length), e.substring(r - t.length, r) === t;
    }
    function bm(e, t, r) {
      return typeof r != "number" && (r = 0), r + t.length > e.length ? false : e.indexOf(t, r) !== -1;
    }
    en("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError);
    en("ERR_INVALID_ARG_TYPE", function(e, t, r) {
      Or === undefined && (Or = tn()), Or(typeof e == "string", "'name' must be a string");
      var n;
      typeof t == "string" && _m(t, "not ") ? (n = "must not be", t = t.replace(/^not /, "")) : n = "must be";
      var i;
      if (gm(e, " argument"))
        i = "The ".concat(e, " ").concat(n, " ").concat(Pd(t, "type"));
      else {
        var o2 = bm(e, ".") ? "property" : "argument";
        i = 'The "'.concat(e, '" ').concat(o2, " ").concat(n, " ").concat(Pd(t, "type"));
      }
      return i += ". Received type ".concat(Tr(r)), i;
    }, TypeError);
    en("ERR_INVALID_ARG_VALUE", function(e, t) {
      var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "is invalid";
      lf === undefined && (lf = (Ir2(), se(be)));
      var n = lf.inspect(t);
      return n.length > 128 && (n = "".concat(n.slice(0, 128), "...")), "The argument '".concat(e, "' ").concat(r, ". Received ").concat(n);
    }, TypeError, RangeError);
    en("ERR_INVALID_RETURN_VALUE", function(e, t, r) {
      var n;
      return r && r.constructor && r.constructor.name ? n = "instance of ".concat(r.constructor.name) : n = "type ".concat(Tr(r)), "Expected ".concat(e, ' to be returned from the "').concat(t, '"') + " function but got ".concat(n, ".");
    }, TypeError);
    en("ERR_MISSING_ARGS", function() {
      for (var e = arguments.length, t = new Array(e), r = 0;r < e; r++)
        t[r] = arguments[r];
      Or === undefined && (Or = tn()), Or(t.length > 0, "At least one arg needs to be specified");
      var n = "The ", i = t.length;
      switch (t = t.map(function(o2) {
        return '"'.concat(o2, '"');
      }), i) {
        case 1:
          n += "".concat(t[0], " argument");
          break;
        case 2:
          n += "".concat(t[0], " and ").concat(t[1], " arguments");
          break;
        default:
          n += t.slice(0, i - 1).join(", "), n += ", and ".concat(t[i - 1], " arguments");
          break;
      }
      return "".concat(n, " must be specified");
    }, TypeError);
    jd.exports.codes = Md;
  });
  Wd = g4((Rx, zd) => {
    function wm(e) {
      for (var t = 1;t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {}, n = Object.keys(r);
        typeof Object.getOwnPropertySymbols == "function" && (n = n.concat(Object.getOwnPropertySymbols(r).filter(function(i) {
          return Object.getOwnPropertyDescriptor(r, i).enumerable;
        }))), n.forEach(function(i) {
          Em(e, i, r[i]);
        });
      }
      return e;
    }
    function Em(e, t, r) {
      return t in e ? Object.defineProperty(e, t, { value: r, enumerable: true, configurable: true, writable: true }) : e[t] = r, e;
    }
    function vm(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function Ud(e, t) {
      for (var r = 0;r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, n.key, n);
      }
    }
    function mm(e, t, r) {
      return t && Ud(e.prototype, t), r && Ud(e, r), e;
    }
    function Nr(e, t) {
      return t && (we(t) === "object" || typeof t == "function") ? t : df(e);
    }
    function df(e) {
      if (e === undefined)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }
    function Sm(e, t) {
      if (typeof t != "function" && t !== null)
        throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: true, configurable: true } }), t && an(e, t);
    }
    function hf(e) {
      var t = typeof Map == "function" ? new Map : undefined;
      return hf = function(n) {
        if (n === null || !xm(n))
          return n;
        if (typeof n != "function")
          throw new TypeError("Super expression must either be null or a function");
        if (typeof t < "u") {
          if (t.has(n))
            return t.get(n);
          t.set(n, i);
        }
        function i() {
          return zi(n, arguments, st3(this).constructor);
        }
        return i.prototype = Object.create(n.prototype, { constructor: { value: i, enumerable: false, writable: true, configurable: true } }), an(i, n);
      }, hf(e);
    }
    function Am() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return false;
      if (typeof Proxy == "function")
        return true;
      try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        })), true;
      } catch {
        return false;
      }
    }
    function zi(e, t, r) {
      return Am() ? zi = Reflect.construct : zi = function(i, o2, a3) {
        var f2 = [null];
        f2.push.apply(f2, o2);
        var u3 = Function.bind.apply(i, f2), l3 = new u3;
        return a3 && an(l3, a3.prototype), l3;
      }, zi.apply(null, arguments);
    }
    function xm(e) {
      return Function.toString.call(e).indexOf("[native code]") !== -1;
    }
    function an(e, t) {
      return an = Object.setPrototypeOf || function(n, i) {
        return n.__proto__ = i, n;
      }, an(e, t);
    }
    function st3(e) {
      return st3 = Object.setPrototypeOf ? Object.getPrototypeOf : function(r) {
        return r.__proto__ || Object.getPrototypeOf(r);
      }, st3(e);
    }
    function we(e) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? we = function(r) {
        return typeof r;
      } : we = function(r) {
        return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
      }, we(e);
    }
    var Rm = (Ir2(), se(be)), pf = Rm.inspect, Im = cf(), Tm = Im.codes.ERR_INVALID_ARG_TYPE;
    function qd(e, t, r) {
      return (r === undefined || r > e.length) && (r = e.length), e.substring(r - t.length, r) === t;
    }
    function Om(e, t) {
      if (t = Math.floor(t), e.length == 0 || t == 0)
        return "";
      var r = e.length * t;
      for (t = Math.floor(Math.log(t) / Math.log(2));t; )
        e += e, t--;
      return e += e.substring(0, r - e.length), e;
    }
    var Ne = "", rn = "", nn = "", ee = "", jt = { deepStrictEqual: "Expected values to be strictly deep-equal:", strictEqual: "Expected values to be strictly equal:", strictEqualObject: 'Expected "actual" to be reference-equal to "expected":', deepEqual: "Expected values to be loosely deep-equal:", equal: "Expected values to be loosely equal:", notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:', notStrictEqual: 'Expected "actual" to be strictly unequal to:', notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":', notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:', notEqual: 'Expected "actual" to be loosely unequal to:', notIdentical: "Values identical but not reference-equal:" }, Nm = 10;
    function Cd(e) {
      var t = Object.keys(e), r = Object.create(Object.getPrototypeOf(e));
      return t.forEach(function(n) {
        r[n] = e[n];
      }), Object.defineProperty(r, "message", { value: e.message }), r;
    }
    function on(e) {
      return pf(e, { compact: false, customInspect: false, depth: 1000, maxArrayLength: 1 / 0, showHidden: false, breakLength: 1 / 0, showProxy: false, sorted: true, getters: true });
    }
    function km(e, t, r) {
      var n = "", i = "", o2 = 0, a3 = "", f2 = false, u3 = on(e), l3 = u3.split(`
`), s2 = on(t).split(`
`), c2 = 0, h4 = "";
      if (r === "strictEqual" && we(e) === "object" && we(t) === "object" && e !== null && t !== null && (r = "strictEqualObject"), l3.length === 1 && s2.length === 1 && l3[0] !== s2[0]) {
        var d3 = l3[0].length + s2[0].length;
        if (d3 <= Nm) {
          if ((we(e) !== "object" || e === null) && (we(t) !== "object" || t === null) && (e !== 0 || t !== 0))
            return "".concat(jt[r], `

`) + "".concat(l3[0], " !== ").concat(s2[0], `
`);
        } else if (r !== "strictEqualObject") {
          var y4 = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;
          if (d3 < y4) {
            for (;l3[0][c2] === s2[0][c2]; )
              c2++;
            c2 > 2 && (h4 = `
  `.concat(Om(" ", c2), "^"), c2 = 0);
          }
        }
      }
      for (var b4 = l3[l3.length - 1], R3 = s2[s2.length - 1];b4 === R3 && (c2++ < 2 ? a3 = `
  `.concat(b4).concat(a3) : n = b4, l3.pop(), s2.pop(), !(l3.length === 0 || s2.length === 0)); )
        b4 = l3[l3.length - 1], R3 = s2[s2.length - 1];
      var _4 = Math.max(l3.length, s2.length);
      if (_4 === 0) {
        var E5 = u3.split(`
`);
        if (E5.length > 30)
          for (E5[26] = "".concat(Ne, "...").concat(ee);E5.length > 27; )
            E5.pop();
        return "".concat(jt.notIdentical, `

`).concat(E5.join(`
`), `
`);
      }
      c2 > 3 && (a3 = `
`.concat(Ne, "...").concat(ee).concat(a3), f2 = true), n !== "" && (a3 = `
  `.concat(n).concat(a3), n = "");
      var m3 = 0, A3 = jt[r] + `
`.concat(rn, "+ actual").concat(ee, " ").concat(nn, "- expected").concat(ee), v3 = " ".concat(Ne, "...").concat(ee, " Lines skipped");
      for (c2 = 0;c2 < _4; c2++) {
        var T2 = c2 - o2;
        if (l3.length < c2 + 1)
          T2 > 1 && c2 > 2 && (T2 > 4 ? (i += `
`.concat(Ne, "...").concat(ee), f2 = true) : T2 > 3 && (i += `
  `.concat(s2[c2 - 2]), m3++), i += `
  `.concat(s2[c2 - 1]), m3++), o2 = c2, n += `
`.concat(nn, "-").concat(ee, " ").concat(s2[c2]), m3++;
        else if (s2.length < c2 + 1)
          T2 > 1 && c2 > 2 && (T2 > 4 ? (i += `
`.concat(Ne, "...").concat(ee), f2 = true) : T2 > 3 && (i += `
  `.concat(l3[c2 - 2]), m3++), i += `
  `.concat(l3[c2 - 1]), m3++), o2 = c2, i += `
`.concat(rn, "+").concat(ee, " ").concat(l3[c2]), m3++;
        else {
          var I3 = s2[c2], S2 = l3[c2], k3 = S2 !== I3 && (!qd(S2, ",") || S2.slice(0, -1) !== I3);
          k3 && qd(I3, ",") && I3.slice(0, -1) === S2 && (k3 = false, S2 += ","), k3 ? (T2 > 1 && c2 > 2 && (T2 > 4 ? (i += `
`.concat(Ne, "...").concat(ee), f2 = true) : T2 > 3 && (i += `
  `.concat(l3[c2 - 2]), m3++), i += `
  `.concat(l3[c2 - 1]), m3++), o2 = c2, i += `
`.concat(rn, "+").concat(ee, " ").concat(S2), n += `
`.concat(nn, "-").concat(ee, " ").concat(I3), m3 += 2) : (i += n, n = "", (T2 === 1 || c2 === 0) && (i += `
  `.concat(S2), m3++));
        }
        if (m3 > 20 && c2 < _4 - 2)
          return "".concat(A3).concat(v3, `
`).concat(i, `
`).concat(Ne, "...").concat(ee).concat(n, `
`) + "".concat(Ne, "...").concat(ee);
      }
      return "".concat(A3).concat(f2 ? v3 : "", `
`).concat(i).concat(n).concat(a3).concat(h4);
    }
    var Fm = function(e) {
      Sm(t, e);
      function t(r) {
        var n;
        if (vm(this, t), we(r) !== "object" || r === null)
          throw new Tm("options", "Object", r);
        var { message: i, operator: o2, stackStartFn: a3, actual: f2, expected: u3 } = r, l3 = Error.stackTraceLimit;
        if (Error.stackTraceLimit = 0, i != null)
          n = Nr(this, st3(t).call(this, String(i)));
        else if (process.stderr && process.stderr.isTTY && (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1 ? (Ne = "\x1B[34m", rn = "\x1B[32m", ee = "\x1B[39m", nn = "\x1B[31m") : (Ne = "", rn = "", ee = "", nn = "")), we(f2) === "object" && f2 !== null && we(u3) === "object" && u3 !== null && "stack" in f2 && f2 instanceof Error && "stack" in u3 && u3 instanceof Error && (f2 = Cd(f2), u3 = Cd(u3)), o2 === "deepStrictEqual" || o2 === "strictEqual")
          n = Nr(this, st3(t).call(this, km(f2, u3, o2)));
        else if (o2 === "notDeepStrictEqual" || o2 === "notStrictEqual") {
          var s2 = jt[o2], c2 = on(f2).split(`
`);
          if (o2 === "notStrictEqual" && we(f2) === "object" && f2 !== null && (s2 = jt.notStrictEqualObject), c2.length > 30)
            for (c2[26] = "".concat(Ne, "...").concat(ee);c2.length > 27; )
              c2.pop();
          c2.length === 1 ? n = Nr(this, st3(t).call(this, "".concat(s2, " ").concat(c2[0]))) : n = Nr(this, st3(t).call(this, "".concat(s2, `

`).concat(c2.join(`
`), `
`)));
        } else {
          var h4 = on(f2), d3 = "", y4 = jt[o2];
          o2 === "notDeepEqual" || o2 === "notEqual" ? (h4 = "".concat(jt[o2], `

`).concat(h4), h4.length > 1024 && (h4 = "".concat(h4.slice(0, 1021), "..."))) : (d3 = "".concat(on(u3)), h4.length > 512 && (h4 = "".concat(h4.slice(0, 509), "...")), d3.length > 512 && (d3 = "".concat(d3.slice(0, 509), "...")), o2 === "deepEqual" || o2 === "equal" ? h4 = "".concat(y4, `

`).concat(h4, `

should equal

`) : d3 = " ".concat(o2, " ").concat(d3)), n = Nr(this, st3(t).call(this, "".concat(h4).concat(d3)));
        }
        return Error.stackTraceLimit = l3, n.generatedMessage = !i, Object.defineProperty(df(n), "name", { value: "AssertionError [ERR_ASSERTION]", enumerable: false, writable: true, configurable: true }), n.code = "ERR_ASSERTION", n.actual = f2, n.expected = u3, n.operator = o2, Error.captureStackTrace && Error.captureStackTrace(df(n), a3), n.stack, n.name = "AssertionError", Nr(n);
      }
      return mm(t, [{ key: "toString", value: function() {
        return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
      } }, { key: pf.custom, value: function(n, i) {
        return pf(this, wm({}, i, { customInspect: false, depth: 0 }));
      } }]), t;
    }(hf(Error));
    zd.exports = Fm;
  });
  Gd = g4((Ix, $d) => {
    function Zd(e, t) {
      if (e == null)
        throw new TypeError("Cannot convert first argument to object");
      for (var r = Object(e), n = 1;n < arguments.length; n++) {
        var i = arguments[n];
        if (i != null)
          for (var o2 = Object.keys(Object(i)), a3 = 0, f2 = o2.length;a3 < f2; a3++) {
            var u3 = o2[a3], l3 = Object.getOwnPropertyDescriptor(i, u3);
            l3 !== undefined && l3.enumerable && (r[u3] = i[u3]);
          }
      }
      return r;
    }
    function Lm() {
      Object.assign || Object.defineProperty(Object, "assign", { enumerable: false, configurable: true, writable: true, value: Zd });
    }
    $d.exports = { assign: Zd, polyfill: Lm };
  });
  yf = g4((Tx, Vd) => {
    var Hd = Object.prototype.toString;
    Vd.exports = function(t) {
      var r = Hd.call(t), n = r === "[object Arguments]";
      return n || (n = r !== "[object Array]" && t !== null && typeof t == "object" && typeof t.length == "number" && t.length >= 0 && Hd.call(t.callee) === "[object Function]"), n;
    };
  });
  nh = g4((Ox, rh) => {
    var th;
    Object.keys || (fn = Object.prototype.hasOwnProperty, _f = Object.prototype.toString, Yd = yf(), gf = Object.prototype.propertyIsEnumerable, Kd = !gf.call({ toString: null }, "toString"), Xd = gf.call(function() {
    }, "prototype"), ln = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], Wi = function(e) {
      var t = e.constructor;
      return t && t.prototype === e;
    }, Jd = { $applicationCache: true, $console: true, $external: true, $frame: true, $frameElement: true, $frames: true, $innerHeight: true, $innerWidth: true, $onmozfullscreenchange: true, $onmozfullscreenerror: true, $outerHeight: true, $outerWidth: true, $pageXOffset: true, $pageYOffset: true, $parent: true, $scrollLeft: true, $scrollTop: true, $scrollX: true, $scrollY: true, $self: true, $webkitIndexedDB: true, $webkitStorageInfo: true, $window: true }, Qd = function() {
      if (typeof window > "u")
        return false;
      for (var e in window)
        try {
          if (!Jd["$" + e] && fn.call(window, e) && window[e] !== null && typeof window[e] == "object")
            try {
              Wi(window[e]);
            } catch {
              return true;
            }
        } catch {
          return true;
        }
      return false;
    }(), eh = function(e) {
      if (typeof window > "u" || !Qd)
        return Wi(e);
      try {
        return Wi(e);
      } catch {
        return false;
      }
    }, th = function(t) {
      var r = t !== null && typeof t == "object", n = _f.call(t) === "[object Function]", i = Yd(t), o2 = r && _f.call(t) === "[object String]", a3 = [];
      if (!r && !n && !i)
        throw new TypeError("Object.keys called on a non-object");
      var f2 = Xd && n;
      if (o2 && t.length > 0 && !fn.call(t, 0))
        for (var u3 = 0;u3 < t.length; ++u3)
          a3.push(String(u3));
      if (i && t.length > 0)
        for (var l3 = 0;l3 < t.length; ++l3)
          a3.push(String(l3));
      else
        for (var s2 in t)
          !(f2 && s2 === "prototype") && fn.call(t, s2) && a3.push(String(s2));
      if (Kd)
        for (var c2 = eh(t), h4 = 0;h4 < ln.length; ++h4)
          !(c2 && ln[h4] === "constructor") && fn.call(t, ln[h4]) && a3.push(ln[h4]);
      return a3;
    });
    var fn, _f, Yd, gf, Kd, Xd, ln, Wi, Jd, Qd, eh;
    rh.exports = th;
  });
  fh = g4((Nx, ah) => {
    var Dm = Array.prototype.slice, Bm = yf(), ih = Object.keys, Zi = ih ? function(t) {
      return ih(t);
    } : nh(), oh = Object.keys;
    Zi.shim = function() {
      if (Object.keys) {
        var t = function() {
          var r = Object.keys(arguments);
          return r && r.length === arguments.length;
        }(1, 2);
        t || (Object.keys = function(n) {
          return Bm(n) ? oh(Dm.call(n)) : oh(n);
        });
      } else
        Object.keys = Zi;
      return Object.keys || Zi;
    };
    ah.exports = Zi;
  });
  uh = g4((kx, lh) => {
    var Pm = Yr(), bf = Pm("%Object.defineProperty%", true), wf = function() {
      if (bf)
        try {
          return bf({}, "a", { value: 1 }), true;
        } catch {
          return false;
        }
      return false;
    };
    wf.hasArrayLengthDefineBug = function() {
      if (!wf())
        return null;
      try {
        return bf([], "length", { value: 1 }).length !== 1;
      } catch {
        return true;
      }
    };
    lh.exports = wf;
  });
  un = g4((Fx, hh) => {
    var Mm = fh(), jm = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", Um = Object.prototype.toString, qm = Array.prototype.concat, sh = Object.defineProperty, Cm = function(e) {
      return typeof e == "function" && Um.call(e) === "[object Function]";
    }, zm = uh()(), ch = sh && zm, Wm = function(e, t, r, n) {
      if (t in e) {
        if (n === true) {
          if (e[t] === r)
            return;
        } else if (!Cm(n) || !n())
          return;
      }
      ch ? sh(e, t, { configurable: true, enumerable: false, value: r, writable: true }) : e[t] = r;
    }, dh = function(e, t) {
      var r = arguments.length > 2 ? arguments[2] : {}, n = Mm(t);
      jm && (n = qm.call(n, Object.getOwnPropertySymbols(t)));
      for (var i = 0;i < n.length; i += 1)
        Wm(e, n[i], t[n[i]], r[n[i]]);
    };
    dh.supportsDescriptors = !!ch;
    hh.exports = dh;
  });
  Ef = g4((Lx, yh) => {
    var ph = function(e) {
      return e !== e;
    };
    yh.exports = function(t, r) {
      return t === 0 && r === 0 ? 1 / t === 1 / r : !!(t === r || ph(t) && ph(r));
    };
  });
  vf = g4((Dx, _h) => {
    var Zm = Ef();
    _h.exports = function() {
      return typeof Object.is == "function" ? Object.is : Zm;
    };
  });
  bh = g4((Bx, gh) => {
    var $m = vf(), Gm = un();
    gh.exports = function() {
      var t = $m();
      return Gm(Object, { is: t }, { is: function() {
        return Object.is !== t;
      } }), t;
    };
  });
  mf = g4((Px, vh) => {
    var Hm = un(), Vm = Si(), Ym = Ef(), wh = vf(), Km = bh(), Eh = Vm(wh(), Object);
    Hm(Eh, { getPolyfill: wh, implementation: Ym, shim: Km });
    vh.exports = Eh;
  });
  Sf = g4((Mx, mh) => {
    mh.exports = function(t) {
      return t !== t;
    };
  });
  Af = g4((jx, Sh) => {
    var Xm = Sf();
    Sh.exports = function() {
      return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : Xm;
    };
  });
  xh = g4((Ux, Ah) => {
    var Jm = un(), Qm = Af();
    Ah.exports = function() {
      var t = Qm();
      return Jm(Number, { isNaN: t }, { isNaN: function() {
        return Number.isNaN !== t;
      } }), t;
    };
  });
  Oh = g4((qx, Th) => {
    var eS = Si(), tS = un(), rS = Sf(), Rh = Af(), nS = xh(), Ih = eS(Rh(), Number);
    tS(Ih, { getPolyfill: Rh, implementation: rS, shim: nS });
    Th.exports = Ih;
  });
  Vh = g4((Cx, Hh) => {
    function Nh(e, t) {
      return aS(e) || oS(e, t) || iS();
    }
    function iS() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
    function oS(e, t) {
      var r = [], n = true, i = false, o2 = undefined;
      try {
        for (var a3 = e[Symbol.iterator](), f2;!(n = (f2 = a3.next()).done) && (r.push(f2.value), !(t && r.length === t)); n = true)
          ;
      } catch (u3) {
        i = true, o2 = u3;
      } finally {
        try {
          !n && a3.return != null && a3.return();
        } finally {
          if (i)
            throw o2;
        }
      }
      return r;
    }
    function aS(e) {
      if (Array.isArray(e))
        return e;
    }
    function ce2(e) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? ce2 = function(r) {
        return typeof r;
      } : ce2 = function(r) {
        return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
      }, ce2(e);
    }
    var fS = /a/g.flags !== undefined, Xi = function(t) {
      var r = [];
      return t.forEach(function(n) {
        return r.push(n);
      }), r;
    }, kh = function(t) {
      var r = [];
      return t.forEach(function(n, i) {
        return r.push([i, n]);
      }), r;
    }, zh = Object.is ? Object.is : mf(), Yi = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
      return [];
    }, xf = Number.isNaN ? Number.isNaN : Oh();
    function If(e) {
      return e.call.bind(e);
    }
    var cn = If(Object.prototype.hasOwnProperty), Ki = If(Object.prototype.propertyIsEnumerable), Fh = If(Object.prototype.toString), ie = (Ir2(), se(be)).types, lS = ie.isAnyArrayBuffer, uS = ie.isArrayBufferView, Lh = ie.isDate, $i = ie.isMap, Dh = ie.isRegExp, Gi = ie.isSet, sS = ie.isNativeError, cS = ie.isBoxedPrimitive, Bh = ie.isNumberObject, Ph = ie.isStringObject, Mh = ie.isBooleanObject, jh = ie.isBigIntObject, dS = ie.isSymbolObject, hS = ie.isFloat32Array, pS = ie.isFloat64Array;
    function yS(e) {
      if (e.length === 0 || e.length > 10)
        return true;
      for (var t = 0;t < e.length; t++) {
        var r = e.charCodeAt(t);
        if (r < 48 || r > 57)
          return true;
      }
      return e.length === 10 && e >= Math.pow(2, 32);
    }
    function Hi(e) {
      return Object.keys(e).filter(yS).concat(Yi(e).filter(Object.prototype.propertyIsEnumerable.bind(e)));
    }
    function Wh(e, t) {
      if (e === t)
        return 0;
      for (var r = e.length, n = t.length, i = 0, o2 = Math.min(r, n);i < o2; ++i)
        if (e[i] !== t[i]) {
          r = e[i], n = t[i];
          break;
        }
      return r < n ? -1 : n < r ? 1 : 0;
    }
    var Vi = undefined, _S = true, gS = false, Rf = 0, Tf = 1, Zh = 2, $h = 3;
    function bS(e, t) {
      return fS ? e.source === t.source && e.flags === t.flags : RegExp.prototype.toString.call(e) === RegExp.prototype.toString.call(t);
    }
    function wS(e, t) {
      if (e.byteLength !== t.byteLength)
        return false;
      for (var r = 0;r < e.byteLength; r++)
        if (e[r] !== t[r])
          return false;
      return true;
    }
    function ES(e, t) {
      return e.byteLength !== t.byteLength ? false : Wh(new Uint8Array(e.buffer, e.byteOffset, e.byteLength), new Uint8Array(t.buffer, t.byteOffset, t.byteLength)) === 0;
    }
    function vS(e, t) {
      return e.byteLength === t.byteLength && Wh(new Uint8Array(e), new Uint8Array(t)) === 0;
    }
    function mS(e, t) {
      return Bh(e) ? Bh(t) && zh(Number.prototype.valueOf.call(e), Number.prototype.valueOf.call(t)) : Ph(e) ? Ph(t) && String.prototype.valueOf.call(e) === String.prototype.valueOf.call(t) : Mh(e) ? Mh(t) && Boolean.prototype.valueOf.call(e) === Boolean.prototype.valueOf.call(t) : jh(e) ? jh(t) && BigInt.prototype.valueOf.call(e) === BigInt.prototype.valueOf.call(t) : dS(t) && Symbol.prototype.valueOf.call(e) === Symbol.prototype.valueOf.call(t);
    }
    function Ee(e, t, r, n) {
      if (e === t)
        return e !== 0 ? true : r ? zh(e, t) : true;
      if (r) {
        if (ce2(e) !== "object")
          return typeof e == "number" && xf(e) && xf(t);
        if (ce2(t) !== "object" || e === null || t === null || Object.getPrototypeOf(e) !== Object.getPrototypeOf(t))
          return false;
      } else {
        if (e === null || ce2(e) !== "object")
          return t === null || ce2(t) !== "object" ? e == t : false;
        if (t === null || ce2(t) !== "object")
          return false;
      }
      var i = Fh(e), o2 = Fh(t);
      if (i !== o2)
        return false;
      if (Array.isArray(e)) {
        if (e.length !== t.length)
          return false;
        var a3 = Hi(e, Vi), f2 = Hi(t, Vi);
        return a3.length !== f2.length ? false : sn(e, t, r, n, Tf, a3);
      }
      if (i === "[object Object]" && (!$i(e) && $i(t) || !Gi(e) && Gi(t)))
        return false;
      if (Lh(e)) {
        if (!Lh(t) || Date.prototype.getTime.call(e) !== Date.prototype.getTime.call(t))
          return false;
      } else if (Dh(e)) {
        if (!Dh(t) || !bS(e, t))
          return false;
      } else if (sS(e) || e instanceof Error) {
        if (e.message !== t.message || e.name !== t.name)
          return false;
      } else if (uS(e)) {
        if (!r && (hS(e) || pS(e))) {
          if (!wS(e, t))
            return false;
        } else if (!ES(e, t))
          return false;
        var u3 = Hi(e, Vi), l3 = Hi(t, Vi);
        return u3.length !== l3.length ? false : sn(e, t, r, n, Rf, u3);
      } else {
        if (Gi(e))
          return !Gi(t) || e.size !== t.size ? false : sn(e, t, r, n, Zh);
        if ($i(e))
          return !$i(t) || e.size !== t.size ? false : sn(e, t, r, n, $h);
        if (lS(e)) {
          if (!vS(e, t))
            return false;
        } else if (cS(e) && !mS(e, t))
          return false;
      }
      return sn(e, t, r, n, Rf);
    }
    function Uh(e, t) {
      return t.filter(function(r) {
        return Ki(e, r);
      });
    }
    function sn(e, t, r, n, i, o2) {
      if (arguments.length === 5) {
        o2 = Object.keys(e);
        var a3 = Object.keys(t);
        if (o2.length !== a3.length)
          return false;
      }
      for (var f2 = 0;f2 < o2.length; f2++)
        if (!cn(t, o2[f2]))
          return false;
      if (r && arguments.length === 5) {
        var u3 = Yi(e);
        if (u3.length !== 0) {
          var l3 = 0;
          for (f2 = 0;f2 < u3.length; f2++) {
            var s2 = u3[f2];
            if (Ki(e, s2)) {
              if (!Ki(t, s2))
                return false;
              o2.push(s2), l3++;
            } else if (Ki(t, s2))
              return false;
          }
          var c2 = Yi(t);
          if (u3.length !== c2.length && Uh(t, c2).length !== l3)
            return false;
        } else {
          var h4 = Yi(t);
          if (h4.length !== 0 && Uh(t, h4).length !== 0)
            return false;
        }
      }
      if (o2.length === 0 && (i === Rf || i === Tf && e.length === 0 || e.size === 0))
        return true;
      if (n === undefined)
        n = { val1: new Map, val2: new Map, position: 0 };
      else {
        var d3 = n.val1.get(e);
        if (d3 !== undefined) {
          var y4 = n.val2.get(t);
          if (y4 !== undefined)
            return d3 === y4;
        }
        n.position++;
      }
      n.val1.set(e, n.position), n.val2.set(t, n.position);
      var b4 = IS(e, t, r, o2, n, i);
      return n.val1.delete(e), n.val2.delete(t), b4;
    }
    function qh(e, t, r, n) {
      for (var i = Xi(e), o2 = 0;o2 < i.length; o2++) {
        var a3 = i[o2];
        if (Ee(t, a3, r, n))
          return e.delete(a3), true;
      }
      return false;
    }
    function Gh(e) {
      switch (ce2(e)) {
        case "undefined":
          return null;
        case "object":
          return;
        case "symbol":
          return false;
        case "string":
          e = +e;
        case "number":
          if (xf(e))
            return false;
      }
      return true;
    }
    function SS(e, t, r) {
      var n = Gh(r);
      return n ?? (t.has(n) && !e.has(n));
    }
    function AS(e, t, r, n, i) {
      var o2 = Gh(r);
      if (o2 != null)
        return o2;
      var a3 = t.get(o2);
      return a3 === undefined && !t.has(o2) || !Ee(n, a3, false, i) ? false : !e.has(o2) && Ee(n, a3, false, i);
    }
    function xS(e, t, r, n) {
      for (var i = null, o2 = Xi(e), a3 = 0;a3 < o2.length; a3++) {
        var f2 = o2[a3];
        if (ce2(f2) === "object" && f2 !== null)
          i === null && (i = new Set), i.add(f2);
        else if (!t.has(f2)) {
          if (r || !SS(e, t, f2))
            return false;
          i === null && (i = new Set), i.add(f2);
        }
      }
      if (i !== null) {
        for (var u3 = Xi(t), l3 = 0;l3 < u3.length; l3++) {
          var s2 = u3[l3];
          if (ce2(s2) === "object" && s2 !== null) {
            if (!qh(i, s2, r, n))
              return false;
          } else if (!r && !e.has(s2) && !qh(i, s2, r, n))
            return false;
        }
        return i.size === 0;
      }
      return true;
    }
    function Ch(e, t, r, n, i, o2) {
      for (var a3 = Xi(e), f2 = 0;f2 < a3.length; f2++) {
        var u3 = a3[f2];
        if (Ee(r, u3, i, o2) && Ee(n, t.get(u3), i, o2))
          return e.delete(u3), true;
      }
      return false;
    }
    function RS(e, t, r, n) {
      for (var i = null, o2 = kh(e), a3 = 0;a3 < o2.length; a3++) {
        var f2 = Nh(o2[a3], 2), u3 = f2[0], l3 = f2[1];
        if (ce2(u3) === "object" && u3 !== null)
          i === null && (i = new Set), i.add(u3);
        else {
          var s2 = t.get(u3);
          if (s2 === undefined && !t.has(u3) || !Ee(l3, s2, r, n)) {
            if (r || !AS(e, t, u3, l3, n))
              return false;
            i === null && (i = new Set), i.add(u3);
          }
        }
      }
      if (i !== null) {
        for (var c2 = kh(t), h4 = 0;h4 < c2.length; h4++) {
          var d3 = Nh(c2[h4], 2), u3 = d3[0], y4 = d3[1];
          if (ce2(u3) === "object" && u3 !== null) {
            if (!Ch(i, e, u3, y4, r, n))
              return false;
          } else if (!r && (!e.has(u3) || !Ee(e.get(u3), y4, false, n)) && !Ch(i, e, u3, y4, false, n))
            return false;
        }
        return i.size === 0;
      }
      return true;
    }
    function IS(e, t, r, n, i, o2) {
      var a3 = 0;
      if (o2 === Zh) {
        if (!xS(e, t, r, i))
          return false;
      } else if (o2 === $h) {
        if (!RS(e, t, r, i))
          return false;
      } else if (o2 === Tf)
        for (;a3 < e.length; a3++)
          if (cn(e, a3)) {
            if (!cn(t, a3) || !Ee(e[a3], t[a3], r, i))
              return false;
          } else {
            if (cn(t, a3))
              return false;
            for (var f2 = Object.keys(e);a3 < f2.length; a3++) {
              var u3 = f2[a3];
              if (!cn(t, u3) || !Ee(e[u3], t[u3], r, i))
                return false;
            }
            return f2.length === Object.keys(t).length;
          }
      for (a3 = 0;a3 < n.length; a3++) {
        var l3 = n[a3];
        if (!Ee(e[l3], t[l3], r, i))
          return false;
      }
      return true;
    }
    function TS(e, t) {
      return Ee(e, t, gS);
    }
    function OS(e, t) {
      return Ee(e, t, _S);
    }
    Hh.exports = { isDeepEqual: TS, isDeepStrictEqual: OS };
  });
  tn = g4((zx, sp) => {
    function ct3(e) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? ct3 = function(r) {
        return typeof r;
      } : ct3 = function(r) {
        return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
      }, ct3(e);
    }
    function NS(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    var kS = cf(), hn = kS.codes, Yh = hn.ERR_AMBIGUOUS_ARGUMENT, dn = hn.ERR_INVALID_ARG_TYPE, FS = hn.ERR_INVALID_ARG_VALUE, LS = hn.ERR_INVALID_RETURN_VALUE, ht2 = hn.ERR_MISSING_ARGS, Ut = Wd(), DS = (Ir2(), se(be)), BS = DS.inspect, Qh = (Ir2(), se(be)).types, PS = Qh.isPromise, Of = Qh.isRegExp, MS = Object.assign ? Object.assign : Gd().assign, ep = Object.is ? Object.is : mf(), dt2, Ji;
    function pn() {
      var e = Vh();
      dt2 = e.isDeepEqual, Ji = e.isDeepStrictEqual;
    }
    var Kh = false, q2 = sp.exports = Nf, Qi = {};
    function ke(e) {
      throw e.message instanceof Error ? e.message : new Ut(e);
    }
    function tp(e, t, r, n, i) {
      var o2 = arguments.length, a3;
      if (o2 === 0)
        a3 = "Failed";
      else if (o2 === 1)
        r = e, e = undefined;
      else {
        if (Kh === false) {
          Kh = true;
          var f2 = process.emitWarning ? process.emitWarning : console.warn.bind(console);
          f2("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
        }
        o2 === 2 && (n = "!=");
      }
      if (r instanceof Error)
        throw r;
      var u3 = { actual: e, expected: t, operator: n === undefined ? "fail" : n, stackStartFn: i || tp };
      r !== undefined && (u3.message = r);
      var l3 = new Ut(u3);
      throw a3 && (l3.message = a3, l3.generatedMessage = true), l3;
    }
    q2.fail = tp;
    q2.AssertionError = Ut;
    function rp(e, t, r, n) {
      if (!r) {
        var i = false;
        if (t === 0)
          i = true, n = "No value argument passed to `assert.ok()`";
        else if (n instanceof Error)
          throw n;
        var o2 = new Ut({ actual: r, expected: true, message: n, operator: "==", stackStartFn: e });
        throw o2.generatedMessage = i, o2;
      }
    }
    function Nf() {
      for (var e = arguments.length, t = new Array(e), r = 0;r < e; r++)
        t[r] = arguments[r];
      rp.apply(undefined, [Nf, t.length].concat(t));
    }
    q2.ok = Nf;
    q2.equal = function e(t, r, n) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      t != r && ke({ actual: t, expected: r, message: n, operator: "==", stackStartFn: e });
    };
    q2.notEqual = function e(t, r, n) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      t == r && ke({ actual: t, expected: r, message: n, operator: "!=", stackStartFn: e });
    };
    q2.deepEqual = function e(t, r, n) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      dt2 === undefined && pn(), dt2(t, r) || ke({ actual: t, expected: r, message: n, operator: "deepEqual", stackStartFn: e });
    };
    q2.notDeepEqual = function e(t, r, n) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      dt2 === undefined && pn(), dt2(t, r) && ke({ actual: t, expected: r, message: n, operator: "notDeepEqual", stackStartFn: e });
    };
    q2.deepStrictEqual = function e(t, r, n) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      dt2 === undefined && pn(), Ji(t, r) || ke({ actual: t, expected: r, message: n, operator: "deepStrictEqual", stackStartFn: e });
    };
    q2.notDeepStrictEqual = np;
    function np(e, t, r) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      dt2 === undefined && pn(), Ji(e, t) && ke({ actual: e, expected: t, message: r, operator: "notDeepStrictEqual", stackStartFn: np });
    }
    q2.strictEqual = function e(t, r, n) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      ep(t, r) || ke({ actual: t, expected: r, message: n, operator: "strictEqual", stackStartFn: e });
    };
    q2.notStrictEqual = function e(t, r, n) {
      if (arguments.length < 2)
        throw new ht2("actual", "expected");
      ep(t, r) && ke({ actual: t, expected: r, message: n, operator: "notStrictEqual", stackStartFn: e });
    };
    var Xh = function e(t, r, n) {
      var i = this;
      NS(this, e), r.forEach(function(o2) {
        o2 in t && (n !== undefined && typeof n[o2] == "string" && Of(t[o2]) && t[o2].test(n[o2]) ? i[o2] = n[o2] : i[o2] = t[o2]);
      });
    };
    function jS(e, t, r, n, i, o2) {
      if (!(r in e) || !Ji(e[r], t[r])) {
        if (!n) {
          var a3 = new Xh(e, i), f2 = new Xh(t, i, e), u3 = new Ut({ actual: a3, expected: f2, operator: "deepStrictEqual", stackStartFn: o2 });
          throw u3.actual = e, u3.expected = t, u3.operator = o2.name, u3;
        }
        ke({ actual: e, expected: t, message: n, operator: o2.name, stackStartFn: o2 });
      }
    }
    function ip(e, t, r, n) {
      if (typeof t != "function") {
        if (Of(t))
          return t.test(e);
        if (arguments.length === 2)
          throw new dn("expected", ["Function", "RegExp"], t);
        if (ct3(e) !== "object" || e === null) {
          var i = new Ut({ actual: e, expected: t, message: r, operator: "deepStrictEqual", stackStartFn: n });
          throw i.operator = n.name, i;
        }
        var o2 = Object.keys(t);
        if (t instanceof Error)
          o2.push("name", "message");
        else if (o2.length === 0)
          throw new FS("error", t, "may not be an empty object");
        return dt2 === undefined && pn(), o2.forEach(function(a3) {
          typeof e[a3] == "string" && Of(t[a3]) && t[a3].test(e[a3]) || jS(e, t, a3, r, o2, n);
        }), true;
      }
      return t.prototype !== undefined && e instanceof t ? true : Error.isPrototypeOf(t) ? false : t.call({}, e) === true;
    }
    function op(e) {
      if (typeof e != "function")
        throw new dn("fn", "Function", e);
      try {
        e();
      } catch (t) {
        return t;
      }
      return Qi;
    }
    function Jh(e) {
      return PS(e) || e !== null && ct3(e) === "object" && typeof e.then == "function" && typeof e.catch == "function";
    }
    function ap(e) {
      return Promise.resolve().then(function() {
        var t;
        if (typeof e == "function") {
          if (t = e(), !Jh(t))
            throw new LS("instance of Promise", "promiseFn", t);
        } else if (Jh(e))
          t = e;
        else
          throw new dn("promiseFn", ["Function", "Promise"], e);
        return Promise.resolve().then(function() {
          return t;
        }).then(function() {
          return Qi;
        }).catch(function(r) {
          return r;
        });
      });
    }
    function fp(e, t, r, n) {
      if (typeof r == "string") {
        if (arguments.length === 4)
          throw new dn("error", ["Object", "Error", "Function", "RegExp"], r);
        if (ct3(t) === "object" && t !== null) {
          if (t.message === r)
            throw new Yh("error/message", 'The error message "'.concat(t.message, '" is identical to the message.'));
        } else if (t === r)
          throw new Yh("error/message", 'The error "'.concat(t, '" is identical to the message.'));
        n = r, r = undefined;
      } else if (r != null && ct3(r) !== "object" && typeof r != "function")
        throw new dn("error", ["Object", "Error", "Function", "RegExp"], r);
      if (t === Qi) {
        var i = "";
        r && r.name && (i += " (".concat(r.name, ")")), i += n ? ": ".concat(n) : ".";
        var o2 = e.name === "rejects" ? "rejection" : "exception";
        ke({ actual: undefined, expected: r, operator: e.name, message: "Missing expected ".concat(o2).concat(i), stackStartFn: e });
      }
      if (r && !ip(t, r, n, e))
        throw t;
    }
    function lp(e, t, r, n) {
      if (t !== Qi) {
        if (typeof r == "string" && (n = r, r = undefined), !r || ip(t, r)) {
          var i = n ? ": ".concat(n) : ".", o2 = e.name === "doesNotReject" ? "rejection" : "exception";
          ke({ actual: t, expected: r, operator: e.name, message: "Got unwanted ".concat(o2).concat(i, `
`) + 'Actual message: "'.concat(t && t.message, '"'), stackStartFn: e });
        }
        throw t;
      }
    }
    q2.throws = function e(t) {
      for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;i < r; i++)
        n[i - 1] = arguments[i];
      fp.apply(undefined, [e, op(t)].concat(n));
    };
    q2.rejects = function e(t) {
      for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;i < r; i++)
        n[i - 1] = arguments[i];
      return ap(t).then(function(o2) {
        return fp.apply(undefined, [e, o2].concat(n));
      });
    };
    q2.doesNotThrow = function e(t) {
      for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;i < r; i++)
        n[i - 1] = arguments[i];
      lp.apply(undefined, [e, op(t)].concat(n));
    };
    q2.doesNotReject = function e(t) {
      for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;i < r; i++)
        n[i - 1] = arguments[i];
      return ap(t).then(function(o2) {
        return lp.apply(undefined, [e, o2].concat(n));
      });
    };
    q2.ifError = function e(t) {
      if (t != null) {
        var r = "ifError got unwanted exception: ";
        ct3(t) === "object" && typeof t.message == "string" ? t.message.length === 0 && t.constructor ? r += t.constructor.name : r += t.message : r += BS(t);
        var n = new Ut({ actual: t, expected: null, operator: "ifError", message: r, stackStartFn: e }), i = t.stack;
        if (typeof i == "string") {
          var o2 = i.split(`
`);
          o2.shift();
          for (var a3 = n.stack.split(`
`), f2 = 0;f2 < o2.length; f2++) {
            var u3 = a3.indexOf(o2[f2]);
            if (u3 !== -1) {
              a3 = a3.slice(0, u3);
              break;
            }
          }
          n.stack = "".concat(a3.join(`
`), `
`).concat(o2.join(`
`));
        }
        throw n;
      }
    };
    function up() {
      for (var e = arguments.length, t = new Array(e), r = 0;r < e; r++)
        t[r] = arguments[r];
      rp.apply(undefined, [up, t.length].concat(t));
    }
    q2.strict = MS(up, q2, { equal: q2.strictEqual, deepEqual: q2.deepStrictEqual, notEqual: q2.notStrictEqual, notDeepEqual: q2.notDeepStrictEqual });
    q2.strict.strict = q2.strict;
  });
  dp = g4((Wx, cp) => {
    function US() {
      this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
    }
    cp.exports = US;
  });
  yn = g4((oe) => {
    var qS = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
    function CS(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    oe.assign = function(e) {
      for (var t = Array.prototype.slice.call(arguments, 1);t.length; ) {
        var r = t.shift();
        if (!!r) {
          if (typeof r != "object")
            throw new TypeError(r + "must be non-object");
          for (var n in r)
            CS(r, n) && (e[n] = r[n]);
        }
      }
      return e;
    };
    oe.shrinkBuf = function(e, t) {
      return e.length === t ? e : e.subarray ? e.subarray(0, t) : (e.length = t, e);
    };
    var zS = { arraySet: function(e, t, r, n, i) {
      if (t.subarray && e.subarray) {
        e.set(t.subarray(r, r + n), i);
        return;
      }
      for (var o2 = 0;o2 < n; o2++)
        e[i + o2] = t[r + o2];
    }, flattenChunks: function(e) {
      var t, r, n, i, o2, a3;
      for (n = 0, t = 0, r = e.length;t < r; t++)
        n += e[t].length;
      for (a3 = new Uint8Array(n), i = 0, t = 0, r = e.length;t < r; t++)
        o2 = e[t], a3.set(o2, i), i += o2.length;
      return a3;
    } }, WS = { arraySet: function(e, t, r, n, i) {
      for (var o2 = 0;o2 < n; o2++)
        e[i + o2] = t[r + o2];
    }, flattenChunks: function(e) {
      return [].concat.apply([], e);
    } };
    oe.setTyped = function(e) {
      e ? (oe.Buf8 = Uint8Array, oe.Buf16 = Uint16Array, oe.Buf32 = Int32Array, oe.assign(oe, zS)) : (oe.Buf8 = Array, oe.Buf16 = Array, oe.Buf32 = Array, oe.assign(oe, WS));
    };
    oe.setTyped(qS);
  });
  Bp = g4((Lr) => {
    var ZS = yn(), $S = 4, hp = 0, pp = 1, GS = 2;
    function Fr3(e) {
      for (var t = e.length;--t >= 0; )
        e[t] = 0;
    }
    var HS = 0, Ep = 1, VS = 2, YS = 3, KS = 258, Mf = 29, vn = 256, gn = vn + 1 + Mf, kr = 30, jf = 19, vp = 2 * gn + 1, qt = 15, kf = 16, XS = 7, Uf = 256, mp = 16, Sp = 17, Ap = 18, Bf = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], eo = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], JS = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], xp = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], QS = 512, tt2 = new Array((gn + 2) * 2);
    Fr3(tt2);
    var _n = new Array(kr * 2);
    Fr3(_n);
    var bn = new Array(QS);
    Fr3(bn);
    var wn = new Array(KS - YS + 1);
    Fr3(wn);
    var qf = new Array(Mf);
    Fr3(qf);
    var to = new Array(kr);
    Fr3(to);
    function Ff(e, t, r, n, i) {
      this.static_tree = e, this.extra_bits = t, this.extra_base = r, this.elems = n, this.max_length = i, this.has_stree = e && e.length;
    }
    var Rp, Ip, Tp;
    function Lf(e, t) {
      this.dyn_tree = e, this.max_code = 0, this.stat_desc = t;
    }
    function Op(e) {
      return e < 256 ? bn[e] : bn[256 + (e >>> 7)];
    }
    function En(e, t) {
      e.pending_buf[e.pending++] = t & 255, e.pending_buf[e.pending++] = t >>> 8 & 255;
    }
    function ue(e, t, r) {
      e.bi_valid > kf - r ? (e.bi_buf |= t << e.bi_valid & 65535, En(e, e.bi_buf), e.bi_buf = t >> kf - e.bi_valid, e.bi_valid += r - kf) : (e.bi_buf |= t << e.bi_valid & 65535, e.bi_valid += r);
    }
    function We(e, t, r) {
      ue(e, r[t * 2], r[t * 2 + 1]);
    }
    function Np(e, t) {
      var r = 0;
      do
        r |= e & 1, e >>>= 1, r <<= 1;
      while (--t > 0);
      return r >>> 1;
    }
    function e1(e) {
      e.bi_valid === 16 ? (En(e, e.bi_buf), e.bi_buf = 0, e.bi_valid = 0) : e.bi_valid >= 8 && (e.pending_buf[e.pending++] = e.bi_buf & 255, e.bi_buf >>= 8, e.bi_valid -= 8);
    }
    function t1(e, t) {
      var { dyn_tree: r, max_code: n } = t, i = t.stat_desc.static_tree, o2 = t.stat_desc.has_stree, a3 = t.stat_desc.extra_bits, f2 = t.stat_desc.extra_base, u3 = t.stat_desc.max_length, l3, s2, c2, h4, d3, y4, b4 = 0;
      for (h4 = 0;h4 <= qt; h4++)
        e.bl_count[h4] = 0;
      for (r[e.heap[e.heap_max] * 2 + 1] = 0, l3 = e.heap_max + 1;l3 < vp; l3++)
        s2 = e.heap[l3], h4 = r[r[s2 * 2 + 1] * 2 + 1] + 1, h4 > u3 && (h4 = u3, b4++), r[s2 * 2 + 1] = h4, !(s2 > n) && (e.bl_count[h4]++, d3 = 0, s2 >= f2 && (d3 = a3[s2 - f2]), y4 = r[s2 * 2], e.opt_len += y4 * (h4 + d3), o2 && (e.static_len += y4 * (i[s2 * 2 + 1] + d3)));
      if (b4 !== 0) {
        do {
          for (h4 = u3 - 1;e.bl_count[h4] === 0; )
            h4--;
          e.bl_count[h4]--, e.bl_count[h4 + 1] += 2, e.bl_count[u3]--, b4 -= 2;
        } while (b4 > 0);
        for (h4 = u3;h4 !== 0; h4--)
          for (s2 = e.bl_count[h4];s2 !== 0; )
            c2 = e.heap[--l3], !(c2 > n) && (r[c2 * 2 + 1] !== h4 && (e.opt_len += (h4 - r[c2 * 2 + 1]) * r[c2 * 2], r[c2 * 2 + 1] = h4), s2--);
      }
    }
    function kp(e, t, r) {
      var n = new Array(qt + 1), i = 0, o2, a3;
      for (o2 = 1;o2 <= qt; o2++)
        n[o2] = i = i + r[o2 - 1] << 1;
      for (a3 = 0;a3 <= t; a3++) {
        var f2 = e[a3 * 2 + 1];
        f2 !== 0 && (e[a3 * 2] = Np(n[f2]++, f2));
      }
    }
    function r1() {
      var e, t, r, n, i, o2 = new Array(qt + 1);
      for (r = 0, n = 0;n < Mf - 1; n++)
        for (qf[n] = r, e = 0;e < 1 << Bf[n]; e++)
          wn[r++] = n;
      for (wn[r - 1] = n, i = 0, n = 0;n < 16; n++)
        for (to[n] = i, e = 0;e < 1 << eo[n]; e++)
          bn[i++] = n;
      for (i >>= 7;n < kr; n++)
        for (to[n] = i << 7, e = 0;e < 1 << eo[n] - 7; e++)
          bn[256 + i++] = n;
      for (t = 0;t <= qt; t++)
        o2[t] = 0;
      for (e = 0;e <= 143; )
        tt2[e * 2 + 1] = 8, e++, o2[8]++;
      for (;e <= 255; )
        tt2[e * 2 + 1] = 9, e++, o2[9]++;
      for (;e <= 279; )
        tt2[e * 2 + 1] = 7, e++, o2[7]++;
      for (;e <= 287; )
        tt2[e * 2 + 1] = 8, e++, o2[8]++;
      for (kp(tt2, gn + 1, o2), e = 0;e < kr; e++)
        _n[e * 2 + 1] = 5, _n[e * 2] = Np(e, 5);
      Rp = new Ff(tt2, Bf, vn + 1, gn, qt), Ip = new Ff(_n, eo, 0, kr, qt), Tp = new Ff(new Array(0), JS, 0, jf, XS);
    }
    function Fp(e) {
      var t;
      for (t = 0;t < gn; t++)
        e.dyn_ltree[t * 2] = 0;
      for (t = 0;t < kr; t++)
        e.dyn_dtree[t * 2] = 0;
      for (t = 0;t < jf; t++)
        e.bl_tree[t * 2] = 0;
      e.dyn_ltree[Uf * 2] = 1, e.opt_len = e.static_len = 0, e.last_lit = e.matches = 0;
    }
    function Lp(e) {
      e.bi_valid > 8 ? En(e, e.bi_buf) : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf), e.bi_buf = 0, e.bi_valid = 0;
    }
    function n1(e, t, r, n) {
      Lp(e), n && (En(e, r), En(e, ~r)), ZS.arraySet(e.pending_buf, e.window, t, r, e.pending), e.pending += r;
    }
    function yp(e, t, r, n) {
      var i = t * 2, o2 = r * 2;
      return e[i] < e[o2] || e[i] === e[o2] && n[t] <= n[r];
    }
    function Df(e, t, r) {
      for (var n = e.heap[r], i = r << 1;i <= e.heap_len && (i < e.heap_len && yp(t, e.heap[i + 1], e.heap[i], e.depth) && i++, !yp(t, n, e.heap[i], e.depth)); )
        e.heap[r] = e.heap[i], r = i, i <<= 1;
      e.heap[r] = n;
    }
    function _p(e, t, r) {
      var n, i, o2 = 0, a3, f2;
      if (e.last_lit !== 0)
        do
          n = e.pending_buf[e.d_buf + o2 * 2] << 8 | e.pending_buf[e.d_buf + o2 * 2 + 1], i = e.pending_buf[e.l_buf + o2], o2++, n === 0 ? We(e, i, t) : (a3 = wn[i], We(e, a3 + vn + 1, t), f2 = Bf[a3], f2 !== 0 && (i -= qf[a3], ue(e, i, f2)), n--, a3 = Op(n), We(e, a3, r), f2 = eo[a3], f2 !== 0 && (n -= to[a3], ue(e, n, f2)));
        while (o2 < e.last_lit);
      We(e, Uf, t);
    }
    function Pf(e, t) {
      var r = t.dyn_tree, n = t.stat_desc.static_tree, i = t.stat_desc.has_stree, o2 = t.stat_desc.elems, a3, f2, u3 = -1, l3;
      for (e.heap_len = 0, e.heap_max = vp, a3 = 0;a3 < o2; a3++)
        r[a3 * 2] !== 0 ? (e.heap[++e.heap_len] = u3 = a3, e.depth[a3] = 0) : r[a3 * 2 + 1] = 0;
      for (;e.heap_len < 2; )
        l3 = e.heap[++e.heap_len] = u3 < 2 ? ++u3 : 0, r[l3 * 2] = 1, e.depth[l3] = 0, e.opt_len--, i && (e.static_len -= n[l3 * 2 + 1]);
      for (t.max_code = u3, a3 = e.heap_len >> 1;a3 >= 1; a3--)
        Df(e, r, a3);
      l3 = o2;
      do
        a3 = e.heap[1], e.heap[1] = e.heap[e.heap_len--], Df(e, r, 1), f2 = e.heap[1], e.heap[--e.heap_max] = a3, e.heap[--e.heap_max] = f2, r[l3 * 2] = r[a3 * 2] + r[f2 * 2], e.depth[l3] = (e.depth[a3] >= e.depth[f2] ? e.depth[a3] : e.depth[f2]) + 1, r[a3 * 2 + 1] = r[f2 * 2 + 1] = l3, e.heap[1] = l3++, Df(e, r, 1);
      while (e.heap_len >= 2);
      e.heap[--e.heap_max] = e.heap[1], t1(e, t), kp(r, u3, e.bl_count);
    }
    function gp(e, t, r) {
      var n, i = -1, o2, a3 = t[0 * 2 + 1], f2 = 0, u3 = 7, l3 = 4;
      for (a3 === 0 && (u3 = 138, l3 = 3), t[(r + 1) * 2 + 1] = 65535, n = 0;n <= r; n++)
        o2 = a3, a3 = t[(n + 1) * 2 + 1], !(++f2 < u3 && o2 === a3) && (f2 < l3 ? e.bl_tree[o2 * 2] += f2 : o2 !== 0 ? (o2 !== i && e.bl_tree[o2 * 2]++, e.bl_tree[mp * 2]++) : f2 <= 10 ? e.bl_tree[Sp * 2]++ : e.bl_tree[Ap * 2]++, f2 = 0, i = o2, a3 === 0 ? (u3 = 138, l3 = 3) : o2 === a3 ? (u3 = 6, l3 = 3) : (u3 = 7, l3 = 4));
    }
    function bp(e, t, r) {
      var n, i = -1, o2, a3 = t[0 * 2 + 1], f2 = 0, u3 = 7, l3 = 4;
      for (a3 === 0 && (u3 = 138, l3 = 3), n = 0;n <= r; n++)
        if (o2 = a3, a3 = t[(n + 1) * 2 + 1], !(++f2 < u3 && o2 === a3)) {
          if (f2 < l3)
            do
              We(e, o2, e.bl_tree);
            while (--f2 !== 0);
          else
            o2 !== 0 ? (o2 !== i && (We(e, o2, e.bl_tree), f2--), We(e, mp, e.bl_tree), ue(e, f2 - 3, 2)) : f2 <= 10 ? (We(e, Sp, e.bl_tree), ue(e, f2 - 3, 3)) : (We(e, Ap, e.bl_tree), ue(e, f2 - 11, 7));
          f2 = 0, i = o2, a3 === 0 ? (u3 = 138, l3 = 3) : o2 === a3 ? (u3 = 6, l3 = 3) : (u3 = 7, l3 = 4);
        }
    }
    function i1(e) {
      var t;
      for (gp(e, e.dyn_ltree, e.l_desc.max_code), gp(e, e.dyn_dtree, e.d_desc.max_code), Pf(e, e.bl_desc), t = jf - 1;t >= 3 && e.bl_tree[xp[t] * 2 + 1] === 0; t--)
        ;
      return e.opt_len += 3 * (t + 1) + 5 + 5 + 4, t;
    }
    function o1(e, t, r, n) {
      var i;
      for (ue(e, t - 257, 5), ue(e, r - 1, 5), ue(e, n - 4, 4), i = 0;i < n; i++)
        ue(e, e.bl_tree[xp[i] * 2 + 1], 3);
      bp(e, e.dyn_ltree, t - 1), bp(e, e.dyn_dtree, r - 1);
    }
    function a1(e) {
      var t = 4093624447, r;
      for (r = 0;r <= 31; r++, t >>>= 1)
        if (t & 1 && e.dyn_ltree[r * 2] !== 0)
          return hp;
      if (e.dyn_ltree[9 * 2] !== 0 || e.dyn_ltree[10 * 2] !== 0 || e.dyn_ltree[13 * 2] !== 0)
        return pp;
      for (r = 32;r < vn; r++)
        if (e.dyn_ltree[r * 2] !== 0)
          return pp;
      return hp;
    }
    var wp = false;
    function f1(e) {
      wp || (r1(), wp = true), e.l_desc = new Lf(e.dyn_ltree, Rp), e.d_desc = new Lf(e.dyn_dtree, Ip), e.bl_desc = new Lf(e.bl_tree, Tp), e.bi_buf = 0, e.bi_valid = 0, Fp(e);
    }
    function Dp(e, t, r, n) {
      ue(e, (HS << 1) + (n ? 1 : 0), 3), n1(e, t, r, true);
    }
    function l1(e) {
      ue(e, Ep << 1, 3), We(e, Uf, tt2), e1(e);
    }
    function u1(e, t, r, n) {
      var i, o2, a3 = 0;
      e.level > 0 ? (e.strm.data_type === GS && (e.strm.data_type = a1(e)), Pf(e, e.l_desc), Pf(e, e.d_desc), a3 = i1(e), i = e.opt_len + 3 + 7 >>> 3, o2 = e.static_len + 3 + 7 >>> 3, o2 <= i && (i = o2)) : i = o2 = r + 5, r + 4 <= i && t !== -1 ? Dp(e, t, r, n) : e.strategy === $S || o2 === i ? (ue(e, (Ep << 1) + (n ? 1 : 0), 3), _p(e, tt2, _n)) : (ue(e, (VS << 1) + (n ? 1 : 0), 3), o1(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, a3 + 1), _p(e, e.dyn_ltree, e.dyn_dtree)), Fp(e), n && Lp(e);
    }
    function s1(e, t, r) {
      return e.pending_buf[e.d_buf + e.last_lit * 2] = t >>> 8 & 255, e.pending_buf[e.d_buf + e.last_lit * 2 + 1] = t & 255, e.pending_buf[e.l_buf + e.last_lit] = r & 255, e.last_lit++, t === 0 ? e.dyn_ltree[r * 2]++ : (e.matches++, t--, e.dyn_ltree[(wn[r] + vn + 1) * 2]++, e.dyn_dtree[Op(t) * 2]++), e.last_lit === e.lit_bufsize - 1;
    }
    Lr._tr_init = f1;
    Lr._tr_stored_block = Dp;
    Lr._tr_flush_block = u1;
    Lr._tr_tally = s1;
    Lr._tr_align = l1;
  });
  Cf = g4((Gx, Pp) => {
    function c1(e, t, r, n) {
      for (var i = e & 65535 | 0, o2 = e >>> 16 & 65535 | 0, a3 = 0;r !== 0; ) {
        a3 = r > 2000 ? 2000 : r, r -= a3;
        do
          i = i + t[n++] | 0, o2 = o2 + i | 0;
        while (--a3);
        i %= 65521, o2 %= 65521;
      }
      return i | o2 << 16 | 0;
    }
    Pp.exports = c1;
  });
  zf = g4((Hx, Mp) => {
    function d1() {
      for (var e, t = [], r = 0;r < 256; r++) {
        e = r;
        for (var n = 0;n < 8; n++)
          e = e & 1 ? 3988292384 ^ e >>> 1 : e >>> 1;
        t[r] = e;
      }
      return t;
    }
    var h1 = d1();
    function p1(e, t, r, n) {
      var i = h1, o2 = n + r;
      e ^= -1;
      for (var a3 = n;a3 < o2; a3++)
        e = e >>> 8 ^ i[(e ^ t[a3]) & 255];
      return e ^ -1;
    }
    Mp.exports = p1;
  });
  Up = g4((Vx, jp) => {
    jp.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
  });
  Vp = g4((Ge) => {
    var ae = yn(), ve = Bp(), Wp = Cf(), pt3 = zf(), y1 = Up(), Zt = 0, _1 = 1, g1 = 3, wt = 4, qp = 5, $e = 0, Cp = 1, me = -2, b1 = -3, Wf = -5, w1 = -1, E1 = 1, ro = 2, v1 = 3, m1 = 4, S1 = 0, A1 = 2, ao = 8, x1 = 9, R1 = 15, I1 = 8, T1 = 29, O1 = 256, $f = O1 + 1 + T1, N1 = 30, k1 = 19, F1 = 2 * $f + 1, L1 = 15, M3 = 3, gt2 = 258, Fe = gt2 + M3 + 1, D1 = 32, fo = 42, Gf = 69, no = 73, io = 91, oo = 103, Ct = 113, Sn = 666, K3 = 1, An = 2, zt = 3, Pr = 4, B1 = 3;
    function bt2(e, t) {
      return e.msg = y1[t], t;
    }
    function zp(e) {
      return (e << 1) - (e > 4 ? 9 : 0);
    }
    function _t(e) {
      for (var t = e.length;--t >= 0; )
        e[t] = 0;
    }
    function yt2(e) {
      var t = e.state, r = t.pending;
      r > e.avail_out && (r = e.avail_out), r !== 0 && (ae.arraySet(e.output, t.pending_buf, t.pending_out, r, e.next_out), e.next_out += r, t.pending_out += r, e.total_out += r, e.avail_out -= r, t.pending -= r, t.pending === 0 && (t.pending_out = 0));
    }
    function te(e, t) {
      ve._tr_flush_block(e, e.block_start >= 0 ? e.block_start : -1, e.strstart - e.block_start, t), e.block_start = e.strstart, yt2(e.strm);
    }
    function j4(e, t) {
      e.pending_buf[e.pending++] = t;
    }
    function mn(e, t) {
      e.pending_buf[e.pending++] = t >>> 8 & 255, e.pending_buf[e.pending++] = t & 255;
    }
    function P1(e, t, r, n) {
      var i = e.avail_in;
      return i > n && (i = n), i === 0 ? 0 : (e.avail_in -= i, ae.arraySet(t, e.input, e.next_in, i, r), e.state.wrap === 1 ? e.adler = Wp(e.adler, t, i, r) : e.state.wrap === 2 && (e.adler = pt3(e.adler, t, i, r)), e.next_in += i, e.total_in += i, i);
    }
    function Zp(e, t) {
      var { max_chain_length: r, strstart: n } = e, i, o2, a3 = e.prev_length, f2 = e.nice_match, u3 = e.strstart > e.w_size - Fe ? e.strstart - (e.w_size - Fe) : 0, l3 = e.window, s2 = e.w_mask, c2 = e.prev, h4 = e.strstart + gt2, d3 = l3[n + a3 - 1], y4 = l3[n + a3];
      e.prev_length >= e.good_match && (r >>= 2), f2 > e.lookahead && (f2 = e.lookahead);
      do
        if (i = t, !(l3[i + a3] !== y4 || l3[i + a3 - 1] !== d3 || l3[i] !== l3[n] || l3[++i] !== l3[n + 1])) {
          n += 2, i++;
          do
            ;
          while (l3[++n] === l3[++i] && l3[++n] === l3[++i] && l3[++n] === l3[++i] && l3[++n] === l3[++i] && l3[++n] === l3[++i] && l3[++n] === l3[++i] && l3[++n] === l3[++i] && l3[++n] === l3[++i] && n < h4);
          if (o2 = gt2 - (h4 - n), n = h4 - gt2, o2 > a3) {
            if (e.match_start = t, a3 = o2, o2 >= f2)
              break;
            d3 = l3[n + a3 - 1], y4 = l3[n + a3];
          }
        }
      while ((t = c2[t & s2]) > u3 && --r !== 0);
      return a3 <= e.lookahead ? a3 : e.lookahead;
    }
    function Wt(e) {
      var t = e.w_size, r, n, i, o2, a3;
      do {
        if (o2 = e.window_size - e.lookahead - e.strstart, e.strstart >= t + (t - Fe)) {
          ae.arraySet(e.window, e.window, t, t, 0), e.match_start -= t, e.strstart -= t, e.block_start -= t, n = e.hash_size, r = n;
          do
            i = e.head[--r], e.head[r] = i >= t ? i - t : 0;
          while (--n);
          n = t, r = n;
          do
            i = e.prev[--r], e.prev[r] = i >= t ? i - t : 0;
          while (--n);
          o2 += t;
        }
        if (e.strm.avail_in === 0)
          break;
        if (n = P1(e.strm, e.window, e.strstart + e.lookahead, o2), e.lookahead += n, e.lookahead + e.insert >= M3)
          for (a3 = e.strstart - e.insert, e.ins_h = e.window[a3], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[a3 + 1]) & e.hash_mask;e.insert && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[a3 + M3 - 1]) & e.hash_mask, e.prev[a3 & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = a3, a3++, e.insert--, !(e.lookahead + e.insert < M3)); )
            ;
      } while (e.lookahead < Fe && e.strm.avail_in !== 0);
    }
    function M1(e, t) {
      var r = 65535;
      for (r > e.pending_buf_size - 5 && (r = e.pending_buf_size - 5);; ) {
        if (e.lookahead <= 1) {
          if (Wt(e), e.lookahead === 0 && t === Zt)
            return K3;
          if (e.lookahead === 0)
            break;
        }
        e.strstart += e.lookahead, e.lookahead = 0;
        var n = e.block_start + r;
        if ((e.strstart === 0 || e.strstart >= n) && (e.lookahead = e.strstart - n, e.strstart = n, te(e, false), e.strm.avail_out === 0) || e.strstart - e.block_start >= e.w_size - Fe && (te(e, false), e.strm.avail_out === 0))
          return K3;
      }
      return e.insert = 0, t === wt ? (te(e, true), e.strm.avail_out === 0 ? zt : Pr) : (e.strstart > e.block_start && (te(e, false), e.strm.avail_out === 0), K3);
    }
    function Zf(e, t) {
      for (var r, n;; ) {
        if (e.lookahead < Fe) {
          if (Wt(e), e.lookahead < Fe && t === Zt)
            return K3;
          if (e.lookahead === 0)
            break;
        }
        if (r = 0, e.lookahead >= M3 && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M3 - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), r !== 0 && e.strstart - r <= e.w_size - Fe && (e.match_length = Zp(e, r)), e.match_length >= M3)
          if (n = ve._tr_tally(e, e.strstart - e.match_start, e.match_length - M3), e.lookahead -= e.match_length, e.match_length <= e.max_lazy_match && e.lookahead >= M3) {
            e.match_length--;
            do
              e.strstart++, e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M3 - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart;
            while (--e.match_length !== 0);
            e.strstart++;
          } else
            e.strstart += e.match_length, e.match_length = 0, e.ins_h = e.window[e.strstart], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 1]) & e.hash_mask;
        else
          n = ve._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++;
        if (n && (te(e, false), e.strm.avail_out === 0))
          return K3;
      }
      return e.insert = e.strstart < M3 - 1 ? e.strstart : M3 - 1, t === wt ? (te(e, true), e.strm.avail_out === 0 ? zt : Pr) : e.last_lit && (te(e, false), e.strm.avail_out === 0) ? K3 : An;
    }
    function Dr(e, t) {
      for (var r, n, i;; ) {
        if (e.lookahead < Fe) {
          if (Wt(e), e.lookahead < Fe && t === Zt)
            return K3;
          if (e.lookahead === 0)
            break;
        }
        if (r = 0, e.lookahead >= M3 && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M3 - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), e.prev_length = e.match_length, e.prev_match = e.match_start, e.match_length = M3 - 1, r !== 0 && e.prev_length < e.max_lazy_match && e.strstart - r <= e.w_size - Fe && (e.match_length = Zp(e, r), e.match_length <= 5 && (e.strategy === E1 || e.match_length === M3 && e.strstart - e.match_start > 4096) && (e.match_length = M3 - 1)), e.prev_length >= M3 && e.match_length <= e.prev_length) {
          i = e.strstart + e.lookahead - M3, n = ve._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - M3), e.lookahead -= e.prev_length - 1, e.prev_length -= 2;
          do
            ++e.strstart <= i && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M3 - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart);
          while (--e.prev_length !== 0);
          if (e.match_available = 0, e.match_length = M3 - 1, e.strstart++, n && (te(e, false), e.strm.avail_out === 0))
            return K3;
        } else if (e.match_available) {
          if (n = ve._tr_tally(e, 0, e.window[e.strstart - 1]), n && te(e, false), e.strstart++, e.lookahead--, e.strm.avail_out === 0)
            return K3;
        } else
          e.match_available = 1, e.strstart++, e.lookahead--;
      }
      return e.match_available && (n = ve._tr_tally(e, 0, e.window[e.strstart - 1]), e.match_available = 0), e.insert = e.strstart < M3 - 1 ? e.strstart : M3 - 1, t === wt ? (te(e, true), e.strm.avail_out === 0 ? zt : Pr) : e.last_lit && (te(e, false), e.strm.avail_out === 0) ? K3 : An;
    }
    function j1(e, t) {
      for (var r, n, i, o2, a3 = e.window;; ) {
        if (e.lookahead <= gt2) {
          if (Wt(e), e.lookahead <= gt2 && t === Zt)
            return K3;
          if (e.lookahead === 0)
            break;
        }
        if (e.match_length = 0, e.lookahead >= M3 && e.strstart > 0 && (i = e.strstart - 1, n = a3[i], n === a3[++i] && n === a3[++i] && n === a3[++i])) {
          o2 = e.strstart + gt2;
          do
            ;
          while (n === a3[++i] && n === a3[++i] && n === a3[++i] && n === a3[++i] && n === a3[++i] && n === a3[++i] && n === a3[++i] && n === a3[++i] && i < o2);
          e.match_length = gt2 - (o2 - i), e.match_length > e.lookahead && (e.match_length = e.lookahead);
        }
        if (e.match_length >= M3 ? (r = ve._tr_tally(e, 1, e.match_length - M3), e.lookahead -= e.match_length, e.strstart += e.match_length, e.match_length = 0) : (r = ve._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++), r && (te(e, false), e.strm.avail_out === 0))
          return K3;
      }
      return e.insert = 0, t === wt ? (te(e, true), e.strm.avail_out === 0 ? zt : Pr) : e.last_lit && (te(e, false), e.strm.avail_out === 0) ? K3 : An;
    }
    function U1(e, t) {
      for (var r;; ) {
        if (e.lookahead === 0 && (Wt(e), e.lookahead === 0)) {
          if (t === Zt)
            return K3;
          break;
        }
        if (e.match_length = 0, r = ve._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++, r && (te(e, false), e.strm.avail_out === 0))
          return K3;
      }
      return e.insert = 0, t === wt ? (te(e, true), e.strm.avail_out === 0 ? zt : Pr) : e.last_lit && (te(e, false), e.strm.avail_out === 0) ? K3 : An;
    }
    function Ze(e, t, r, n, i) {
      this.good_length = e, this.max_lazy = t, this.nice_length = r, this.max_chain = n, this.func = i;
    }
    var Br3;
    Br3 = [new Ze(0, 0, 0, 0, M1), new Ze(4, 4, 8, 4, Zf), new Ze(4, 5, 16, 8, Zf), new Ze(4, 6, 32, 32, Zf), new Ze(4, 4, 16, 16, Dr), new Ze(8, 16, 32, 32, Dr), new Ze(8, 16, 128, 128, Dr), new Ze(8, 32, 128, 256, Dr), new Ze(32, 128, 258, 1024, Dr), new Ze(32, 258, 258, 4096, Dr)];
    function q1(e) {
      e.window_size = 2 * e.w_size, _t(e.head), e.max_lazy_match = Br3[e.level].max_lazy, e.good_match = Br3[e.level].good_length, e.nice_match = Br3[e.level].nice_length, e.max_chain_length = Br3[e.level].max_chain, e.strstart = 0, e.block_start = 0, e.lookahead = 0, e.insert = 0, e.match_length = e.prev_length = M3 - 1, e.match_available = 0, e.ins_h = 0;
    }
    function C1() {
      this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = ao, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new ae.Buf16(F1 * 2), this.dyn_dtree = new ae.Buf16((2 * N1 + 1) * 2), this.bl_tree = new ae.Buf16((2 * k1 + 1) * 2), _t(this.dyn_ltree), _t(this.dyn_dtree), _t(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new ae.Buf16(L1 + 1), this.heap = new ae.Buf16(2 * $f + 1), _t(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new ae.Buf16(2 * $f + 1), _t(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
    }
    function $p(e) {
      var t;
      return !e || !e.state ? bt2(e, me) : (e.total_in = e.total_out = 0, e.data_type = A1, t = e.state, t.pending = 0, t.pending_out = 0, t.wrap < 0 && (t.wrap = -t.wrap), t.status = t.wrap ? fo : Ct, e.adler = t.wrap === 2 ? 0 : 1, t.last_flush = Zt, ve._tr_init(t), $e);
    }
    function Gp(e) {
      var t = $p(e);
      return t === $e && q1(e.state), t;
    }
    function z1(e, t) {
      return !e || !e.state || e.state.wrap !== 2 ? me : (e.state.gzhead = t, $e);
    }
    function Hp(e, t, r, n, i, o2) {
      if (!e)
        return me;
      var a3 = 1;
      if (t === w1 && (t = 6), n < 0 ? (a3 = 0, n = -n) : n > 15 && (a3 = 2, n -= 16), i < 1 || i > x1 || r !== ao || n < 8 || n > 15 || t < 0 || t > 9 || o2 < 0 || o2 > m1)
        return bt2(e, me);
      n === 8 && (n = 9);
      var f2 = new C1;
      return e.state = f2, f2.strm = e, f2.wrap = a3, f2.gzhead = null, f2.w_bits = n, f2.w_size = 1 << f2.w_bits, f2.w_mask = f2.w_size - 1, f2.hash_bits = i + 7, f2.hash_size = 1 << f2.hash_bits, f2.hash_mask = f2.hash_size - 1, f2.hash_shift = ~~((f2.hash_bits + M3 - 1) / M3), f2.window = new ae.Buf8(f2.w_size * 2), f2.head = new ae.Buf16(f2.hash_size), f2.prev = new ae.Buf16(f2.w_size), f2.lit_bufsize = 1 << i + 6, f2.pending_buf_size = f2.lit_bufsize * 4, f2.pending_buf = new ae.Buf8(f2.pending_buf_size), f2.d_buf = 1 * f2.lit_bufsize, f2.l_buf = (1 + 2) * f2.lit_bufsize, f2.level = t, f2.strategy = o2, f2.method = r, Gp(e);
    }
    function W1(e, t) {
      return Hp(e, t, ao, R1, I1, S1);
    }
    function Z1(e, t) {
      var r, n, i, o2;
      if (!e || !e.state || t > qp || t < 0)
        return e ? bt2(e, me) : me;
      if (n = e.state, !e.output || !e.input && e.avail_in !== 0 || n.status === Sn && t !== wt)
        return bt2(e, e.avail_out === 0 ? Wf : me);
      if (n.strm = e, r = n.last_flush, n.last_flush = t, n.status === fo)
        if (n.wrap === 2)
          e.adler = 0, j4(n, 31), j4(n, 139), j4(n, 8), n.gzhead ? (j4(n, (n.gzhead.text ? 1 : 0) + (n.gzhead.hcrc ? 2 : 0) + (n.gzhead.extra ? 4 : 0) + (n.gzhead.name ? 8 : 0) + (n.gzhead.comment ? 16 : 0)), j4(n, n.gzhead.time & 255), j4(n, n.gzhead.time >> 8 & 255), j4(n, n.gzhead.time >> 16 & 255), j4(n, n.gzhead.time >> 24 & 255), j4(n, n.level === 9 ? 2 : n.strategy >= ro || n.level < 2 ? 4 : 0), j4(n, n.gzhead.os & 255), n.gzhead.extra && n.gzhead.extra.length && (j4(n, n.gzhead.extra.length & 255), j4(n, n.gzhead.extra.length >> 8 & 255)), n.gzhead.hcrc && (e.adler = pt3(e.adler, n.pending_buf, n.pending, 0)), n.gzindex = 0, n.status = Gf) : (j4(n, 0), j4(n, 0), j4(n, 0), j4(n, 0), j4(n, 0), j4(n, n.level === 9 ? 2 : n.strategy >= ro || n.level < 2 ? 4 : 0), j4(n, B1), n.status = Ct);
        else {
          var a3 = ao + (n.w_bits - 8 << 4) << 8, f2 = -1;
          n.strategy >= ro || n.level < 2 ? f2 = 0 : n.level < 6 ? f2 = 1 : n.level === 6 ? f2 = 2 : f2 = 3, a3 |= f2 << 6, n.strstart !== 0 && (a3 |= D1), a3 += 31 - a3 % 31, n.status = Ct, mn(n, a3), n.strstart !== 0 && (mn(n, e.adler >>> 16), mn(n, e.adler & 65535)), e.adler = 1;
        }
      if (n.status === Gf)
        if (n.gzhead.extra) {
          for (i = n.pending;n.gzindex < (n.gzhead.extra.length & 65535) && !(n.pending === n.pending_buf_size && (n.gzhead.hcrc && n.pending > i && (e.adler = pt3(e.adler, n.pending_buf, n.pending - i, i)), yt2(e), i = n.pending, n.pending === n.pending_buf_size)); )
            j4(n, n.gzhead.extra[n.gzindex] & 255), n.gzindex++;
          n.gzhead.hcrc && n.pending > i && (e.adler = pt3(e.adler, n.pending_buf, n.pending - i, i)), n.gzindex === n.gzhead.extra.length && (n.gzindex = 0, n.status = no);
        } else
          n.status = no;
      if (n.status === no)
        if (n.gzhead.name) {
          i = n.pending;
          do {
            if (n.pending === n.pending_buf_size && (n.gzhead.hcrc && n.pending > i && (e.adler = pt3(e.adler, n.pending_buf, n.pending - i, i)), yt2(e), i = n.pending, n.pending === n.pending_buf_size)) {
              o2 = 1;
              break;
            }
            n.gzindex < n.gzhead.name.length ? o2 = n.gzhead.name.charCodeAt(n.gzindex++) & 255 : o2 = 0, j4(n, o2);
          } while (o2 !== 0);
          n.gzhead.hcrc && n.pending > i && (e.adler = pt3(e.adler, n.pending_buf, n.pending - i, i)), o2 === 0 && (n.gzindex = 0, n.status = io);
        } else
          n.status = io;
      if (n.status === io)
        if (n.gzhead.comment) {
          i = n.pending;
          do {
            if (n.pending === n.pending_buf_size && (n.gzhead.hcrc && n.pending > i && (e.adler = pt3(e.adler, n.pending_buf, n.pending - i, i)), yt2(e), i = n.pending, n.pending === n.pending_buf_size)) {
              o2 = 1;
              break;
            }
            n.gzindex < n.gzhead.comment.length ? o2 = n.gzhead.comment.charCodeAt(n.gzindex++) & 255 : o2 = 0, j4(n, o2);
          } while (o2 !== 0);
          n.gzhead.hcrc && n.pending > i && (e.adler = pt3(e.adler, n.pending_buf, n.pending - i, i)), o2 === 0 && (n.status = oo);
        } else
          n.status = oo;
      if (n.status === oo && (n.gzhead.hcrc ? (n.pending + 2 > n.pending_buf_size && yt2(e), n.pending + 2 <= n.pending_buf_size && (j4(n, e.adler & 255), j4(n, e.adler >> 8 & 255), e.adler = 0, n.status = Ct)) : n.status = Ct), n.pending !== 0) {
        if (yt2(e), e.avail_out === 0)
          return n.last_flush = -1, $e;
      } else if (e.avail_in === 0 && zp(t) <= zp(r) && t !== wt)
        return bt2(e, Wf);
      if (n.status === Sn && e.avail_in !== 0)
        return bt2(e, Wf);
      if (e.avail_in !== 0 || n.lookahead !== 0 || t !== Zt && n.status !== Sn) {
        var u3 = n.strategy === ro ? U1(n, t) : n.strategy === v1 ? j1(n, t) : Br3[n.level].func(n, t);
        if ((u3 === zt || u3 === Pr) && (n.status = Sn), u3 === K3 || u3 === zt)
          return e.avail_out === 0 && (n.last_flush = -1), $e;
        if (u3 === An && (t === _1 ? ve._tr_align(n) : t !== qp && (ve._tr_stored_block(n, 0, 0, false), t === g1 && (_t(n.head), n.lookahead === 0 && (n.strstart = 0, n.block_start = 0, n.insert = 0))), yt2(e), e.avail_out === 0))
          return n.last_flush = -1, $e;
      }
      return t !== wt ? $e : n.wrap <= 0 ? Cp : (n.wrap === 2 ? (j4(n, e.adler & 255), j4(n, e.adler >> 8 & 255), j4(n, e.adler >> 16 & 255), j4(n, e.adler >> 24 & 255), j4(n, e.total_in & 255), j4(n, e.total_in >> 8 & 255), j4(n, e.total_in >> 16 & 255), j4(n, e.total_in >> 24 & 255)) : (mn(n, e.adler >>> 16), mn(n, e.adler & 65535)), yt2(e), n.wrap > 0 && (n.wrap = -n.wrap), n.pending !== 0 ? $e : Cp);
    }
    function $1(e) {
      var t;
      return !e || !e.state ? me : (t = e.state.status, t !== fo && t !== Gf && t !== no && t !== io && t !== oo && t !== Ct && t !== Sn ? bt2(e, me) : (e.state = null, t === Ct ? bt2(e, b1) : $e));
    }
    function G1(e, t) {
      var r = t.length, n, i, o2, a3, f2, u3, l3, s2;
      if (!e || !e.state || (n = e.state, a3 = n.wrap, a3 === 2 || a3 === 1 && n.status !== fo || n.lookahead))
        return me;
      for (a3 === 1 && (e.adler = Wp(e.adler, t, r, 0)), n.wrap = 0, r >= n.w_size && (a3 === 0 && (_t(n.head), n.strstart = 0, n.block_start = 0, n.insert = 0), s2 = new ae.Buf8(n.w_size), ae.arraySet(s2, t, r - n.w_size, n.w_size, 0), t = s2, r = n.w_size), f2 = e.avail_in, u3 = e.next_in, l3 = e.input, e.avail_in = r, e.next_in = 0, e.input = t, Wt(n);n.lookahead >= M3; ) {
        i = n.strstart, o2 = n.lookahead - (M3 - 1);
        do
          n.ins_h = (n.ins_h << n.hash_shift ^ n.window[i + M3 - 1]) & n.hash_mask, n.prev[i & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = i, i++;
        while (--o2);
        n.strstart = i, n.lookahead = M3 - 1, Wt(n);
      }
      return n.strstart += n.lookahead, n.block_start = n.strstart, n.insert = n.lookahead, n.lookahead = 0, n.match_length = n.prev_length = M3 - 1, n.match_available = 0, e.next_in = u3, e.input = l3, e.avail_in = f2, n.wrap = a3, $e;
    }
    Ge.deflateInit = W1;
    Ge.deflateInit2 = Hp;
    Ge.deflateReset = Gp;
    Ge.deflateResetKeep = $p;
    Ge.deflateSetHeader = z1;
    Ge.deflate = Z1;
    Ge.deflateEnd = $1;
    Ge.deflateSetDictionary = G1;
    Ge.deflateInfo = "pako deflate (from Nodeca project)";
  });
  Kp = g4((Kx, Yp) => {
    var lo = 30, H1 = 12;
    Yp.exports = function(t, r) {
      var n, i, o2, a3, f2, u3, l3, s2, c2, h4, d3, y4, b4, R3, _4, E5, m3, A3, v3, T2, I3, S2, k3, z, O4;
      n = t.state, i = t.next_in, z = t.input, o2 = i + (t.avail_in - 5), a3 = t.next_out, O4 = t.output, f2 = a3 - (r - t.avail_out), u3 = a3 + (t.avail_out - 257), l3 = n.dmax, s2 = n.wsize, c2 = n.whave, h4 = n.wnext, d3 = n.window, y4 = n.hold, b4 = n.bits, R3 = n.lencode, _4 = n.distcode, E5 = (1 << n.lenbits) - 1, m3 = (1 << n.distbits) - 1;
      e:
        do {
          b4 < 15 && (y4 += z[i++] << b4, b4 += 8, y4 += z[i++] << b4, b4 += 8), A3 = R3[y4 & E5];
          t:
            for (;; ) {
              if (v3 = A3 >>> 24, y4 >>>= v3, b4 -= v3, v3 = A3 >>> 16 & 255, v3 === 0)
                O4[a3++] = A3 & 65535;
              else if (v3 & 16) {
                T2 = A3 & 65535, v3 &= 15, v3 && (b4 < v3 && (y4 += z[i++] << b4, b4 += 8), T2 += y4 & (1 << v3) - 1, y4 >>>= v3, b4 -= v3), b4 < 15 && (y4 += z[i++] << b4, b4 += 8, y4 += z[i++] << b4, b4 += 8), A3 = _4[y4 & m3];
                r:
                  for (;; ) {
                    if (v3 = A3 >>> 24, y4 >>>= v3, b4 -= v3, v3 = A3 >>> 16 & 255, v3 & 16) {
                      if (I3 = A3 & 65535, v3 &= 15, b4 < v3 && (y4 += z[i++] << b4, b4 += 8, b4 < v3 && (y4 += z[i++] << b4, b4 += 8)), I3 += y4 & (1 << v3) - 1, I3 > l3) {
                        t.msg = "invalid distance too far back", n.mode = lo;
                        break e;
                      }
                      if (y4 >>>= v3, b4 -= v3, v3 = a3 - f2, I3 > v3) {
                        if (v3 = I3 - v3, v3 > c2 && n.sane) {
                          t.msg = "invalid distance too far back", n.mode = lo;
                          break e;
                        }
                        if (S2 = 0, k3 = d3, h4 === 0) {
                          if (S2 += s2 - v3, v3 < T2) {
                            T2 -= v3;
                            do
                              O4[a3++] = d3[S2++];
                            while (--v3);
                            S2 = a3 - I3, k3 = O4;
                          }
                        } else if (h4 < v3) {
                          if (S2 += s2 + h4 - v3, v3 -= h4, v3 < T2) {
                            T2 -= v3;
                            do
                              O4[a3++] = d3[S2++];
                            while (--v3);
                            if (S2 = 0, h4 < T2) {
                              v3 = h4, T2 -= v3;
                              do
                                O4[a3++] = d3[S2++];
                              while (--v3);
                              S2 = a3 - I3, k3 = O4;
                            }
                          }
                        } else if (S2 += h4 - v3, v3 < T2) {
                          T2 -= v3;
                          do
                            O4[a3++] = d3[S2++];
                          while (--v3);
                          S2 = a3 - I3, k3 = O4;
                        }
                        for (;T2 > 2; )
                          O4[a3++] = k3[S2++], O4[a3++] = k3[S2++], O4[a3++] = k3[S2++], T2 -= 3;
                        T2 && (O4[a3++] = k3[S2++], T2 > 1 && (O4[a3++] = k3[S2++]));
                      } else {
                        S2 = a3 - I3;
                        do
                          O4[a3++] = O4[S2++], O4[a3++] = O4[S2++], O4[a3++] = O4[S2++], T2 -= 3;
                        while (T2 > 2);
                        T2 && (O4[a3++] = O4[S2++], T2 > 1 && (O4[a3++] = O4[S2++]));
                      }
                    } else if ((v3 & 64) === 0) {
                      A3 = _4[(A3 & 65535) + (y4 & (1 << v3) - 1)];
                      continue r;
                    } else {
                      t.msg = "invalid distance code", n.mode = lo;
                      break e;
                    }
                    break;
                  }
              } else if ((v3 & 64) === 0) {
                A3 = R3[(A3 & 65535) + (y4 & (1 << v3) - 1)];
                continue t;
              } else if (v3 & 32) {
                n.mode = H1;
                break e;
              } else {
                t.msg = "invalid literal/length code", n.mode = lo;
                break e;
              }
              break;
            }
        } while (i < o2 && a3 < u3);
      T2 = b4 >> 3, i -= T2, b4 -= T2 << 3, y4 &= (1 << b4) - 1, t.next_in = i, t.next_out = a3, t.avail_in = i < o2 ? 5 + (o2 - i) : 5 - (i - o2), t.avail_out = a3 < u3 ? 257 + (u3 - a3) : 257 - (a3 - u3), n.hold = y4, n.bits = b4;
    };
  });
  ny = g4((Xx, ry) => {
    var Xp = yn(), Mr = 15, Jp = 852, Qp = 592, ey = 0, Hf = 1, ty = 2, V1 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], Y1 = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], K1 = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], X1 = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
    ry.exports = function(t, r, n, i, o2, a3, f2, u3) {
      var l3 = u3.bits, s2 = 0, c2 = 0, h4 = 0, d3 = 0, y4 = 0, b4 = 0, R3 = 0, _4 = 0, E5 = 0, m3 = 0, A3, v3, T2, I3, S2, k3 = null, z = 0, O4, Ae2 = new Xp.Buf16(Mr + 1), On = new Xp.Buf16(Mr + 1), Nn = null, al = 0, fl, kn, Fn;
      for (s2 = 0;s2 <= Mr; s2++)
        Ae2[s2] = 0;
      for (c2 = 0;c2 < i; c2++)
        Ae2[r[n + c2]]++;
      for (y4 = l3, d3 = Mr;d3 >= 1 && Ae2[d3] === 0; d3--)
        ;
      if (y4 > d3 && (y4 = d3), d3 === 0)
        return o2[a3++] = 1 << 24 | 64 << 16 | 0, o2[a3++] = 1 << 24 | 64 << 16 | 0, u3.bits = 1, 0;
      for (h4 = 1;h4 < d3 && Ae2[h4] === 0; h4++)
        ;
      for (y4 < h4 && (y4 = h4), _4 = 1, s2 = 1;s2 <= Mr; s2++)
        if (_4 <<= 1, _4 -= Ae2[s2], _4 < 0)
          return -1;
      if (_4 > 0 && (t === ey || d3 !== 1))
        return -1;
      for (On[1] = 0, s2 = 1;s2 < Mr; s2++)
        On[s2 + 1] = On[s2] + Ae2[s2];
      for (c2 = 0;c2 < i; c2++)
        r[n + c2] !== 0 && (f2[On[r[n + c2]]++] = c2);
      if (t === ey ? (k3 = Nn = f2, O4 = 19) : t === Hf ? (k3 = V1, z -= 257, Nn = Y1, al -= 257, O4 = 256) : (k3 = K1, Nn = X1, O4 = -1), m3 = 0, c2 = 0, s2 = h4, S2 = a3, b4 = y4, R3 = 0, T2 = -1, E5 = 1 << y4, I3 = E5 - 1, t === Hf && E5 > Jp || t === ty && E5 > Qp)
        return 1;
      for (;; ) {
        fl = s2 - R3, f2[c2] < O4 ? (kn = 0, Fn = f2[c2]) : f2[c2] > O4 ? (kn = Nn[al + f2[c2]], Fn = k3[z + f2[c2]]) : (kn = 32 + 64, Fn = 0), A3 = 1 << s2 - R3, v3 = 1 << b4, h4 = v3;
        do
          v3 -= A3, o2[S2 + (m3 >> R3) + v3] = fl << 24 | kn << 16 | Fn | 0;
        while (v3 !== 0);
        for (A3 = 1 << s2 - 1;m3 & A3; )
          A3 >>= 1;
        if (A3 !== 0 ? (m3 &= A3 - 1, m3 += A3) : m3 = 0, c2++, --Ae2[s2] === 0) {
          if (s2 === d3)
            break;
          s2 = r[n + f2[c2]];
        }
        if (s2 > y4 && (m3 & I3) !== T2) {
          for (R3 === 0 && (R3 = y4), S2 += h4, b4 = s2 - R3, _4 = 1 << b4;b4 + R3 < d3 && (_4 -= Ae2[b4 + R3], !(_4 <= 0)); )
            b4++, _4 <<= 1;
          if (E5 += 1 << b4, t === Hf && E5 > Jp || t === ty && E5 > Qp)
            return 1;
          T2 = m3 & I3, o2[T2] = y4 << 24 | b4 << 16 | S2 - a3 | 0;
        }
      }
      return m3 !== 0 && (o2[S2 + m3] = s2 - R3 << 24 | 64 << 16 | 0), u3.bits = y4, 0;
    };
  });
  jy = g4((Le) => {
    var de = yn(), Qf = Cf(), He = zf(), J1 = Kp(), xn = ny(), Q1 = 0, Oy = 1, Ny = 2, iy = 4, eA = 5, uo = 6, $t = 0, tA = 1, rA = 2, Se2 = -2, ky = -3, el = -4, nA = -5, oy = 8, Fy = 1, ay = 2, fy = 3, ly = 4, uy = 5, sy = 6, cy = 7, dy = 8, hy = 9, py = 10, ho = 11, rt2 = 12, Vf = 13, yy = 14, Yf = 15, _y = 16, gy = 17, by = 18, wy = 19, so2 = 20, co = 21, Ey = 22, vy = 23, my = 24, Sy = 25, Ay = 26, Kf = 27, xy = 28, Ry = 29, C2 = 30, tl = 31, iA = 32, oA = 852, aA = 592, fA = 15, lA = fA;
    function Iy(e) {
      return (e >>> 24 & 255) + (e >>> 8 & 65280) + ((e & 65280) << 8) + ((e & 255) << 24);
    }
    function uA() {
      this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new de.Buf16(320), this.work = new de.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
    }
    function Ly(e) {
      var t;
      return !e || !e.state ? Se2 : (t = e.state, e.total_in = e.total_out = t.total = 0, e.msg = "", t.wrap && (e.adler = t.wrap & 1), t.mode = Fy, t.last = 0, t.havedict = 0, t.dmax = 32768, t.head = null, t.hold = 0, t.bits = 0, t.lencode = t.lendyn = new de.Buf32(oA), t.distcode = t.distdyn = new de.Buf32(aA), t.sane = 1, t.back = -1, $t);
    }
    function Dy(e) {
      var t;
      return !e || !e.state ? Se2 : (t = e.state, t.wsize = 0, t.whave = 0, t.wnext = 0, Ly(e));
    }
    function By(e, t) {
      var r, n;
      return !e || !e.state || (n = e.state, t < 0 ? (r = 0, t = -t) : (r = (t >> 4) + 1, t < 48 && (t &= 15)), t && (t < 8 || t > 15)) ? Se2 : (n.window !== null && n.wbits !== t && (n.window = null), n.wrap = r, n.wbits = t, Dy(e));
    }
    function Py(e, t) {
      var r, n;
      return e ? (n = new uA, e.state = n, n.window = null, r = By(e, t), r !== $t && (e.state = null), r) : Se2;
    }
    function sA(e) {
      return Py(e, lA);
    }
    var Ty = true, Xf, Jf;
    function cA(e) {
      if (Ty) {
        var t;
        for (Xf = new de.Buf32(512), Jf = new de.Buf32(32), t = 0;t < 144; )
          e.lens[t++] = 8;
        for (;t < 256; )
          e.lens[t++] = 9;
        for (;t < 280; )
          e.lens[t++] = 7;
        for (;t < 288; )
          e.lens[t++] = 8;
        for (xn(Oy, e.lens, 0, 288, Xf, 0, e.work, { bits: 9 }), t = 0;t < 32; )
          e.lens[t++] = 5;
        xn(Ny, e.lens, 0, 32, Jf, 0, e.work, { bits: 5 }), Ty = false;
      }
      e.lencode = Xf, e.lenbits = 9, e.distcode = Jf, e.distbits = 5;
    }
    function My(e, t, r, n) {
      var i, o2 = e.state;
      return o2.window === null && (o2.wsize = 1 << o2.wbits, o2.wnext = 0, o2.whave = 0, o2.window = new de.Buf8(o2.wsize)), n >= o2.wsize ? (de.arraySet(o2.window, t, r - o2.wsize, o2.wsize, 0), o2.wnext = 0, o2.whave = o2.wsize) : (i = o2.wsize - o2.wnext, i > n && (i = n), de.arraySet(o2.window, t, r - n, i, o2.wnext), n -= i, n ? (de.arraySet(o2.window, t, r - n, n, 0), o2.wnext = n, o2.whave = o2.wsize) : (o2.wnext += i, o2.wnext === o2.wsize && (o2.wnext = 0), o2.whave < o2.wsize && (o2.whave += i))), 0;
    }
    function dA(e, t) {
      var r, n, i, o2, a3, f2, u3, l3, s2, c2, h4, d3, y4, b4, R3 = 0, _4, E5, m3, A3, v3, T2, I3, S2, k3 = new de.Buf8(4), z, O4, Ae2 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
      if (!e || !e.state || !e.output || !e.input && e.avail_in !== 0)
        return Se2;
      r = e.state, r.mode === rt2 && (r.mode = Vf), a3 = e.next_out, i = e.output, u3 = e.avail_out, o2 = e.next_in, n = e.input, f2 = e.avail_in, l3 = r.hold, s2 = r.bits, c2 = f2, h4 = u3, S2 = $t;
      e:
        for (;; )
          switch (r.mode) {
            case Fy:
              if (r.wrap === 0) {
                r.mode = Vf;
                break;
              }
              for (;s2 < 16; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              if (r.wrap & 2 && l3 === 35615) {
                r.check = 0, k3[0] = l3 & 255, k3[1] = l3 >>> 8 & 255, r.check = He(r.check, k3, 2, 0), l3 = 0, s2 = 0, r.mode = ay;
                break;
              }
              if (r.flags = 0, r.head && (r.head.done = false), !(r.wrap & 1) || (((l3 & 255) << 8) + (l3 >> 8)) % 31) {
                e.msg = "incorrect header check", r.mode = C2;
                break;
              }
              if ((l3 & 15) !== oy) {
                e.msg = "unknown compression method", r.mode = C2;
                break;
              }
              if (l3 >>>= 4, s2 -= 4, I3 = (l3 & 15) + 8, r.wbits === 0)
                r.wbits = I3;
              else if (I3 > r.wbits) {
                e.msg = "invalid window size", r.mode = C2;
                break;
              }
              r.dmax = 1 << I3, e.adler = r.check = 1, r.mode = l3 & 512 ? py : rt2, l3 = 0, s2 = 0;
              break;
            case ay:
              for (;s2 < 16; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              if (r.flags = l3, (r.flags & 255) !== oy) {
                e.msg = "unknown compression method", r.mode = C2;
                break;
              }
              if (r.flags & 57344) {
                e.msg = "unknown header flags set", r.mode = C2;
                break;
              }
              r.head && (r.head.text = l3 >> 8 & 1), r.flags & 512 && (k3[0] = l3 & 255, k3[1] = l3 >>> 8 & 255, r.check = He(r.check, k3, 2, 0)), l3 = 0, s2 = 0, r.mode = fy;
            case fy:
              for (;s2 < 32; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              r.head && (r.head.time = l3), r.flags & 512 && (k3[0] = l3 & 255, k3[1] = l3 >>> 8 & 255, k3[2] = l3 >>> 16 & 255, k3[3] = l3 >>> 24 & 255, r.check = He(r.check, k3, 4, 0)), l3 = 0, s2 = 0, r.mode = ly;
            case ly:
              for (;s2 < 16; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              r.head && (r.head.xflags = l3 & 255, r.head.os = l3 >> 8), r.flags & 512 && (k3[0] = l3 & 255, k3[1] = l3 >>> 8 & 255, r.check = He(r.check, k3, 2, 0)), l3 = 0, s2 = 0, r.mode = uy;
            case uy:
              if (r.flags & 1024) {
                for (;s2 < 16; ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                r.length = l3, r.head && (r.head.extra_len = l3), r.flags & 512 && (k3[0] = l3 & 255, k3[1] = l3 >>> 8 & 255, r.check = He(r.check, k3, 2, 0)), l3 = 0, s2 = 0;
              } else
                r.head && (r.head.extra = null);
              r.mode = sy;
            case sy:
              if (r.flags & 1024 && (d3 = r.length, d3 > f2 && (d3 = f2), d3 && (r.head && (I3 = r.head.extra_len - r.length, r.head.extra || (r.head.extra = new Array(r.head.extra_len)), de.arraySet(r.head.extra, n, o2, d3, I3)), r.flags & 512 && (r.check = He(r.check, n, d3, o2)), f2 -= d3, o2 += d3, r.length -= d3), r.length))
                break e;
              r.length = 0, r.mode = cy;
            case cy:
              if (r.flags & 2048) {
                if (f2 === 0)
                  break e;
                d3 = 0;
                do
                  I3 = n[o2 + d3++], r.head && I3 && r.length < 65536 && (r.head.name += String.fromCharCode(I3));
                while (I3 && d3 < f2);
                if (r.flags & 512 && (r.check = He(r.check, n, d3, o2)), f2 -= d3, o2 += d3, I3)
                  break e;
              } else
                r.head && (r.head.name = null);
              r.length = 0, r.mode = dy;
            case dy:
              if (r.flags & 4096) {
                if (f2 === 0)
                  break e;
                d3 = 0;
                do
                  I3 = n[o2 + d3++], r.head && I3 && r.length < 65536 && (r.head.comment += String.fromCharCode(I3));
                while (I3 && d3 < f2);
                if (r.flags & 512 && (r.check = He(r.check, n, d3, o2)), f2 -= d3, o2 += d3, I3)
                  break e;
              } else
                r.head && (r.head.comment = null);
              r.mode = hy;
            case hy:
              if (r.flags & 512) {
                for (;s2 < 16; ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                if (l3 !== (r.check & 65535)) {
                  e.msg = "header crc mismatch", r.mode = C2;
                  break;
                }
                l3 = 0, s2 = 0;
              }
              r.head && (r.head.hcrc = r.flags >> 9 & 1, r.head.done = true), e.adler = r.check = 0, r.mode = rt2;
              break;
            case py:
              for (;s2 < 32; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              e.adler = r.check = Iy(l3), l3 = 0, s2 = 0, r.mode = ho;
            case ho:
              if (r.havedict === 0)
                return e.next_out = a3, e.avail_out = u3, e.next_in = o2, e.avail_in = f2, r.hold = l3, r.bits = s2, rA;
              e.adler = r.check = 1, r.mode = rt2;
            case rt2:
              if (t === eA || t === uo)
                break e;
            case Vf:
              if (r.last) {
                l3 >>>= s2 & 7, s2 -= s2 & 7, r.mode = Kf;
                break;
              }
              for (;s2 < 3; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              switch (r.last = l3 & 1, l3 >>>= 1, s2 -= 1, l3 & 3) {
                case 0:
                  r.mode = yy;
                  break;
                case 1:
                  if (cA(r), r.mode = so2, t === uo) {
                    l3 >>>= 2, s2 -= 2;
                    break e;
                  }
                  break;
                case 2:
                  r.mode = gy;
                  break;
                case 3:
                  e.msg = "invalid block type", r.mode = C2;
              }
              l3 >>>= 2, s2 -= 2;
              break;
            case yy:
              for (l3 >>>= s2 & 7, s2 -= s2 & 7;s2 < 32; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              if ((l3 & 65535) !== (l3 >>> 16 ^ 65535)) {
                e.msg = "invalid stored block lengths", r.mode = C2;
                break;
              }
              if (r.length = l3 & 65535, l3 = 0, s2 = 0, r.mode = Yf, t === uo)
                break e;
            case Yf:
              r.mode = _y;
            case _y:
              if (d3 = r.length, d3) {
                if (d3 > f2 && (d3 = f2), d3 > u3 && (d3 = u3), d3 === 0)
                  break e;
                de.arraySet(i, n, o2, d3, a3), f2 -= d3, o2 += d3, u3 -= d3, a3 += d3, r.length -= d3;
                break;
              }
              r.mode = rt2;
              break;
            case gy:
              for (;s2 < 14; ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              if (r.nlen = (l3 & 31) + 257, l3 >>>= 5, s2 -= 5, r.ndist = (l3 & 31) + 1, l3 >>>= 5, s2 -= 5, r.ncode = (l3 & 15) + 4, l3 >>>= 4, s2 -= 4, r.nlen > 286 || r.ndist > 30) {
                e.msg = "too many length or distance symbols", r.mode = C2;
                break;
              }
              r.have = 0, r.mode = by;
            case by:
              for (;r.have < r.ncode; ) {
                for (;s2 < 3; ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                r.lens[Ae2[r.have++]] = l3 & 7, l3 >>>= 3, s2 -= 3;
              }
              for (;r.have < 19; )
                r.lens[Ae2[r.have++]] = 0;
              if (r.lencode = r.lendyn, r.lenbits = 7, z = { bits: r.lenbits }, S2 = xn(Q1, r.lens, 0, 19, r.lencode, 0, r.work, z), r.lenbits = z.bits, S2) {
                e.msg = "invalid code lengths set", r.mode = C2;
                break;
              }
              r.have = 0, r.mode = wy;
            case wy:
              for (;r.have < r.nlen + r.ndist; ) {
                for (;R3 = r.lencode[l3 & (1 << r.lenbits) - 1], _4 = R3 >>> 24, E5 = R3 >>> 16 & 255, m3 = R3 & 65535, !(_4 <= s2); ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                if (m3 < 16)
                  l3 >>>= _4, s2 -= _4, r.lens[r.have++] = m3;
                else {
                  if (m3 === 16) {
                    for (O4 = _4 + 2;s2 < O4; ) {
                      if (f2 === 0)
                        break e;
                      f2--, l3 += n[o2++] << s2, s2 += 8;
                    }
                    if (l3 >>>= _4, s2 -= _4, r.have === 0) {
                      e.msg = "invalid bit length repeat", r.mode = C2;
                      break;
                    }
                    I3 = r.lens[r.have - 1], d3 = 3 + (l3 & 3), l3 >>>= 2, s2 -= 2;
                  } else if (m3 === 17) {
                    for (O4 = _4 + 3;s2 < O4; ) {
                      if (f2 === 0)
                        break e;
                      f2--, l3 += n[o2++] << s2, s2 += 8;
                    }
                    l3 >>>= _4, s2 -= _4, I3 = 0, d3 = 3 + (l3 & 7), l3 >>>= 3, s2 -= 3;
                  } else {
                    for (O4 = _4 + 7;s2 < O4; ) {
                      if (f2 === 0)
                        break e;
                      f2--, l3 += n[o2++] << s2, s2 += 8;
                    }
                    l3 >>>= _4, s2 -= _4, I3 = 0, d3 = 11 + (l3 & 127), l3 >>>= 7, s2 -= 7;
                  }
                  if (r.have + d3 > r.nlen + r.ndist) {
                    e.msg = "invalid bit length repeat", r.mode = C2;
                    break;
                  }
                  for (;d3--; )
                    r.lens[r.have++] = I3;
                }
              }
              if (r.mode === C2)
                break;
              if (r.lens[256] === 0) {
                e.msg = "invalid code -- missing end-of-block", r.mode = C2;
                break;
              }
              if (r.lenbits = 9, z = { bits: r.lenbits }, S2 = xn(Oy, r.lens, 0, r.nlen, r.lencode, 0, r.work, z), r.lenbits = z.bits, S2) {
                e.msg = "invalid literal/lengths set", r.mode = C2;
                break;
              }
              if (r.distbits = 6, r.distcode = r.distdyn, z = { bits: r.distbits }, S2 = xn(Ny, r.lens, r.nlen, r.ndist, r.distcode, 0, r.work, z), r.distbits = z.bits, S2) {
                e.msg = "invalid distances set", r.mode = C2;
                break;
              }
              if (r.mode = so2, t === uo)
                break e;
            case so2:
              r.mode = co;
            case co:
              if (f2 >= 6 && u3 >= 258) {
                e.next_out = a3, e.avail_out = u3, e.next_in = o2, e.avail_in = f2, r.hold = l3, r.bits = s2, J1(e, h4), a3 = e.next_out, i = e.output, u3 = e.avail_out, o2 = e.next_in, n = e.input, f2 = e.avail_in, l3 = r.hold, s2 = r.bits, r.mode === rt2 && (r.back = -1);
                break;
              }
              for (r.back = 0;R3 = r.lencode[l3 & (1 << r.lenbits) - 1], _4 = R3 >>> 24, E5 = R3 >>> 16 & 255, m3 = R3 & 65535, !(_4 <= s2); ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              if (E5 && (E5 & 240) === 0) {
                for (A3 = _4, v3 = E5, T2 = m3;R3 = r.lencode[T2 + ((l3 & (1 << A3 + v3) - 1) >> A3)], _4 = R3 >>> 24, E5 = R3 >>> 16 & 255, m3 = R3 & 65535, !(A3 + _4 <= s2); ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                l3 >>>= A3, s2 -= A3, r.back += A3;
              }
              if (l3 >>>= _4, s2 -= _4, r.back += _4, r.length = m3, E5 === 0) {
                r.mode = Ay;
                break;
              }
              if (E5 & 32) {
                r.back = -1, r.mode = rt2;
                break;
              }
              if (E5 & 64) {
                e.msg = "invalid literal/length code", r.mode = C2;
                break;
              }
              r.extra = E5 & 15, r.mode = Ey;
            case Ey:
              if (r.extra) {
                for (O4 = r.extra;s2 < O4; ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                r.length += l3 & (1 << r.extra) - 1, l3 >>>= r.extra, s2 -= r.extra, r.back += r.extra;
              }
              r.was = r.length, r.mode = vy;
            case vy:
              for (;R3 = r.distcode[l3 & (1 << r.distbits) - 1], _4 = R3 >>> 24, E5 = R3 >>> 16 & 255, m3 = R3 & 65535, !(_4 <= s2); ) {
                if (f2 === 0)
                  break e;
                f2--, l3 += n[o2++] << s2, s2 += 8;
              }
              if ((E5 & 240) === 0) {
                for (A3 = _4, v3 = E5, T2 = m3;R3 = r.distcode[T2 + ((l3 & (1 << A3 + v3) - 1) >> A3)], _4 = R3 >>> 24, E5 = R3 >>> 16 & 255, m3 = R3 & 65535, !(A3 + _4 <= s2); ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                l3 >>>= A3, s2 -= A3, r.back += A3;
              }
              if (l3 >>>= _4, s2 -= _4, r.back += _4, E5 & 64) {
                e.msg = "invalid distance code", r.mode = C2;
                break;
              }
              r.offset = m3, r.extra = E5 & 15, r.mode = my;
            case my:
              if (r.extra) {
                for (O4 = r.extra;s2 < O4; ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                r.offset += l3 & (1 << r.extra) - 1, l3 >>>= r.extra, s2 -= r.extra, r.back += r.extra;
              }
              if (r.offset > r.dmax) {
                e.msg = "invalid distance too far back", r.mode = C2;
                break;
              }
              r.mode = Sy;
            case Sy:
              if (u3 === 0)
                break e;
              if (d3 = h4 - u3, r.offset > d3) {
                if (d3 = r.offset - d3, d3 > r.whave && r.sane) {
                  e.msg = "invalid distance too far back", r.mode = C2;
                  break;
                }
                d3 > r.wnext ? (d3 -= r.wnext, y4 = r.wsize - d3) : y4 = r.wnext - d3, d3 > r.length && (d3 = r.length), b4 = r.window;
              } else
                b4 = i, y4 = a3 - r.offset, d3 = r.length;
              d3 > u3 && (d3 = u3), u3 -= d3, r.length -= d3;
              do
                i[a3++] = b4[y4++];
              while (--d3);
              r.length === 0 && (r.mode = co);
              break;
            case Ay:
              if (u3 === 0)
                break e;
              i[a3++] = r.length, u3--, r.mode = co;
              break;
            case Kf:
              if (r.wrap) {
                for (;s2 < 32; ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 |= n[o2++] << s2, s2 += 8;
                }
                if (h4 -= u3, e.total_out += h4, r.total += h4, h4 && (e.adler = r.check = r.flags ? He(r.check, i, h4, a3 - h4) : Qf(r.check, i, h4, a3 - h4)), h4 = u3, (r.flags ? l3 : Iy(l3)) !== r.check) {
                  e.msg = "incorrect data check", r.mode = C2;
                  break;
                }
                l3 = 0, s2 = 0;
              }
              r.mode = xy;
            case xy:
              if (r.wrap && r.flags) {
                for (;s2 < 32; ) {
                  if (f2 === 0)
                    break e;
                  f2--, l3 += n[o2++] << s2, s2 += 8;
                }
                if (l3 !== (r.total & 4294967295)) {
                  e.msg = "incorrect length check", r.mode = C2;
                  break;
                }
                l3 = 0, s2 = 0;
              }
              r.mode = Ry;
            case Ry:
              S2 = tA;
              break e;
            case C2:
              S2 = ky;
              break e;
            case tl:
              return el;
            case iA:
            default:
              return Se2;
          }
      return e.next_out = a3, e.avail_out = u3, e.next_in = o2, e.avail_in = f2, r.hold = l3, r.bits = s2, (r.wsize || h4 !== e.avail_out && r.mode < C2 && (r.mode < Kf || t !== iy)) && My(e, e.output, e.next_out, h4 - e.avail_out) ? (r.mode = tl, el) : (c2 -= e.avail_in, h4 -= e.avail_out, e.total_in += c2, e.total_out += h4, r.total += h4, r.wrap && h4 && (e.adler = r.check = r.flags ? He(r.check, i, h4, e.next_out - h4) : Qf(r.check, i, h4, e.next_out - h4)), e.data_type = r.bits + (r.last ? 64 : 0) + (r.mode === rt2 ? 128 : 0) + (r.mode === so2 || r.mode === Yf ? 256 : 0), (c2 === 0 && h4 === 0 || t === iy) && S2 === $t && (S2 = nA), S2);
    }
    function hA(e) {
      if (!e || !e.state)
        return Se2;
      var t = e.state;
      return t.window && (t.window = null), e.state = null, $t;
    }
    function pA(e, t) {
      var r;
      return !e || !e.state || (r = e.state, (r.wrap & 2) === 0) ? Se2 : (r.head = t, t.done = false, $t);
    }
    function yA(e, t) {
      var r = t.length, n, i, o2;
      return !e || !e.state || (n = e.state, n.wrap !== 0 && n.mode !== ho) ? Se2 : n.mode === ho && (i = 1, i = Qf(i, t, r, 0), i !== n.check) ? ky : (o2 = My(e, t, r, r), o2 ? (n.mode = tl, el) : (n.havedict = 1, $t));
    }
    Le.inflateReset = Dy;
    Le.inflateReset2 = By;
    Le.inflateResetKeep = Ly;
    Le.inflateInit = sA;
    Le.inflateInit2 = Py;
    Le.inflate = dA;
    Le.inflateEnd = hA;
    Le.inflateGetHeader = pA;
    Le.inflateSetDictionary = yA;
    Le.inflateInfo = "pako inflate (from Nodeca project)";
  });
  qy = g4((Qx, Uy) => {
    Uy.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
  });
  zy = g4((w3) => {
    var he = tn(), _A = dp(), Rn = Vp(), Gt = jy(), Cy = qy();
    for (rl in Cy)
      w3[rl] = Cy[rl];
    var rl;
    w3.NONE = 0;
    w3.DEFLATE = 1;
    w3.INFLATE = 2;
    w3.GZIP = 3;
    w3.GUNZIP = 4;
    w3.DEFLATERAW = 5;
    w3.INFLATERAW = 6;
    w3.UNZIP = 7;
    var gA = 31, bA = 139;
    function re2(e) {
      if (typeof e != "number" || e < w3.DEFLATE || e > w3.UNZIP)
        throw new TypeError("Bad argument");
      this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = false, this.level = 0, this.memLevel = 0, this.mode = e, this.strategy = 0, this.windowBits = 0, this.write_in_progress = false, this.pending_close = false, this.gzip_id_bytes_read = 0;
    }
    re2.prototype.close = function() {
      if (this.write_in_progress) {
        this.pending_close = true;
        return;
      }
      this.pending_close = false, he(this.init_done, "close before init"), he(this.mode <= w3.UNZIP), this.mode === w3.DEFLATE || this.mode === w3.GZIP || this.mode === w3.DEFLATERAW ? Rn.deflateEnd(this.strm) : (this.mode === w3.INFLATE || this.mode === w3.GUNZIP || this.mode === w3.INFLATERAW || this.mode === w3.UNZIP) && Gt.inflateEnd(this.strm), this.mode = w3.NONE, this.dictionary = null;
    };
    re2.prototype.write = function(e, t, r, n, i, o2, a3) {
      return this._write(true, e, t, r, n, i, o2, a3);
    };
    re2.prototype.writeSync = function(e, t, r, n, i, o2, a3) {
      return this._write(false, e, t, r, n, i, o2, a3);
    };
    re2.prototype._write = function(e, t, r, n, i, o2, a3, f2) {
      if (he.equal(arguments.length, 8), he(this.init_done, "write before init"), he(this.mode !== w3.NONE, "already finalized"), he.equal(false, this.write_in_progress, "write already in progress"), he.equal(false, this.pending_close, "close is pending"), this.write_in_progress = true, he.equal(false, t === undefined, "must provide flush value"), this.write_in_progress = true, t !== w3.Z_NO_FLUSH && t !== w3.Z_PARTIAL_FLUSH && t !== w3.Z_SYNC_FLUSH && t !== w3.Z_FULL_FLUSH && t !== w3.Z_FINISH && t !== w3.Z_BLOCK)
        throw new Error("Invalid flush value");
      if (r == null && (r = Buffer.alloc(0), i = 0, n = 0), this.strm.avail_in = i, this.strm.input = r, this.strm.next_in = n, this.strm.avail_out = f2, this.strm.output = o2, this.strm.next_out = a3, this.flush = t, !e)
        return this._process(), this._checkError() ? this._afterSync() : undefined;
      var u3 = this;
      return process.nextTick(function() {
        u3._process(), u3._after();
      }), this;
    };
    re2.prototype._afterSync = function() {
      var e = this.strm.avail_out, t = this.strm.avail_in;
      return this.write_in_progress = false, [t, e];
    };
    re2.prototype._process = function() {
      var e = null;
      switch (this.mode) {
        case w3.DEFLATE:
        case w3.GZIP:
        case w3.DEFLATERAW:
          this.err = Rn.deflate(this.strm, this.flush);
          break;
        case w3.UNZIP:
          switch (this.strm.avail_in > 0 && (e = this.strm.next_in), this.gzip_id_bytes_read) {
            case 0:
              if (e === null)
                break;
              if (this.strm.input[e] === gA) {
                if (this.gzip_id_bytes_read = 1, e++, this.strm.avail_in === 1)
                  break;
              } else {
                this.mode = w3.INFLATE;
                break;
              }
            case 1:
              if (e === null)
                break;
              this.strm.input[e] === bA ? (this.gzip_id_bytes_read = 2, this.mode = w3.GUNZIP) : this.mode = w3.INFLATE;
              break;
            default:
              throw new Error("invalid number of gzip magic number bytes read");
          }
        case w3.INFLATE:
        case w3.GUNZIP:
        case w3.INFLATERAW:
          for (this.err = Gt.inflate(this.strm, this.flush), this.err === w3.Z_NEED_DICT && this.dictionary && (this.err = Gt.inflateSetDictionary(this.strm, this.dictionary), this.err === w3.Z_OK ? this.err = Gt.inflate(this.strm, this.flush) : this.err === w3.Z_DATA_ERROR && (this.err = w3.Z_NEED_DICT));this.strm.avail_in > 0 && this.mode === w3.GUNZIP && this.err === w3.Z_STREAM_END && this.strm.next_in[0] !== 0; )
            this.reset(), this.err = Gt.inflate(this.strm, this.flush);
          break;
        default:
          throw new Error("Unknown mode " + this.mode);
      }
    };
    re2.prototype._checkError = function() {
      switch (this.err) {
        case w3.Z_OK:
        case w3.Z_BUF_ERROR:
          if (this.strm.avail_out !== 0 && this.flush === w3.Z_FINISH)
            return this._error("unexpected end of file"), false;
          break;
        case w3.Z_STREAM_END:
          break;
        case w3.Z_NEED_DICT:
          return this.dictionary == null ? this._error("Missing dictionary") : this._error("Bad dictionary"), false;
        default:
          return this._error("Zlib error"), false;
      }
      return true;
    };
    re2.prototype._after = function() {
      if (!!this._checkError()) {
        var e = this.strm.avail_out, t = this.strm.avail_in;
        this.write_in_progress = false, this.callback(t, e), this.pending_close && this.close();
      }
    };
    re2.prototype._error = function(e) {
      this.strm.msg && (e = this.strm.msg), this.onerror(e, this.err), this.write_in_progress = false, this.pending_close && this.close();
    };
    re2.prototype.init = function(e, t, r, n, i) {
      he(arguments.length === 4 || arguments.length === 5, "init(windowBits, level, memLevel, strategy, [dictionary])"), he(e >= 8 && e <= 15, "invalid windowBits"), he(t >= -1 && t <= 9, "invalid compression level"), he(r >= 1 && r <= 9, "invalid memlevel"), he(n === w3.Z_FILTERED || n === w3.Z_HUFFMAN_ONLY || n === w3.Z_RLE || n === w3.Z_FIXED || n === w3.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(t, e, r, n, i), this._setDictionary();
    };
    re2.prototype.params = function() {
      throw new Error("deflateParams Not supported");
    };
    re2.prototype.reset = function() {
      this._reset(), this._setDictionary();
    };
    re2.prototype._init = function(e, t, r, n, i) {
      switch (this.level = e, this.windowBits = t, this.memLevel = r, this.strategy = n, this.flush = w3.Z_NO_FLUSH, this.err = w3.Z_OK, (this.mode === w3.GZIP || this.mode === w3.GUNZIP) && (this.windowBits += 16), this.mode === w3.UNZIP && (this.windowBits += 32), (this.mode === w3.DEFLATERAW || this.mode === w3.INFLATERAW) && (this.windowBits = -1 * this.windowBits), this.strm = new _A, this.mode) {
        case w3.DEFLATE:
        case w3.GZIP:
        case w3.DEFLATERAW:
          this.err = Rn.deflateInit2(this.strm, this.level, w3.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
          break;
        case w3.INFLATE:
        case w3.GUNZIP:
        case w3.INFLATERAW:
        case w3.UNZIP:
          this.err = Gt.inflateInit2(this.strm, this.windowBits);
          break;
        default:
          throw new Error("Unknown mode " + this.mode);
      }
      this.err !== w3.Z_OK && this._error("Init error"), this.dictionary = i, this.write_in_progress = false, this.init_done = true;
    };
    re2.prototype._setDictionary = function() {
      if (this.dictionary != null) {
        switch (this.err = w3.Z_OK, this.mode) {
          case w3.DEFLATE:
          case w3.DEFLATERAW:
            this.err = Rn.deflateSetDictionary(this.strm, this.dictionary);
            break;
          default:
            break;
        }
        this.err !== w3.Z_OK && this._error("Failed to set dictionary");
      }
    };
    re2.prototype._reset = function() {
      switch (this.err = w3.Z_OK, this.mode) {
        case w3.DEFLATE:
        case w3.DEFLATERAW:
        case w3.GZIP:
          this.err = Rn.deflateReset(this.strm);
          break;
        case w3.INFLATE:
        case w3.INFLATERAW:
        case w3.GUNZIP:
          this.err = Gt.inflateReset(this.strm);
          break;
        default:
          break;
      }
      this.err !== w3.Z_OK && this._error("Failed to reset stream");
    };
    w3.Zlib = re2;
  });
  ol = g4((x5) => {
    var Ve = xe().Buffer, Gy = (_c(), se(br2)).Transform, N5 = zy(), Et = ff(), In = tn().ok, il = xe().kMaxLength, Hy = "Cannot create final Buffer. It would be larger than 0x" + il.toString(16) + " bytes";
    N5.Z_MIN_WINDOWBITS = 8;
    N5.Z_MAX_WINDOWBITS = 15;
    N5.Z_DEFAULT_WINDOWBITS = 15;
    N5.Z_MIN_CHUNK = 64;
    N5.Z_MAX_CHUNK = 1 / 0;
    N5.Z_DEFAULT_CHUNK = 16 * 1024;
    N5.Z_MIN_MEMLEVEL = 1;
    N5.Z_MAX_MEMLEVEL = 9;
    N5.Z_DEFAULT_MEMLEVEL = 8;
    N5.Z_MIN_LEVEL = -1;
    N5.Z_MAX_LEVEL = 9;
    N5.Z_DEFAULT_LEVEL = N5.Z_DEFAULT_COMPRESSION;
    var Wy = Object.keys(N5);
    for (po = 0;po < Wy.length; po++)
      yo = Wy[po], yo.match(/^Z/) && Object.defineProperty(x5, yo, { enumerable: true, value: N5[yo], writable: false });
    var yo, po, go = { Z_OK: N5.Z_OK, Z_STREAM_END: N5.Z_STREAM_END, Z_NEED_DICT: N5.Z_NEED_DICT, Z_ERRNO: N5.Z_ERRNO, Z_STREAM_ERROR: N5.Z_STREAM_ERROR, Z_DATA_ERROR: N5.Z_DATA_ERROR, Z_MEM_ERROR: N5.Z_MEM_ERROR, Z_BUF_ERROR: N5.Z_BUF_ERROR, Z_VERSION_ERROR: N5.Z_VERSION_ERROR }, Zy = Object.keys(go);
    for (_o = 0;_o < Zy.length; _o++)
      nl = Zy[_o], go[go[nl]] = nl;
    var nl, _o;
    Object.defineProperty(x5, "codes", { enumerable: true, value: Object.freeze(go), writable: false });
    x5.Deflate = Ht;
    x5.Inflate = Vt;
    x5.Gzip = Yt;
    x5.Gunzip = Kt;
    x5.DeflateRaw = Xt;
    x5.InflateRaw = Jt;
    x5.Unzip = Qt;
    x5.createDeflate = function(e) {
      return new Ht(e);
    };
    x5.createInflate = function(e) {
      return new Vt(e);
    };
    x5.createDeflateRaw = function(e) {
      return new Xt(e);
    };
    x5.createInflateRaw = function(e) {
      return new Jt(e);
    };
    x5.createGzip = function(e) {
      return new Yt(e);
    };
    x5.createGunzip = function(e) {
      return new Kt(e);
    };
    x5.createUnzip = function(e) {
      return new Qt(e);
    };
    x5.deflate = function(e, t, r) {
      return typeof t == "function" && (r = t, t = {}), er(new Ht(t), e, r);
    };
    x5.deflateSync = function(e, t) {
      return tr(new Ht(t), e);
    };
    x5.gzip = function(e, t, r) {
      return typeof t == "function" && (r = t, t = {}), er(new Yt(t), e, r);
    };
    x5.gzipSync = function(e, t) {
      return tr(new Yt(t), e);
    };
    x5.deflateRaw = function(e, t, r) {
      return typeof t == "function" && (r = t, t = {}), er(new Xt(t), e, r);
    };
    x5.deflateRawSync = function(e, t) {
      return tr(new Xt(t), e);
    };
    x5.unzip = function(e, t, r) {
      return typeof t == "function" && (r = t, t = {}), er(new Qt(t), e, r);
    };
    x5.unzipSync = function(e, t) {
      return tr(new Qt(t), e);
    };
    x5.inflate = function(e, t, r) {
      return typeof t == "function" && (r = t, t = {}), er(new Vt(t), e, r);
    };
    x5.inflateSync = function(e, t) {
      return tr(new Vt(t), e);
    };
    x5.gunzip = function(e, t, r) {
      return typeof t == "function" && (r = t, t = {}), er(new Kt(t), e, r);
    };
    x5.gunzipSync = function(e, t) {
      return tr(new Kt(t), e);
    };
    x5.inflateRaw = function(e, t, r) {
      return typeof t == "function" && (r = t, t = {}), er(new Jt(t), e, r);
    };
    x5.inflateRawSync = function(e, t) {
      return tr(new Jt(t), e);
    };
    function er(e, t, r) {
      var n = [], i = 0;
      e.on("error", a3), e.on("end", f2), e.end(t), o2();
      function o2() {
        for (var u3;(u3 = e.read()) !== null; )
          n.push(u3), i += u3.length;
        e.once("readable", o2);
      }
      function a3(u3) {
        e.removeListener("end", f2), e.removeListener("readable", o2), r(u3);
      }
      function f2() {
        var u3, l3 = null;
        i >= il ? l3 = new RangeError(Hy) : u3 = Ve.concat(n, i), n = [], e.close(), r(l3, u3);
      }
    }
    function tr(e, t) {
      if (typeof t == "string" && (t = Ve.from(t)), !Ve.isBuffer(t))
        throw new TypeError("Not a string or buffer");
      var r = e._finishFlushFlag;
      return e._processChunk(t, r);
    }
    function Ht(e) {
      if (!(this instanceof Ht))
        return new Ht(e);
      Z2.call(this, e, N5.DEFLATE);
    }
    function Vt(e) {
      if (!(this instanceof Vt))
        return new Vt(e);
      Z2.call(this, e, N5.INFLATE);
    }
    function Yt(e) {
      if (!(this instanceof Yt))
        return new Yt(e);
      Z2.call(this, e, N5.GZIP);
    }
    function Kt(e) {
      if (!(this instanceof Kt))
        return new Kt(e);
      Z2.call(this, e, N5.GUNZIP);
    }
    function Xt(e) {
      if (!(this instanceof Xt))
        return new Xt(e);
      Z2.call(this, e, N5.DEFLATERAW);
    }
    function Jt(e) {
      if (!(this instanceof Jt))
        return new Jt(e);
      Z2.call(this, e, N5.INFLATERAW);
    }
    function Qt(e) {
      if (!(this instanceof Qt))
        return new Qt(e);
      Z2.call(this, e, N5.UNZIP);
    }
    function $y(e) {
      return e === N5.Z_NO_FLUSH || e === N5.Z_PARTIAL_FLUSH || e === N5.Z_SYNC_FLUSH || e === N5.Z_FULL_FLUSH || e === N5.Z_FINISH || e === N5.Z_BLOCK;
    }
    function Z2(e, t) {
      var r = this;
      if (this._opts = e = e || {}, this._chunkSize = e.chunkSize || x5.Z_DEFAULT_CHUNK, Gy.call(this, e), e.flush && !$y(e.flush))
        throw new Error("Invalid flush flag: " + e.flush);
      if (e.finishFlush && !$y(e.finishFlush))
        throw new Error("Invalid flush flag: " + e.finishFlush);
      if (this._flushFlag = e.flush || N5.Z_NO_FLUSH, this._finishFlushFlag = typeof e.finishFlush < "u" ? e.finishFlush : N5.Z_FINISH, e.chunkSize && (e.chunkSize < x5.Z_MIN_CHUNK || e.chunkSize > x5.Z_MAX_CHUNK))
        throw new Error("Invalid chunk size: " + e.chunkSize);
      if (e.windowBits && (e.windowBits < x5.Z_MIN_WINDOWBITS || e.windowBits > x5.Z_MAX_WINDOWBITS))
        throw new Error("Invalid windowBits: " + e.windowBits);
      if (e.level && (e.level < x5.Z_MIN_LEVEL || e.level > x5.Z_MAX_LEVEL))
        throw new Error("Invalid compression level: " + e.level);
      if (e.memLevel && (e.memLevel < x5.Z_MIN_MEMLEVEL || e.memLevel > x5.Z_MAX_MEMLEVEL))
        throw new Error("Invalid memLevel: " + e.memLevel);
      if (e.strategy && e.strategy != x5.Z_FILTERED && e.strategy != x5.Z_HUFFMAN_ONLY && e.strategy != x5.Z_RLE && e.strategy != x5.Z_FIXED && e.strategy != x5.Z_DEFAULT_STRATEGY)
        throw new Error("Invalid strategy: " + e.strategy);
      if (e.dictionary && !Ve.isBuffer(e.dictionary))
        throw new Error("Invalid dictionary: it should be a Buffer instance");
      this._handle = new N5.Zlib(t);
      var n = this;
      this._hadError = false, this._handle.onerror = function(a3, f2) {
        bo(n), n._hadError = true;
        var u3 = new Error(a3);
        u3.errno = f2, u3.code = x5.codes[f2], n.emit("error", u3);
      };
      var i = x5.Z_DEFAULT_COMPRESSION;
      typeof e.level == "number" && (i = e.level);
      var o2 = x5.Z_DEFAULT_STRATEGY;
      typeof e.strategy == "number" && (o2 = e.strategy), this._handle.init(e.windowBits || x5.Z_DEFAULT_WINDOWBITS, i, e.memLevel || x5.Z_DEFAULT_MEMLEVEL, o2, e.dictionary), this._buffer = Ve.allocUnsafe(this._chunkSize), this._offset = 0, this._level = i, this._strategy = o2, this.once("end", this.close), Object.defineProperty(this, "_closed", { get: function() {
        return !r._handle;
      }, configurable: true, enumerable: true });
    }
    Et.inherits(Z2, Gy);
    Z2.prototype.params = function(e, t, r) {
      if (e < x5.Z_MIN_LEVEL || e > x5.Z_MAX_LEVEL)
        throw new RangeError("Invalid compression level: " + e);
      if (t != x5.Z_FILTERED && t != x5.Z_HUFFMAN_ONLY && t != x5.Z_RLE && t != x5.Z_FIXED && t != x5.Z_DEFAULT_STRATEGY)
        throw new TypeError("Invalid strategy: " + t);
      if (this._level !== e || this._strategy !== t) {
        var n = this;
        this.flush(N5.Z_SYNC_FLUSH, function() {
          In(n._handle, "zlib binding closed"), n._handle.params(e, t), n._hadError || (n._level = e, n._strategy = t, r && r());
        });
      } else
        process.nextTick(r);
    };
    Z2.prototype.reset = function() {
      return In(this._handle, "zlib binding closed"), this._handle.reset();
    };
    Z2.prototype._flush = function(e) {
      this._transform(Ve.alloc(0), "", e);
    };
    Z2.prototype.flush = function(e, t) {
      var r = this, n = this._writableState;
      (typeof e == "function" || e === undefined && !t) && (t = e, e = N5.Z_FULL_FLUSH), n.ended ? t && process.nextTick(t) : n.ending ? t && this.once("end", t) : n.needDrain ? t && this.once("drain", function() {
        return r.flush(e, t);
      }) : (this._flushFlag = e, this.write(Ve.alloc(0), "", t));
    };
    Z2.prototype.close = function(e) {
      bo(this, e), process.nextTick(wA, this);
    };
    function bo(e, t) {
      t && process.nextTick(t), e._handle && (e._handle.close(), e._handle = null);
    }
    function wA(e) {
      e.emit("close");
    }
    Z2.prototype._transform = function(e, t, r) {
      var n, i = this._writableState, o2 = i.ending || i.ended, a3 = o2 && (!e || i.length === e.length);
      if (e !== null && !Ve.isBuffer(e))
        return r(new Error("invalid input"));
      if (!this._handle)
        return r(new Error("zlib binding closed"));
      a3 ? n = this._finishFlushFlag : (n = this._flushFlag, e.length >= i.length && (this._flushFlag = this._opts.flush || N5.Z_NO_FLUSH)), this._processChunk(e, n, r);
    };
    Z2.prototype._processChunk = function(e, t, r) {
      var n = e && e.length, i = this._chunkSize - this._offset, o2 = 0, a3 = this, f2 = typeof r == "function";
      if (!f2) {
        var u3 = [], l3 = 0, s2;
        this.on("error", function(b4) {
          s2 = b4;
        }), In(this._handle, "zlib binding closed");
        do
          var c2 = this._handle.writeSync(t, e, o2, n, this._buffer, this._offset, i);
        while (!this._hadError && y4(c2[0], c2[1]));
        if (this._hadError)
          throw s2;
        if (l3 >= il)
          throw bo(this), new RangeError(Hy);
        var h4 = Ve.concat(u3, l3);
        return bo(this), h4;
      }
      In(this._handle, "zlib binding closed");
      var d3 = this._handle.write(t, e, o2, n, this._buffer, this._offset, i);
      d3.buffer = e, d3.callback = y4;
      function y4(b4, R3) {
        if (this && (this.buffer = null, this.callback = null), !a3._hadError) {
          var _4 = i - R3;
          if (In(_4 >= 0, "have should not go down"), _4 > 0) {
            var E5 = a3._buffer.slice(a3._offset, a3._offset + _4);
            a3._offset += _4, f2 ? a3.push(E5) : (u3.push(E5), l3 += E5.length);
          }
          if ((R3 === 0 || a3._offset >= a3._chunkSize) && (i = a3._chunkSize, a3._offset = 0, a3._buffer = Ve.allocUnsafe(a3._chunkSize)), R3 === 0) {
            if (o2 += n - b4, n = b4, !f2)
              return true;
            var m3 = a3._handle.write(t, e, o2, n, a3._buffer, a3._offset, a3._chunkSize);
            m3.callback = y4, m3.buffer = e;
            return;
          }
          if (!f2)
            return false;
          r();
        }
      }
    };
    Et.inherits(Ht, Z2);
    Et.inherits(Vt, Z2);
    Et.inherits(Yt, Z2);
    Et.inherits(Kt, Z2);
    Et.inherits(Xt, Z2);
    Et.inherits(Jt, Z2);
    Et.inherits(Qt, Z2);
  });
  Tn = {};
  Bn(Tn, { default: () => EA });
  X3(Tn, vt(ol()));
  EA = vt(ol());
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
   * @license  MIT
   */
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
});

// node_modules/readable-stream/lib/_stream_transform.js
var require__stream_transform = __commonJS((exports, module) => {
  module.exports = Transform;
  var _require$codes = require_errors_browser().codes;
  var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
  var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
  var ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING;
  var ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
  var Duplex = require__stream_duplex();
  require_inherits_browser()(Transform, Duplex);
  function afterTransform(er, data) {
    var ts = this._transformState;
    ts.transforming = false;
    var cb = ts.writecb;
    if (cb === null) {
      return this.emit("error", new ERR_MULTIPLE_CALLBACK);
    }
    ts.writechunk = null;
    ts.writecb = null;
    if (data != null)
      this.push(data);
    cb(er);
    var rs = this._readableState;
    rs.reading = false;
    if (rs.needReadable || rs.length < rs.highWaterMark) {
      this._read(rs.highWaterMark);
    }
  }
  function Transform(options) {
    if (!(this instanceof Transform))
      return new Transform(options);
    Duplex.call(this, options);
    this._transformState = {
      afterTransform: afterTransform.bind(this),
      needTransform: false,
      transforming: false,
      writecb: null,
      writechunk: null,
      writeencoding: null
    };
    this._readableState.needReadable = true;
    this._readableState.sync = false;
    if (options) {
      if (typeof options.transform === "function")
        this._transform = options.transform;
      if (typeof options.flush === "function")
        this._flush = options.flush;
    }
    this.on("prefinish", prefinish);
  }
  function prefinish() {
    var _this = this;
    if (typeof this._flush === "function" && !this._readableState.destroyed) {
      this._flush(function(er, data) {
        done(_this, er, data);
      });
    } else {
      done(this, null, null);
    }
  }
  Transform.prototype.push = function(chunk, encoding) {
    this._transformState.needTransform = false;
    return Duplex.prototype.push.call(this, chunk, encoding);
  };
  Transform.prototype._transform = function(chunk, encoding, cb) {
    cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
  };
  Transform.prototype._write = function(chunk, encoding, cb) {
    var ts = this._transformState;
    ts.writecb = cb;
    ts.writechunk = chunk;
    ts.writeencoding = encoding;
    if (!ts.transforming) {
      var rs = this._readableState;
      if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
        this._read(rs.highWaterMark);
    }
  };
  Transform.prototype._read = function(n) {
    var ts = this._transformState;
    if (ts.writechunk !== null && !ts.transforming) {
      ts.transforming = true;
      this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
    } else {
      ts.needTransform = true;
    }
  };
  Transform.prototype._destroy = function(err, cb) {
    Duplex.prototype._destroy.call(this, err, function(err2) {
      cb(err2);
    });
  };
  function done(stream, er, data) {
    if (er)
      return stream.emit("error", er);
    if (data != null)
      stream.push(data);
    if (stream._writableState.length)
      throw new ERR_TRANSFORM_WITH_LENGTH_0;
    if (stream._transformState.transforming)
      throw new ERR_TRANSFORM_ALREADY_TRANSFORMING;
    return stream.push(null);
  }
});

// node_modules/readable-stream/lib/_stream_passthrough.js
var require__stream_passthrough = __commonJS((exports, module) => {
  module.exports = PassThrough;
  var Transform = require__stream_transform();
  require_inherits_browser()(PassThrough, Transform);
  function PassThrough(options) {
    if (!(this instanceof PassThrough))
      return new PassThrough(options);
    Transform.call(this, options);
  }
  PassThrough.prototype._transform = function(chunk, encoding, cb) {
    cb(null, chunk);
  };
});

// node_modules/readable-stream/lib/internal/streams/pipeline.js
var require_pipeline = __commonJS((exports, module) => {
  var eos;
  function once(callback) {
    var called = false;
    return function() {
      if (called)
        return;
      called = true;
      callback.apply(undefined, arguments);
    };
  }
  var _require$codes = require_errors_browser().codes;
  var ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;
  var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
  function noop(err) {
    if (err)
      throw err;
  }
  function isRequest(stream) {
    return stream.setHeader && typeof stream.abort === "function";
  }
  function destroyer(stream, reading, writing, callback) {
    callback = once(callback);
    var closed = false;
    stream.on("close", function() {
      closed = true;
    });
    if (eos === undefined)
      eos = require_end_of_stream();
    eos(stream, {
      readable: reading,
      writable: writing
    }, function(err) {
      if (err)
        return callback(err);
      closed = true;
      callback();
    });
    var destroyed = false;
    return function(err) {
      if (closed)
        return;
      if (destroyed)
        return;
      destroyed = true;
      if (isRequest(stream))
        return stream.abort();
      if (typeof stream.destroy === "function")
        return stream.destroy();
      callback(err || new ERR_STREAM_DESTROYED("pipe"));
    };
  }
  function call(fn) {
    fn();
  }
  function pipe(from, to) {
    return from.pipe(to);
  }
  function popCallback(streams) {
    if (!streams.length)
      return noop;
    if (typeof streams[streams.length - 1] !== "function")
      return noop;
    return streams.pop();
  }
  function pipeline() {
    for (var _len = arguments.length, streams = new Array(_len), _key = 0;_key < _len; _key++) {
      streams[_key] = arguments[_key];
    }
    var callback = popCallback(streams);
    if (Array.isArray(streams[0]))
      streams = streams[0];
    if (streams.length < 2) {
      throw new ERR_MISSING_ARGS("streams");
    }
    var error;
    var destroys = streams.map(function(stream, i) {
      var reading = i < streams.length - 1;
      var writing = i > 0;
      return destroyer(stream, reading, writing, function(err) {
        if (!error)
          error = err;
        if (err)
          destroys.forEach(call);
        if (reading)
          return;
        destroys.forEach(call);
        callback(error);
      });
    });
    return streams.reduce(pipe);
  }
  module.exports = pipeline;
});

// node_modules/readable-stream/readable-browser.js
var require_readable_browser = __commonJS((exports, module) => {
  exports = module.exports = require__stream_readable();
  exports.Stream = exports;
  exports.Readable = exports;
  exports.Writable = require__stream_writable();
  exports.Duplex = require__stream_duplex();
  exports.Transform = require__stream_transform();
  exports.PassThrough = require__stream_passthrough();
  exports.finished = require_end_of_stream();
  exports.pipeline = require_pipeline();
});

// node_modules/@dabh/diagnostics/diagnostics.js
var require_diagnostics = __commonJS((exports, module) => {
  var adapters = [];
  var modifiers = [];
  var logger = function devnull() {
  };
  function use(adapter) {
    if (~adapters.indexOf(adapter))
      return false;
    adapters.push(adapter);
    return true;
  }
  function set(custom) {
    logger = custom;
  }
  function enabled(namespace) {
    var async = [];
    for (var i = 0;i < adapters.length; i++) {
      if (adapters[i].async) {
        async.push(adapters[i]);
        continue;
      }
      if (adapters[i](namespace))
        return true;
    }
    if (!async.length)
      return false;
    return new Promise(function pinky(resolve) {
      Promise.all(async.map(function prebind(fn) {
        return fn(namespace);
      })).then(function resolved(values) {
        resolve(values.some(Boolean));
      });
    });
  }
  function modify(fn) {
    if (~modifiers.indexOf(fn))
      return false;
    modifiers.push(fn);
    return true;
  }
  function write() {
    logger.apply(logger, arguments);
  }
  function process2(message) {
    for (var i = 0;i < modifiers.length; i++) {
      message = modifiers[i].apply(modifiers[i], arguments);
    }
    return message;
  }
  function introduce(fn, options) {
    var has = Object.prototype.hasOwnProperty;
    for (var key in options) {
      if (has.call(options, key)) {
        fn[key] = options[key];
      }
    }
    return fn;
  }
  function nope(options) {
    options.enabled = false;
    options.modify = modify;
    options.set = set;
    options.use = use;
    return introduce(function diagnopes() {
      return false;
    }, options);
  }
  function yep(options) {
    function diagnostics() {
      var args = Array.prototype.slice.call(arguments, 0);
      write.call(write, options, process2(args, options));
      return true;
    }
    options.enabled = true;
    options.modify = modify;
    options.set = set;
    options.use = use;
    return introduce(diagnostics, options);
  }
  module.exports = function create(diagnostics) {
    diagnostics.introduce = introduce;
    diagnostics.enabled = enabled;
    diagnostics.process = process2;
    diagnostics.modify = modify;
    diagnostics.write = write;
    diagnostics.nope = nope;
    diagnostics.yep = yep;
    diagnostics.set = set;
    diagnostics.use = use;
    return diagnostics;
  };
});

// node_modules/is-arrayish/index.js
var require_is_arrayish = __commonJS((exports, module) => {
  module.exports = function isArrayish(obj) {
    if (!obj || typeof obj === "string") {
      return false;
    }
    return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && (obj.splice instanceof Function || Object.getOwnPropertyDescriptor(obj, obj.length - 1) && obj.constructor.name !== "String");
  };
});

// node_modules/simple-swizzle/index.js
var require_simple_swizzle = __commonJS((exports, module) => {
  var isArrayish = require_is_arrayish();
  var concat = Array.prototype.concat;
  var slice = Array.prototype.slice;
  var swizzle = module.exports = function swizzle(args) {
    var results = [];
    for (var i = 0, len = args.length;i < len; i++) {
      var arg = args[i];
      if (isArrayish(arg)) {
        results = concat.call(results, slice.call(arg));
      } else {
        results.push(arg);
      }
    }
    return results;
  };
  swizzle.wrap = function(fn) {
    return function() {
      return fn(swizzle(arguments));
    };
  };
});

// node_modules/color-string/index.js
var require_color_string = __commonJS((exports, module) => {
  var colorNames = require_color_name();
  var swizzle = require_simple_swizzle();
  var hasOwnProperty = Object.hasOwnProperty;
  var reverseNames = Object.create(null);
  for (name in colorNames) {
    if (hasOwnProperty.call(colorNames, name)) {
      reverseNames[colorNames[name]] = name;
    }
  }
  var name;
  var cs = module.exports = {
    to: {},
    get: {}
  };
  cs.get = function(string) {
    var prefix = string.substring(0, 3).toLowerCase();
    var val;
    var model;
    switch (prefix) {
      case "hsl":
        val = cs.get.hsl(string);
        model = "hsl";
        break;
      case "hwb":
        val = cs.get.hwb(string);
        model = "hwb";
        break;
      default:
        val = cs.get.rgb(string);
        model = "rgb";
        break;
    }
    if (!val) {
      return null;
    }
    return { model, value: val };
  };
  cs.get.rgb = function(string) {
    if (!string) {
      return null;
    }
    var abbr = /^#([a-f0-9]{3,4})$/i;
    var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
    var rgba = /^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
    var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
    var keyword = /^(\w+)$/;
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;
    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];
      for (i = 0;i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
      }
      if (hexAlpha) {
        rgb[3] = parseInt(hexAlpha, 16) / 255;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];
      for (i = 0;i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16);
      }
      if (hexAlpha) {
        rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0;i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0);
      }
      if (match[4]) {
        if (match[5]) {
          rgb[3] = parseFloat(match[4]) * 0.01;
        } else {
          rgb[3] = parseFloat(match[4]);
        }
      }
    } else if (match = string.match(per)) {
      for (i = 0;i < 3; i++) {
        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
      }
      if (match[4]) {
        if (match[5]) {
          rgb[3] = parseFloat(match[4]) * 0.01;
        } else {
          rgb[3] = parseFloat(match[4]);
        }
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === "transparent") {
        return [0, 0, 0, 0];
      }
      if (!hasOwnProperty.call(colorNames, match[1])) {
        return null;
      }
      rgb = colorNames[match[1]];
      rgb[3] = 1;
      return rgb;
    } else {
      return null;
    }
    for (i = 0;i < 3; i++) {
      rgb[i] = clamp(rgb[i], 0, 255);
    }
    rgb[3] = clamp(rgb[3], 0, 1);
    return rgb;
  };
  cs.get.hsl = function(string) {
    if (!string) {
      return null;
    }
    var hsl = /^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
    var match = string.match(hsl);
    if (match) {
      var alpha = parseFloat(match[4]);
      var h4 = (parseFloat(match[1]) % 360 + 360) % 360;
      var s2 = clamp(parseFloat(match[2]), 0, 100);
      var l3 = clamp(parseFloat(match[3]), 0, 100);
      var a3 = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h4, s2, l3, a3];
    }
    return null;
  };
  cs.get.hwb = function(string) {
    if (!string) {
      return null;
    }
    var hwb = /^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
    var match = string.match(hwb);
    if (match) {
      var alpha = parseFloat(match[4]);
      var h4 = (parseFloat(match[1]) % 360 + 360) % 360;
      var w3 = clamp(parseFloat(match[2]), 0, 100);
      var b4 = clamp(parseFloat(match[3]), 0, 100);
      var a3 = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h4, w3, b4, a3];
    }
    return null;
  };
  cs.to.hex = function() {
    var rgba = swizzle(arguments);
    return "#" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : "");
  };
  cs.to.rgb = function() {
    var rgba = swizzle(arguments);
    return rgba.length < 4 || rgba[3] === 1 ? "rgb(" + Math.round(rgba[0]) + ", " + Math.round(rgba[1]) + ", " + Math.round(rgba[2]) + ")" : "rgba(" + Math.round(rgba[0]) + ", " + Math.round(rgba[1]) + ", " + Math.round(rgba[2]) + ", " + rgba[3] + ")";
  };
  cs.to.rgb.percent = function() {
    var rgba = swizzle(arguments);
    var r = Math.round(rgba[0] / 255 * 100);
    var g5 = Math.round(rgba[1] / 255 * 100);
    var b4 = Math.round(rgba[2] / 255 * 100);
    return rgba.length < 4 || rgba[3] === 1 ? "rgb(" + r + "%, " + g5 + "%, " + b4 + "%)" : "rgba(" + r + "%, " + g5 + "%, " + b4 + "%, " + rgba[3] + ")";
  };
  cs.to.hsl = function() {
    var hsla = swizzle(arguments);
    return hsla.length < 4 || hsla[3] === 1 ? "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)" : "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, " + hsla[3] + ")";
  };
  cs.to.hwb = function() {
    var hwba = swizzle(arguments);
    var a3 = "";
    if (hwba.length >= 4 && hwba[3] !== 1) {
      a3 = ", " + hwba[3];
    }
    return "hwb(" + hwba[0] + ", " + hwba[1] + "%, " + hwba[2] + "%" + a3 + ")";
  };
  cs.to.keyword = function(rgb) {
    return reverseNames[rgb.slice(0, 3)];
  };
  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }
  function hexDouble(num) {
    var str = Math.round(num).toString(16).toUpperCase();
    return str.length < 2 ? "0" + str : str;
  }
});

// node_modules/color/node_modules/color-convert/node_modules/color-name/index.js
var require_color_name2 = __commonJS((exports, module) => {
  module.exports = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
});

// node_modules/color/node_modules/color-convert/conversions.js
var require_conversions2 = __commonJS((exports, module) => {
  var cssKeywords = require_color_name2();
  var reverseKeywords = {};
  for (key in cssKeywords) {
    if (cssKeywords.hasOwnProperty(key)) {
      reverseKeywords[cssKeywords[key]] = key;
    }
  }
  var key;
  var convert = module.exports = {
    rgb: { channels: 3, labels: "rgb" },
    hsl: { channels: 3, labels: "hsl" },
    hsv: { channels: 3, labels: "hsv" },
    hwb: { channels: 3, labels: "hwb" },
    cmyk: { channels: 4, labels: "cmyk" },
    xyz: { channels: 3, labels: "xyz" },
    lab: { channels: 3, labels: "lab" },
    lch: { channels: 3, labels: "lch" },
    hex: { channels: 1, labels: ["hex"] },
    keyword: { channels: 1, labels: ["keyword"] },
    ansi16: { channels: 1, labels: ["ansi16"] },
    ansi256: { channels: 1, labels: ["ansi256"] },
    hcg: { channels: 3, labels: ["h", "c", "g"] },
    apple: { channels: 3, labels: ["r16", "g16", "b16"] },
    gray: { channels: 1, labels: ["gray"] }
  };
  for (model in convert) {
    if (convert.hasOwnProperty(model)) {
      if (!("channels" in convert[model])) {
        throw new Error("missing channels property: " + model);
      }
      if (!("labels" in convert[model])) {
        throw new Error("missing channel labels property: " + model);
      }
      if (convert[model].labels.length !== convert[model].channels) {
        throw new Error("channel and label counts mismatch: " + model);
      }
      channels = convert[model].channels;
      labels = convert[model].labels;
      delete convert[model].channels;
      delete convert[model].labels;
      Object.defineProperty(convert[model], "channels", { value: channels });
      Object.defineProperty(convert[model], "labels", { value: labels });
    }
  }
  var channels;
  var labels;
  var model;
  convert.rgb.hsl = function(rgb) {
    var r = rgb[0] / 255;
    var g5 = rgb[1] / 255;
    var b4 = rgb[2] / 255;
    var min = Math.min(r, g5, b4);
    var max = Math.max(r, g5, b4);
    var delta = max - min;
    var h4;
    var s2;
    var l3;
    if (max === min) {
      h4 = 0;
    } else if (r === max) {
      h4 = (g5 - b4) / delta;
    } else if (g5 === max) {
      h4 = 2 + (b4 - r) / delta;
    } else if (b4 === max) {
      h4 = 4 + (r - g5) / delta;
    }
    h4 = Math.min(h4 * 60, 360);
    if (h4 < 0) {
      h4 += 360;
    }
    l3 = (min + max) / 2;
    if (max === min) {
      s2 = 0;
    } else if (l3 <= 0.5) {
      s2 = delta / (max + min);
    } else {
      s2 = delta / (2 - max - min);
    }
    return [h4, s2 * 100, l3 * 100];
  };
  convert.rgb.hsv = function(rgb) {
    var rdif;
    var gdif;
    var bdif;
    var h4;
    var s2;
    var r = rgb[0] / 255;
    var g5 = rgb[1] / 255;
    var b4 = rgb[2] / 255;
    var v3 = Math.max(r, g5, b4);
    var diff = v3 - Math.min(r, g5, b4);
    var diffc = function(c2) {
      return (v3 - c2) / 6 / diff + 1 / 2;
    };
    if (diff === 0) {
      h4 = s2 = 0;
    } else {
      s2 = diff / v3;
      rdif = diffc(r);
      gdif = diffc(g5);
      bdif = diffc(b4);
      if (r === v3) {
        h4 = bdif - gdif;
      } else if (g5 === v3) {
        h4 = 1 / 3 + rdif - bdif;
      } else if (b4 === v3) {
        h4 = 2 / 3 + gdif - rdif;
      }
      if (h4 < 0) {
        h4 += 1;
      } else if (h4 > 1) {
        h4 -= 1;
      }
    }
    return [
      h4 * 360,
      s2 * 100,
      v3 * 100
    ];
  };
  convert.rgb.hwb = function(rgb) {
    var r = rgb[0];
    var g5 = rgb[1];
    var b4 = rgb[2];
    var h4 = convert.rgb.hsl(rgb)[0];
    var w3 = 1 / 255 * Math.min(r, Math.min(g5, b4));
    b4 = 1 - 1 / 255 * Math.max(r, Math.max(g5, b4));
    return [h4, w3 * 100, b4 * 100];
  };
  convert.rgb.cmyk = function(rgb) {
    var r = rgb[0] / 255;
    var g5 = rgb[1] / 255;
    var b4 = rgb[2] / 255;
    var c2;
    var m3;
    var y4;
    var k3;
    k3 = Math.min(1 - r, 1 - g5, 1 - b4);
    c2 = (1 - r - k3) / (1 - k3) || 0;
    m3 = (1 - g5 - k3) / (1 - k3) || 0;
    y4 = (1 - b4 - k3) / (1 - k3) || 0;
    return [c2 * 100, m3 * 100, y4 * 100, k3 * 100];
  };
  function comparativeDistance(x5, y4) {
    return Math.pow(x5[0] - y4[0], 2) + Math.pow(x5[1] - y4[1], 2) + Math.pow(x5[2] - y4[2], 2);
  }
  convert.rgb.keyword = function(rgb) {
    var reversed = reverseKeywords[rgb];
    if (reversed) {
      return reversed;
    }
    var currentClosestDistance = Infinity;
    var currentClosestKeyword;
    for (var keyword in cssKeywords) {
      if (cssKeywords.hasOwnProperty(keyword)) {
        var value = cssKeywords[keyword];
        var distance = comparativeDistance(rgb, value);
        if (distance < currentClosestDistance) {
          currentClosestDistance = distance;
          currentClosestKeyword = keyword;
        }
      }
    }
    return currentClosestKeyword;
  };
  convert.keyword.rgb = function(keyword) {
    return cssKeywords[keyword];
  };
  convert.rgb.xyz = function(rgb) {
    var r = rgb[0] / 255;
    var g5 = rgb[1] / 255;
    var b4 = rgb[2] / 255;
    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
    g5 = g5 > 0.04045 ? Math.pow((g5 + 0.055) / 1.055, 2.4) : g5 / 12.92;
    b4 = b4 > 0.04045 ? Math.pow((b4 + 0.055) / 1.055, 2.4) : b4 / 12.92;
    var x5 = r * 0.4124 + g5 * 0.3576 + b4 * 0.1805;
    var y4 = r * 0.2126 + g5 * 0.7152 + b4 * 0.0722;
    var z = r * 0.0193 + g5 * 0.1192 + b4 * 0.9505;
    return [x5 * 100, y4 * 100, z * 100];
  };
  convert.rgb.lab = function(rgb) {
    var xyz = convert.rgb.xyz(rgb);
    var x5 = xyz[0];
    var y4 = xyz[1];
    var z = xyz[2];
    var l3;
    var a3;
    var b4;
    x5 /= 95.047;
    y4 /= 100;
    z /= 108.883;
    x5 = x5 > 0.008856 ? Math.pow(x5, 1 / 3) : 7.787 * x5 + 16 / 116;
    y4 = y4 > 0.008856 ? Math.pow(y4, 1 / 3) : 7.787 * y4 + 16 / 116;
    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
    l3 = 116 * y4 - 16;
    a3 = 500 * (x5 - y4);
    b4 = 200 * (y4 - z);
    return [l3, a3, b4];
  };
  convert.hsl.rgb = function(hsl) {
    var h4 = hsl[0] / 360;
    var s2 = hsl[1] / 100;
    var l3 = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;
    if (s2 === 0) {
      val = l3 * 255;
      return [val, val, val];
    }
    if (l3 < 0.5) {
      t2 = l3 * (1 + s2);
    } else {
      t2 = l3 + s2 - l3 * s2;
    }
    t1 = 2 * l3 - t2;
    rgb = [0, 0, 0];
    for (var i = 0;i < 3; i++) {
      t3 = h4 + 1 / 3 * -(i - 1);
      if (t3 < 0) {
        t3++;
      }
      if (t3 > 1) {
        t3--;
      }
      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
      } else {
        val = t1;
      }
      rgb[i] = val * 255;
    }
    return rgb;
  };
  convert.hsl.hsv = function(hsl) {
    var h4 = hsl[0];
    var s2 = hsl[1] / 100;
    var l3 = hsl[2] / 100;
    var smin = s2;
    var lmin = Math.max(l3, 0.01);
    var sv;
    var v3;
    l3 *= 2;
    s2 *= l3 <= 1 ? l3 : 2 - l3;
    smin *= lmin <= 1 ? lmin : 2 - lmin;
    v3 = (l3 + s2) / 2;
    sv = l3 === 0 ? 2 * smin / (lmin + smin) : 2 * s2 / (l3 + s2);
    return [h4, sv * 100, v3 * 100];
  };
  convert.hsv.rgb = function(hsv) {
    var h4 = hsv[0] / 60;
    var s2 = hsv[1] / 100;
    var v3 = hsv[2] / 100;
    var hi = Math.floor(h4) % 6;
    var f2 = h4 - Math.floor(h4);
    var p3 = 255 * v3 * (1 - s2);
    var q2 = 255 * v3 * (1 - s2 * f2);
    var t = 255 * v3 * (1 - s2 * (1 - f2));
    v3 *= 255;
    switch (hi) {
      case 0:
        return [v3, t, p3];
      case 1:
        return [q2, v3, p3];
      case 2:
        return [p3, v3, t];
      case 3:
        return [p3, q2, v3];
      case 4:
        return [t, p3, v3];
      case 5:
        return [v3, p3, q2];
    }
  };
  convert.hsv.hsl = function(hsv) {
    var h4 = hsv[0];
    var s2 = hsv[1] / 100;
    var v3 = hsv[2] / 100;
    var vmin = Math.max(v3, 0.01);
    var lmin;
    var sl2;
    var l3;
    l3 = (2 - s2) * v3;
    lmin = (2 - s2) * vmin;
    sl2 = s2 * vmin;
    sl2 /= lmin <= 1 ? lmin : 2 - lmin;
    sl2 = sl2 || 0;
    l3 /= 2;
    return [h4, sl2 * 100, l3 * 100];
  };
  convert.hwb.rgb = function(hwb) {
    var h4 = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v3;
    var f2;
    var n;
    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }
    i = Math.floor(6 * h4);
    v3 = 1 - bl;
    f2 = 6 * h4 - i;
    if ((i & 1) !== 0) {
      f2 = 1 - f2;
    }
    n = wh + f2 * (v3 - wh);
    var r;
    var g5;
    var b4;
    switch (i) {
      default:
      case 6:
      case 0:
        r = v3;
        g5 = n;
        b4 = wh;
        break;
      case 1:
        r = n;
        g5 = v3;
        b4 = wh;
        break;
      case 2:
        r = wh;
        g5 = v3;
        b4 = n;
        break;
      case 3:
        r = wh;
        g5 = n;
        b4 = v3;
        break;
      case 4:
        r = n;
        g5 = wh;
        b4 = v3;
        break;
      case 5:
        r = v3;
        g5 = wh;
        b4 = n;
        break;
    }
    return [r * 255, g5 * 255, b4 * 255];
  };
  convert.cmyk.rgb = function(cmyk) {
    var c2 = cmyk[0] / 100;
    var m3 = cmyk[1] / 100;
    var y4 = cmyk[2] / 100;
    var k3 = cmyk[3] / 100;
    var r;
    var g5;
    var b4;
    r = 1 - Math.min(1, c2 * (1 - k3) + k3);
    g5 = 1 - Math.min(1, m3 * (1 - k3) + k3);
    b4 = 1 - Math.min(1, y4 * (1 - k3) + k3);
    return [r * 255, g5 * 255, b4 * 255];
  };
  convert.xyz.rgb = function(xyz) {
    var x5 = xyz[0] / 100;
    var y4 = xyz[1] / 100;
    var z = xyz[2] / 100;
    var r;
    var g5;
    var b4;
    r = x5 * 3.2406 + y4 * -1.5372 + z * -0.4986;
    g5 = x5 * -0.9689 + y4 * 1.8758 + z * 0.0415;
    b4 = x5 * 0.0557 + y4 * -0.204 + z * 1.057;
    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;
    g5 = g5 > 0.0031308 ? 1.055 * Math.pow(g5, 1 / 2.4) - 0.055 : g5 * 12.92;
    b4 = b4 > 0.0031308 ? 1.055 * Math.pow(b4, 1 / 2.4) - 0.055 : b4 * 12.92;
    r = Math.min(Math.max(0, r), 1);
    g5 = Math.min(Math.max(0, g5), 1);
    b4 = Math.min(Math.max(0, b4), 1);
    return [r * 255, g5 * 255, b4 * 255];
  };
  convert.xyz.lab = function(xyz) {
    var x5 = xyz[0];
    var y4 = xyz[1];
    var z = xyz[2];
    var l3;
    var a3;
    var b4;
    x5 /= 95.047;
    y4 /= 100;
    z /= 108.883;
    x5 = x5 > 0.008856 ? Math.pow(x5, 1 / 3) : 7.787 * x5 + 16 / 116;
    y4 = y4 > 0.008856 ? Math.pow(y4, 1 / 3) : 7.787 * y4 + 16 / 116;
    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
    l3 = 116 * y4 - 16;
    a3 = 500 * (x5 - y4);
    b4 = 200 * (y4 - z);
    return [l3, a3, b4];
  };
  convert.lab.xyz = function(lab) {
    var l3 = lab[0];
    var a3 = lab[1];
    var b4 = lab[2];
    var x5;
    var y4;
    var z;
    y4 = (l3 + 16) / 116;
    x5 = a3 / 500 + y4;
    z = y4 - b4 / 200;
    var y22 = Math.pow(y4, 3);
    var x22 = Math.pow(x5, 3);
    var z2 = Math.pow(z, 3);
    y4 = y22 > 0.008856 ? y22 : (y4 - 16 / 116) / 7.787;
    x5 = x22 > 0.008856 ? x22 : (x5 - 16 / 116) / 7.787;
    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
    x5 *= 95.047;
    y4 *= 100;
    z *= 108.883;
    return [x5, y4, z];
  };
  convert.lab.lch = function(lab) {
    var l3 = lab[0];
    var a3 = lab[1];
    var b4 = lab[2];
    var hr;
    var h4;
    var c2;
    hr = Math.atan2(b4, a3);
    h4 = hr * 360 / 2 / Math.PI;
    if (h4 < 0) {
      h4 += 360;
    }
    c2 = Math.sqrt(a3 * a3 + b4 * b4);
    return [l3, c2, h4];
  };
  convert.lch.lab = function(lch) {
    var l3 = lch[0];
    var c2 = lch[1];
    var h4 = lch[2];
    var a3;
    var b4;
    var hr;
    hr = h4 / 360 * 2 * Math.PI;
    a3 = c2 * Math.cos(hr);
    b4 = c2 * Math.sin(hr);
    return [l3, a3, b4];
  };
  convert.rgb.ansi16 = function(args) {
    var r = args[0];
    var g5 = args[1];
    var b4 = args[2];
    var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2];
    value = Math.round(value / 50);
    if (value === 0) {
      return 30;
    }
    var ansi = 30 + (Math.round(b4 / 255) << 2 | Math.round(g5 / 255) << 1 | Math.round(r / 255));
    if (value === 2) {
      ansi += 60;
    }
    return ansi;
  };
  convert.hsv.ansi16 = function(args) {
    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
  };
  convert.rgb.ansi256 = function(args) {
    var r = args[0];
    var g5 = args[1];
    var b4 = args[2];
    if (r === g5 && g5 === b4) {
      if (r < 8) {
        return 16;
      }
      if (r > 248) {
        return 231;
      }
      return Math.round((r - 8) / 247 * 24) + 232;
    }
    var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g5 / 255 * 5) + Math.round(b4 / 255 * 5);
    return ansi;
  };
  convert.ansi16.rgb = function(args) {
    var color = args % 10;
    if (color === 0 || color === 7) {
      if (args > 50) {
        color += 3.5;
      }
      color = color / 10.5 * 255;
      return [color, color, color];
    }
    var mult = (~~(args > 50) + 1) * 0.5;
    var r = (color & 1) * mult * 255;
    var g5 = (color >> 1 & 1) * mult * 255;
    var b4 = (color >> 2 & 1) * mult * 255;
    return [r, g5, b4];
  };
  convert.ansi256.rgb = function(args) {
    if (args >= 232) {
      var c2 = (args - 232) * 10 + 8;
      return [c2, c2, c2];
    }
    args -= 16;
    var rem;
    var r = Math.floor(args / 36) / 5 * 255;
    var g5 = Math.floor((rem = args % 36) / 6) / 5 * 255;
    var b4 = rem % 6 / 5 * 255;
    return [r, g5, b4];
  };
  convert.rgb.hex = function(args) {
    var integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
    var string = integer.toString(16).toUpperCase();
    return "000000".substring(string.length) + string;
  };
  convert.hex.rgb = function(args) {
    var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!match) {
      return [0, 0, 0];
    }
    var colorString = match[0];
    if (match[0].length === 3) {
      colorString = colorString.split("").map(function(char) {
        return char + char;
      }).join("");
    }
    var integer = parseInt(colorString, 16);
    var r = integer >> 16 & 255;
    var g5 = integer >> 8 & 255;
    var b4 = integer & 255;
    return [r, g5, b4];
  };
  convert.rgb.hcg = function(rgb) {
    var r = rgb[0] / 255;
    var g5 = rgb[1] / 255;
    var b4 = rgb[2] / 255;
    var max = Math.max(Math.max(r, g5), b4);
    var min = Math.min(Math.min(r, g5), b4);
    var chroma = max - min;
    var grayscale;
    var hue;
    if (chroma < 1) {
      grayscale = min / (1 - chroma);
    } else {
      grayscale = 0;
    }
    if (chroma <= 0) {
      hue = 0;
    } else if (max === r) {
      hue = (g5 - b4) / chroma % 6;
    } else if (max === g5) {
      hue = 2 + (b4 - r) / chroma;
    } else {
      hue = 4 + (r - g5) / chroma + 4;
    }
    hue /= 6;
    hue %= 1;
    return [hue * 360, chroma * 100, grayscale * 100];
  };
  convert.hsl.hcg = function(hsl) {
    var s2 = hsl[1] / 100;
    var l3 = hsl[2] / 100;
    var c2 = 1;
    var f2 = 0;
    if (l3 < 0.5) {
      c2 = 2 * s2 * l3;
    } else {
      c2 = 2 * s2 * (1 - l3);
    }
    if (c2 < 1) {
      f2 = (l3 - 0.5 * c2) / (1 - c2);
    }
    return [hsl[0], c2 * 100, f2 * 100];
  };
  convert.hsv.hcg = function(hsv) {
    var s2 = hsv[1] / 100;
    var v3 = hsv[2] / 100;
    var c2 = s2 * v3;
    var f2 = 0;
    if (c2 < 1) {
      f2 = (v3 - c2) / (1 - c2);
    }
    return [hsv[0], c2 * 100, f2 * 100];
  };
  convert.hcg.rgb = function(hcg) {
    var h4 = hcg[0] / 360;
    var c2 = hcg[1] / 100;
    var g5 = hcg[2] / 100;
    if (c2 === 0) {
      return [g5 * 255, g5 * 255, g5 * 255];
    }
    var pure = [0, 0, 0];
    var hi = h4 % 1 * 6;
    var v3 = hi % 1;
    var w3 = 1 - v3;
    var mg = 0;
    switch (Math.floor(hi)) {
      case 0:
        pure[0] = 1;
        pure[1] = v3;
        pure[2] = 0;
        break;
      case 1:
        pure[0] = w3;
        pure[1] = 1;
        pure[2] = 0;
        break;
      case 2:
        pure[0] = 0;
        pure[1] = 1;
        pure[2] = v3;
        break;
      case 3:
        pure[0] = 0;
        pure[1] = w3;
        pure[2] = 1;
        break;
      case 4:
        pure[0] = v3;
        pure[1] = 0;
        pure[2] = 1;
        break;
      default:
        pure[0] = 1;
        pure[1] = 0;
        pure[2] = w3;
    }
    mg = (1 - c2) * g5;
    return [
      (c2 * pure[0] + mg) * 255,
      (c2 * pure[1] + mg) * 255,
      (c2 * pure[2] + mg) * 255
    ];
  };
  convert.hcg.hsv = function(hcg) {
    var c2 = hcg[1] / 100;
    var g5 = hcg[2] / 100;
    var v3 = c2 + g5 * (1 - c2);
    var f2 = 0;
    if (v3 > 0) {
      f2 = c2 / v3;
    }
    return [hcg[0], f2 * 100, v3 * 100];
  };
  convert.hcg.hsl = function(hcg) {
    var c2 = hcg[1] / 100;
    var g5 = hcg[2] / 100;
    var l3 = g5 * (1 - c2) + 0.5 * c2;
    var s2 = 0;
    if (l3 > 0 && l3 < 0.5) {
      s2 = c2 / (2 * l3);
    } else if (l3 >= 0.5 && l3 < 1) {
      s2 = c2 / (2 * (1 - l3));
    }
    return [hcg[0], s2 * 100, l3 * 100];
  };
  convert.hcg.hwb = function(hcg) {
    var c2 = hcg[1] / 100;
    var g5 = hcg[2] / 100;
    var v3 = c2 + g5 * (1 - c2);
    return [hcg[0], (v3 - c2) * 100, (1 - v3) * 100];
  };
  convert.hwb.hcg = function(hwb) {
    var w3 = hwb[1] / 100;
    var b4 = hwb[2] / 100;
    var v3 = 1 - b4;
    var c2 = v3 - w3;
    var g5 = 0;
    if (c2 < 1) {
      g5 = (v3 - c2) / (1 - c2);
    }
    return [hwb[0], c2 * 100, g5 * 100];
  };
  convert.apple.rgb = function(apple) {
    return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
  };
  convert.rgb.apple = function(rgb) {
    return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
  };
  convert.gray.rgb = function(args) {
    return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
  };
  convert.gray.hsl = convert.gray.hsv = function(args) {
    return [0, 0, args[0]];
  };
  convert.gray.hwb = function(gray) {
    return [0, 100, gray[0]];
  };
  convert.gray.cmyk = function(gray) {
    return [0, 0, 0, gray[0]];
  };
  convert.gray.lab = function(gray) {
    return [gray[0], 0, 0];
  };
  convert.gray.hex = function(gray) {
    var val = Math.round(gray[0] / 100 * 255) & 255;
    var integer = (val << 16) + (val << 8) + val;
    var string = integer.toString(16).toUpperCase();
    return "000000".substring(string.length) + string;
  };
  convert.rgb.gray = function(rgb) {
    var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
    return [val / 255 * 100];
  };
});

// node_modules/color/node_modules/color-convert/route.js
var require_route2 = __commonJS((exports, module) => {
  var conversions = require_conversions2();
  function buildGraph() {
    var graph = {};
    var models = Object.keys(conversions);
    for (var len = models.length, i = 0;i < len; i++) {
      graph[models[i]] = {
        distance: -1,
        parent: null
      };
    }
    return graph;
  }
  function deriveBFS(fromModel) {
    var graph = buildGraph();
    var queue = [fromModel];
    graph[fromModel].distance = 0;
    while (queue.length) {
      var current = queue.pop();
      var adjacents = Object.keys(conversions[current]);
      for (var len = adjacents.length, i = 0;i < len; i++) {
        var adjacent = adjacents[i];
        var node = graph[adjacent];
        if (node.distance === -1) {
          node.distance = graph[current].distance + 1;
          node.parent = current;
          queue.unshift(adjacent);
        }
      }
    }
    return graph;
  }
  function link(from, to) {
    return function(args) {
      return to(from(args));
    };
  }
  function wrapConversion(toModel, graph) {
    var path = [graph[toModel].parent, toModel];
    var fn = conversions[graph[toModel].parent][toModel];
    var cur = graph[toModel].parent;
    while (graph[cur].parent) {
      path.unshift(graph[cur].parent);
      fn = link(conversions[graph[cur].parent][cur], fn);
      cur = graph[cur].parent;
    }
    fn.conversion = path;
    return fn;
  }
  module.exports = function(fromModel) {
    var graph = deriveBFS(fromModel);
    var conversion = {};
    var models = Object.keys(graph);
    for (var len = models.length, i = 0;i < len; i++) {
      var toModel = models[i];
      var node = graph[toModel];
      if (node.parent === null) {
        continue;
      }
      conversion[toModel] = wrapConversion(toModel, graph);
    }
    return conversion;
  };
});

// node_modules/color/node_modules/color-convert/index.js
var require_color_convert2 = __commonJS((exports, module) => {
  var conversions = require_conversions2();
  var route = require_route2();
  var convert = {};
  var models = Object.keys(conversions);
  function wrapRaw(fn) {
    var wrappedFn = function(args) {
      if (args === undefined || args === null) {
        return args;
      }
      if (arguments.length > 1) {
        args = Array.prototype.slice.call(arguments);
      }
      return fn(args);
    };
    if ("conversion" in fn) {
      wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
  }
  function wrapRounded(fn) {
    var wrappedFn = function(args) {
      if (args === undefined || args === null) {
        return args;
      }
      if (arguments.length > 1) {
        args = Array.prototype.slice.call(arguments);
      }
      var result = fn(args);
      if (typeof result === "object") {
        for (var len = result.length, i = 0;i < len; i++) {
          result[i] = Math.round(result[i]);
        }
      }
      return result;
    };
    if ("conversion" in fn) {
      wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
  }
  models.forEach(function(fromModel) {
    convert[fromModel] = {};
    Object.defineProperty(convert[fromModel], "channels", { value: conversions[fromModel].channels });
    Object.defineProperty(convert[fromModel], "labels", { value: conversions[fromModel].labels });
    var routes = route(fromModel);
    var routeModels = Object.keys(routes);
    routeModels.forEach(function(toModel) {
      var fn = routes[toModel];
      convert[fromModel][toModel] = wrapRounded(fn);
      convert[fromModel][toModel].raw = wrapRaw(fn);
    });
  });
  module.exports = convert;
});

// node_modules/color/index.js
var require_color = __commonJS((exports, module) => {
  var colorString = require_color_string();
  var convert = require_color_convert2();
  var _slice = [].slice;
  var skippedModels = [
    "keyword",
    "gray",
    "hex"
  ];
  var hashedModelKeys = {};
  Object.keys(convert).forEach(function(model) {
    hashedModelKeys[_slice.call(convert[model].labels).sort().join("")] = model;
  });
  var limiters = {};
  function Color(obj, model) {
    if (!(this instanceof Color)) {
      return new Color(obj, model);
    }
    if (model && model in skippedModels) {
      model = null;
    }
    if (model && !(model in convert)) {
      throw new Error("Unknown model: " + model);
    }
    var i;
    var channels;
    if (obj == null) {
      this.model = "rgb";
      this.color = [0, 0, 0];
      this.valpha = 1;
    } else if (obj instanceof Color) {
      this.model = obj.model;
      this.color = obj.color.slice();
      this.valpha = obj.valpha;
    } else if (typeof obj === "string") {
      var result = colorString.get(obj);
      if (result === null) {
        throw new Error("Unable to parse color from string: " + obj);
      }
      this.model = result.model;
      channels = convert[this.model].channels;
      this.color = result.value.slice(0, channels);
      this.valpha = typeof result.value[channels] === "number" ? result.value[channels] : 1;
    } else if (obj.length) {
      this.model = model || "rgb";
      channels = convert[this.model].channels;
      var newArr = _slice.call(obj, 0, channels);
      this.color = zeroArray(newArr, channels);
      this.valpha = typeof obj[channels] === "number" ? obj[channels] : 1;
    } else if (typeof obj === "number") {
      obj &= 16777215;
      this.model = "rgb";
      this.color = [
        obj >> 16 & 255,
        obj >> 8 & 255,
        obj & 255
      ];
      this.valpha = 1;
    } else {
      this.valpha = 1;
      var keys = Object.keys(obj);
      if ("alpha" in obj) {
        keys.splice(keys.indexOf("alpha"), 1);
        this.valpha = typeof obj.alpha === "number" ? obj.alpha : 0;
      }
      var hashedKeys = keys.sort().join("");
      if (!(hashedKeys in hashedModelKeys)) {
        throw new Error("Unable to parse color from object: " + JSON.stringify(obj));
      }
      this.model = hashedModelKeys[hashedKeys];
      var labels = convert[this.model].labels;
      var color = [];
      for (i = 0;i < labels.length; i++) {
        color.push(obj[labels[i]]);
      }
      this.color = zeroArray(color);
    }
    if (limiters[this.model]) {
      channels = convert[this.model].channels;
      for (i = 0;i < channels; i++) {
        var limit = limiters[this.model][i];
        if (limit) {
          this.color[i] = limit(this.color[i]);
        }
      }
    }
    this.valpha = Math.max(0, Math.min(1, this.valpha));
    if (Object.freeze) {
      Object.freeze(this);
    }
  }
  Color.prototype = {
    toString: function() {
      return this.string();
    },
    toJSON: function() {
      return this[this.model]();
    },
    string: function(places) {
      var self2 = this.model in colorString.to ? this : this.rgb();
      self2 = self2.round(typeof places === "number" ? places : 1);
      var args = self2.valpha === 1 ? self2.color : self2.color.concat(this.valpha);
      return colorString.to[self2.model](args);
    },
    percentString: function(places) {
      var self2 = this.rgb().round(typeof places === "number" ? places : 1);
      var args = self2.valpha === 1 ? self2.color : self2.color.concat(this.valpha);
      return colorString.to.rgb.percent(args);
    },
    array: function() {
      return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
    },
    object: function() {
      var result = {};
      var channels = convert[this.model].channels;
      var labels = convert[this.model].labels;
      for (var i = 0;i < channels; i++) {
        result[labels[i]] = this.color[i];
      }
      if (this.valpha !== 1) {
        result.alpha = this.valpha;
      }
      return result;
    },
    unitArray: function() {
      var rgb = this.rgb().color;
      rgb[0] /= 255;
      rgb[1] /= 255;
      rgb[2] /= 255;
      if (this.valpha !== 1) {
        rgb.push(this.valpha);
      }
      return rgb;
    },
    unitObject: function() {
      var rgb = this.rgb().object();
      rgb.r /= 255;
      rgb.g /= 255;
      rgb.b /= 255;
      if (this.valpha !== 1) {
        rgb.alpha = this.valpha;
      }
      return rgb;
    },
    round: function(places) {
      places = Math.max(places || 0, 0);
      return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);
    },
    alpha: function(val) {
      if (arguments.length) {
        return new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);
      }
      return this.valpha;
    },
    red: getset("rgb", 0, maxfn(255)),
    green: getset("rgb", 1, maxfn(255)),
    blue: getset("rgb", 2, maxfn(255)),
    hue: getset(["hsl", "hsv", "hsl", "hwb", "hcg"], 0, function(val) {
      return (val % 360 + 360) % 360;
    }),
    saturationl: getset("hsl", 1, maxfn(100)),
    lightness: getset("hsl", 2, maxfn(100)),
    saturationv: getset("hsv", 1, maxfn(100)),
    value: getset("hsv", 2, maxfn(100)),
    chroma: getset("hcg", 1, maxfn(100)),
    gray: getset("hcg", 2, maxfn(100)),
    white: getset("hwb", 1, maxfn(100)),
    wblack: getset("hwb", 2, maxfn(100)),
    cyan: getset("cmyk", 0, maxfn(100)),
    magenta: getset("cmyk", 1, maxfn(100)),
    yellow: getset("cmyk", 2, maxfn(100)),
    black: getset("cmyk", 3, maxfn(100)),
    x: getset("xyz", 0, maxfn(100)),
    y: getset("xyz", 1, maxfn(100)),
    z: getset("xyz", 2, maxfn(100)),
    l: getset("lab", 0, maxfn(100)),
    a: getset("lab", 1),
    b: getset("lab", 2),
    keyword: function(val) {
      if (arguments.length) {
        return new Color(val);
      }
      return convert[this.model].keyword(this.color);
    },
    hex: function(val) {
      if (arguments.length) {
        return new Color(val);
      }
      return colorString.to.hex(this.rgb().round().color);
    },
    rgbNumber: function() {
      var rgb = this.rgb().color;
      return (rgb[0] & 255) << 16 | (rgb[1] & 255) << 8 | rgb[2] & 255;
    },
    luminosity: function() {
      var rgb = this.rgb().color;
      var lum = [];
      for (var i = 0;i < rgb.length; i++) {
        var chan = rgb[i] / 255;
        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);
      }
      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
    },
    contrast: function(color2) {
      var lum1 = this.luminosity();
      var lum2 = color2.luminosity();
      if (lum1 > lum2) {
        return (lum1 + 0.05) / (lum2 + 0.05);
      }
      return (lum2 + 0.05) / (lum1 + 0.05);
    },
    level: function(color2) {
      var contrastRatio = this.contrast(color2);
      if (contrastRatio >= 7.1) {
        return "AAA";
      }
      return contrastRatio >= 4.5 ? "AA" : "";
    },
    isDark: function() {
      var rgb = this.rgb().color;
      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
      return yiq < 128;
    },
    isLight: function() {
      return !this.isDark();
    },
    negate: function() {
      var rgb = this.rgb();
      for (var i = 0;i < 3; i++) {
        rgb.color[i] = 255 - rgb.color[i];
      }
      return rgb;
    },
    lighten: function(ratio) {
      var hsl = this.hsl();
      hsl.color[2] += hsl.color[2] * ratio;
      return hsl;
    },
    darken: function(ratio) {
      var hsl = this.hsl();
      hsl.color[2] -= hsl.color[2] * ratio;
      return hsl;
    },
    saturate: function(ratio) {
      var hsl = this.hsl();
      hsl.color[1] += hsl.color[1] * ratio;
      return hsl;
    },
    desaturate: function(ratio) {
      var hsl = this.hsl();
      hsl.color[1] -= hsl.color[1] * ratio;
      return hsl;
    },
    whiten: function(ratio) {
      var hwb = this.hwb();
      hwb.color[1] += hwb.color[1] * ratio;
      return hwb;
    },
    blacken: function(ratio) {
      var hwb = this.hwb();
      hwb.color[2] += hwb.color[2] * ratio;
      return hwb;
    },
    grayscale: function() {
      var rgb = this.rgb().color;
      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
      return Color.rgb(val, val, val);
    },
    fade: function(ratio) {
      return this.alpha(this.valpha - this.valpha * ratio);
    },
    opaquer: function(ratio) {
      return this.alpha(this.valpha + this.valpha * ratio);
    },
    rotate: function(degrees) {
      var hsl = this.hsl();
      var hue = hsl.color[0];
      hue = (hue + degrees) % 360;
      hue = hue < 0 ? 360 + hue : hue;
      hsl.color[0] = hue;
      return hsl;
    },
    mix: function(mixinColor, weight) {
      if (!mixinColor || !mixinColor.rgb) {
        throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof mixinColor);
      }
      var color1 = mixinColor.rgb();
      var color2 = this.rgb();
      var p3 = weight === undefined ? 0.5 : weight;
      var w3 = 2 * p3 - 1;
      var a3 = color1.alpha() - color2.alpha();
      var w1 = ((w3 * a3 === -1 ? w3 : (w3 + a3) / (1 + w3 * a3)) + 1) / 2;
      var w22 = 1 - w1;
      return Color.rgb(w1 * color1.red() + w22 * color2.red(), w1 * color1.green() + w22 * color2.green(), w1 * color1.blue() + w22 * color2.blue(), color1.alpha() * p3 + color2.alpha() * (1 - p3));
    }
  };
  Object.keys(convert).forEach(function(model) {
    if (skippedModels.indexOf(model) !== -1) {
      return;
    }
    var channels = convert[model].channels;
    Color.prototype[model] = function() {
      if (this.model === model) {
        return new Color(this);
      }
      if (arguments.length) {
        return new Color(arguments, model);
      }
      var newAlpha = typeof arguments[channels] === "number" ? channels : this.valpha;
      return new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);
    };
    Color[model] = function(color) {
      if (typeof color === "number") {
        color = zeroArray(_slice.call(arguments), channels);
      }
      return new Color(color, model);
    };
  });
  function roundTo(num, places) {
    return Number(num.toFixed(places));
  }
  function roundToPlace(places) {
    return function(num) {
      return roundTo(num, places);
    };
  }
  function getset(model, channel, modifier) {
    model = Array.isArray(model) ? model : [model];
    model.forEach(function(m3) {
      (limiters[m3] || (limiters[m3] = []))[channel] = modifier;
    });
    model = model[0];
    return function(val) {
      var result;
      if (arguments.length) {
        if (modifier) {
          val = modifier(val);
        }
        result = this[model]();
        result.color[channel] = val;
        return result;
      }
      result = this[model]().color[channel];
      if (modifier) {
        result = modifier(result);
      }
      return result;
    };
  }
  function maxfn(max) {
    return function(v3) {
      return Math.max(0, Math.min(max, v3));
    };
  }
  function assertArray(val) {
    return Array.isArray(val) ? val : [val];
  }
  function zeroArray(arr, length) {
    for (var i = 0;i < length; i++) {
      if (typeof arr[i] !== "number") {
        arr[i] = 0;
      }
    }
    return arr;
  }
  module.exports = Color;
});

// node_modules/text-hex/index.js
var require_text_hex = __commonJS((exports, module) => {
  module.exports = function hex(str) {
    for (var i = 0, hash = 0;i < str.length; hash = str.charCodeAt(i++) + ((hash << 5) - hash))
      ;
    var color = Math.floor(Math.abs(Math.sin(hash) * 1e4 % 1 * 16777216)).toString(16);
    return "#" + Array(6 - color.length + 1).join("0") + color;
  };
});

// node_modules/colorspace/index.js
var require_colorspace = __commonJS((exports, module) => {
  var color = require_color();
  var hex = require_text_hex();
  module.exports = function colorspace(namespace, delimiter) {
    var split = namespace.split(delimiter || ":");
    var base = hex(split[0]);
    if (!split.length)
      return base;
    for (var i = 0, l3 = split.length - 1;i < l3; i++) {
      base = color(base).mix(color(hex(split[i + 1]))).saturate(1).hex();
    }
    return base;
  };
});

// node_modules/@dabh/diagnostics/modifiers/namespace.js
var require_namespace = __commonJS((exports, module) => {
  var colorspace = require_colorspace();
  module.exports = function colorNamespace(args, options) {
    var namespace = options.namespace;
    if (options.colors === false) {
      args[0] = namespace + ": " + args[0];
      return args;
    }
    var color = colorspace(namespace);
    args[0] = "%c" + namespace + ":%c " + args[0];
    args.splice(1, 0, "color:" + color, "color:inherit");
    return args;
  };
});

// node_modules/enabled/index.js
var require_enabled = __commonJS((exports, module) => {
  module.exports = function enabled(name, variable) {
    if (!variable)
      return false;
    var variables = variable.split(/[\s,]+/), i = 0;
    for (;i < variables.length; i++) {
      variable = variables[i].replace("*", ".*?");
      if (variable.charAt(0) === "-") {
        if (new RegExp("^" + variable.substr(1) + "$").test(name)) {
          return false;
        }
        continue;
      }
      if (new RegExp("^" + variable + "$").test(name)) {
        return true;
      }
    }
    return false;
  };
});

// node_modules/@dabh/diagnostics/adapters/index.js
var require_adapters = __commonJS((exports, module) => {
  var enabled = require_enabled();
  module.exports = function create(fn) {
    return function adapter(namespace) {
      try {
        return enabled(namespace, fn());
      } catch (e) {
      }
      return false;
    };
  };
});

// node_modules/@dabh/diagnostics/adapters/localstorage.js
var require_localstorage = __commonJS((exports, module) => {
  var adapter = require_adapters();
  module.exports = adapter(function storage() {
    return localStorage.getItem("debug") || localStorage.getItem("diagnostics");
  });
});

// node_modules/@dabh/diagnostics/adapters/hash.js
var require_hash = __commonJS((exports, module) => {
  var adapter = require_adapters();
  module.exports = adapter(function hash() {
    return /(debug|diagnostics)=([^&]+)/i.exec(window.location.hash)[2];
  });
});

// node_modules/@dabh/diagnostics/logger/console.js
var require_console2 = __commonJS((exports, module) => {
  module.exports = function(meta, messages) {
    try {
      Function.prototype.apply.call(console.log, console, messages);
    } catch (e) {
    }
  };
});

// node_modules/@dabh/diagnostics/browser/development.js
var require_development = __commonJS((exports, module) => {
  var create = require_diagnostics();
  var diagnostics = create(function dev(namespace, options) {
    options = options || {};
    options.namespace = namespace;
    options.prod = false;
    options.dev = true;
    if (!dev.enabled(namespace) && !(options.force || dev.force)) {
      return dev.nope(options);
    }
    return dev.yep(options);
  });
  diagnostics.modify(require_namespace());
  diagnostics.use(require_localstorage());
  diagnostics.use(require_hash());
  diagnostics.set(require_console2());
  module.exports = diagnostics;
});

// node_modules/@dabh/diagnostics/browser/index.js
var require_browser4 = __commonJS((exports, module) => {
  if (false) {
  } else {
    module.exports = require_development();
  }
});

// node:string_decoder
var exports_string_decoder = {};
__export(exports_string_decoder, {
  default: () => export_default2,
  StringDecoder: () => export_StringDecoder
});
var Tt2, Z2, Nt, St, Rt, _t, R3 = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), Lt = (e, t, r, i) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let n of St(t))
      !_t.call(e, n) && n !== r && Z2(e, n, { get: () => t[n], enumerable: !(i = Nt(t, n)) || i.enumerable });
  return e;
}, kt = (e, t, r) => (r = e != null ? Tt2(Rt(e)) : {}, Lt(t || !e || !e.__esModule ? Z2(r, "default", { value: e, enumerable: true }) : r, e)), tt2, rt2, Bt, mt2, At2, Ut, export_StringDecoder, export_default2;
var init_string_decoder = __esm(() => {
  Tt2 = Object.create;
  Z2 = Object.defineProperty;
  Nt = Object.getOwnPropertyDescriptor;
  St = Object.getOwnPropertyNames;
  Rt = Object.getPrototypeOf;
  _t = Object.prototype.hasOwnProperty;
  tt2 = R3((k3) => {
    k3.byteLength = Mt;
    k3.toByteArray = Pt;
    k3.fromByteArray = Gt;
    var d3 = [], w3 = [], Dt = typeof Uint8Array < "u" ? Uint8Array : Array, O4 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (I3 = 0, Q2 = O4.length;I3 < Q2; ++I3)
      d3[I3] = O4[I3], w3[O4.charCodeAt(I3)] = I3;
    var I3, Q2;
    w3[45] = 62;
    w3[95] = 63;
    function v3(e) {
      var t = e.length;
      if (t % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var r = e.indexOf("=");
      r === -1 && (r = t);
      var i = r === t ? 0 : 4 - r % 4;
      return [r, i];
    }
    function Mt(e) {
      var t = v3(e), r = t[0], i = t[1];
      return (r + i) * 3 / 4 - i;
    }
    function $t(e, t, r) {
      return (t + r) * 3 / 4 - r;
    }
    function Pt(e) {
      var t, r = v3(e), i = r[0], n = r[1], o2 = new Dt($t(e, i, n)), u3 = 0, s2 = n > 0 ? i - 4 : i, f2;
      for (f2 = 0;f2 < s2; f2 += 4)
        t = w3[e.charCodeAt(f2)] << 18 | w3[e.charCodeAt(f2 + 1)] << 12 | w3[e.charCodeAt(f2 + 2)] << 6 | w3[e.charCodeAt(f2 + 3)], o2[u3++] = t >> 16 & 255, o2[u3++] = t >> 8 & 255, o2[u3++] = t & 255;
      return n === 2 && (t = w3[e.charCodeAt(f2)] << 2 | w3[e.charCodeAt(f2 + 1)] >> 4, o2[u3++] = t & 255), n === 1 && (t = w3[e.charCodeAt(f2)] << 10 | w3[e.charCodeAt(f2 + 1)] << 4 | w3[e.charCodeAt(f2 + 2)] >> 2, o2[u3++] = t >> 8 & 255, o2[u3++] = t & 255), o2;
    }
    function Ot(e) {
      return d3[e >> 18 & 63] + d3[e >> 12 & 63] + d3[e >> 6 & 63] + d3[e & 63];
    }
    function qt(e, t, r) {
      for (var i, n = [], o2 = t;o2 < r; o2 += 3)
        i = (e[o2] << 16 & 16711680) + (e[o2 + 1] << 8 & 65280) + (e[o2 + 2] & 255), n.push(Ot(i));
      return n.join("");
    }
    function Gt(e) {
      for (var t, r = e.length, i = r % 3, n = [], o2 = 16383, u3 = 0, s2 = r - i;u3 < s2; u3 += o2)
        n.push(qt(e, u3, u3 + o2 > s2 ? s2 : u3 + o2));
      return i === 1 ? (t = e[r - 1], n.push(d3[t >> 2] + d3[t << 4 & 63] + "==")) : i === 2 && (t = (e[r - 2] << 8) + e[r - 1], n.push(d3[t >> 10] + d3[t >> 4 & 63] + d3[t << 2 & 63] + "=")), n.join("");
    }
  });
  rt2 = R3((q2) => {
    q2.read = function(e, t, r, i, n) {
      var o2, u3, s2 = n * 8 - i - 1, f2 = (1 << s2) - 1, l3 = f2 >> 1, a3 = -7, c2 = r ? n - 1 : 0, U3 = r ? -1 : 1, x5 = e[t + c2];
      for (c2 += U3, o2 = x5 & (1 << -a3) - 1, x5 >>= -a3, a3 += s2;a3 > 0; o2 = o2 * 256 + e[t + c2], c2 += U3, a3 -= 8)
        ;
      for (u3 = o2 & (1 << -a3) - 1, o2 >>= -a3, a3 += i;a3 > 0; u3 = u3 * 256 + e[t + c2], c2 += U3, a3 -= 8)
        ;
      if (o2 === 0)
        o2 = 1 - l3;
      else {
        if (o2 === f2)
          return u3 ? NaN : (x5 ? -1 : 1) * (1 / 0);
        u3 = u3 + Math.pow(2, i), o2 = o2 - l3;
      }
      return (x5 ? -1 : 1) * u3 * Math.pow(2, o2 - i);
    };
    q2.write = function(e, t, r, i, n, o2) {
      var u3, s2, f2, l3 = o2 * 8 - n - 1, a3 = (1 << l3) - 1, c2 = a3 >> 1, U3 = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, x5 = i ? 0 : o2 - 1, P4 = i ? 1 : -1, Ct = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0;
      for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s2 = isNaN(t) ? 1 : 0, u3 = a3) : (u3 = Math.floor(Math.log(t) / Math.LN2), t * (f2 = Math.pow(2, -u3)) < 1 && (u3--, f2 *= 2), u3 + c2 >= 1 ? t += U3 / f2 : t += U3 * Math.pow(2, 1 - c2), t * f2 >= 2 && (u3++, f2 /= 2), u3 + c2 >= a3 ? (s2 = 0, u3 = a3) : u3 + c2 >= 1 ? (s2 = (t * f2 - 1) * Math.pow(2, n), u3 = u3 + c2) : (s2 = t * Math.pow(2, c2 - 1) * Math.pow(2, n), u3 = 0));n >= 8; e[r + x5] = s2 & 255, x5 += P4, s2 /= 256, n -= 8)
        ;
      for (u3 = u3 << n | s2, l3 += n;l3 > 0; e[r + x5] = u3 & 255, x5 += P4, u3 /= 256, l3 -= 8)
        ;
      e[r + x5 - P4] |= Ct * 128;
    };
  });
  Bt = R3((S2) => {
    var G2 = tt2(), T2 = rt2(), et = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    S2.Buffer = h4;
    S2.SlowBuffer = Vt;
    S2.INSPECT_MAX_BYTES = 50;
    var D3 = 2147483647;
    S2.kMaxLength = D3;
    h4.TYPED_ARRAY_SUPPORT = Wt();
    !h4.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function Wt() {
      try {
        let e = new Uint8Array(1), t = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), e.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(h4.prototype, "parent", { enumerable: true, get: function() {
      if (!!h4.isBuffer(this))
        return this.buffer;
    } });
    Object.defineProperty(h4.prototype, "offset", { enumerable: true, get: function() {
      if (!!h4.isBuffer(this))
        return this.byteOffset;
    } });
    function E5(e) {
      if (e > D3)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
      let t = new Uint8Array(e);
      return Object.setPrototypeOf(t, h4.prototype), t;
    }
    function h4(e, t, r) {
      if (typeof e == "number") {
        if (typeof t == "string")
          throw new TypeError('The "string" argument must be of type string. Received type number');
        return b4(e);
      }
      return ut2(e, t, r);
    }
    h4.poolSize = 8192;
    function ut2(e, t, r) {
      if (typeof e == "string")
        return jt(e, t);
      if (ArrayBuffer.isView(e))
        return bt2(e);
      if (e == null)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
      if (B3(e, ArrayBuffer) || e && B3(e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (B3(e, SharedArrayBuffer) || e && B3(e.buffer, SharedArrayBuffer)))
        return Y3(e, t, r);
      if (typeof e == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      let i = e.valueOf && e.valueOf();
      if (i != null && i !== e)
        return h4.from(i, t, r);
      let n = Ht(e);
      if (n)
        return n;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] == "function")
        return h4.from(e[Symbol.toPrimitive]("string"), t, r);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
    }
    h4.from = function(e, t, r) {
      return ut2(e, t, r);
    };
    Object.setPrototypeOf(h4.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(h4, Uint8Array);
    function ht2(e) {
      if (typeof e != "number")
        throw new TypeError('"size" argument must be of type number');
      if (e < 0)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
    }
    function Yt(e, t, r) {
      return ht2(e), e <= 0 ? E5(e) : t !== undefined ? typeof r == "string" ? E5(e).fill(t, r) : E5(e).fill(t) : E5(e);
    }
    h4.alloc = function(e, t, r) {
      return Yt(e, t, r);
    };
    function b4(e) {
      return ht2(e), E5(e < 0 ? 0 : H3(e) | 0);
    }
    h4.allocUnsafe = function(e) {
      return b4(e);
    };
    h4.allocUnsafeSlow = function(e) {
      return b4(e);
    };
    function jt(e, t) {
      if ((typeof t != "string" || t === "") && (t = "utf8"), !h4.isEncoding(t))
        throw new TypeError("Unknown encoding: " + t);
      let r = st3(e, t) | 0, i = E5(r), n = i.write(e, t);
      return n !== r && (i = i.slice(0, n)), i;
    }
    function W(e) {
      let t = e.length < 0 ? 0 : H3(e.length) | 0, r = E5(t);
      for (let i = 0;i < t; i += 1)
        r[i] = e[i] & 255;
      return r;
    }
    function bt2(e) {
      if (B3(e, Uint8Array)) {
        let t = new Uint8Array(e);
        return Y3(t.buffer, t.byteOffset, t.byteLength);
      }
      return W(e);
    }
    function Y3(e, t, r) {
      if (t < 0 || e.byteLength < t)
        throw new RangeError('"offset" is outside of buffer bounds');
      if (e.byteLength < t + (r || 0))
        throw new RangeError('"length" is outside of buffer bounds');
      let i;
      return t === undefined && r === undefined ? i = new Uint8Array(e) : r === undefined ? i = new Uint8Array(e, t) : i = new Uint8Array(e, t, r), Object.setPrototypeOf(i, h4.prototype), i;
    }
    function Ht(e) {
      if (h4.isBuffer(e)) {
        let t = H3(e.length) | 0, r = E5(t);
        return r.length === 0 || e.copy(r, 0, 0, t), r;
      }
      if (e.length !== undefined)
        return typeof e.length != "number" || X4(e.length) ? E5(0) : W(e);
      if (e.type === "Buffer" && Array.isArray(e.data))
        return W(e.data);
    }
    function H3(e) {
      if (e >= D3)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + D3.toString(16) + " bytes");
      return e | 0;
    }
    function Vt(e) {
      return +e != e && (e = 0), h4.alloc(+e);
    }
    h4.isBuffer = function(t) {
      return t != null && t._isBuffer === true && t !== h4.prototype;
    };
    h4.compare = function(t, r) {
      if (B3(t, Uint8Array) && (t = h4.from(t, t.offset, t.byteLength)), B3(r, Uint8Array) && (r = h4.from(r, r.offset, r.byteLength)), !h4.isBuffer(t) || !h4.isBuffer(r))
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (t === r)
        return 0;
      let i = t.length, n = r.length;
      for (let o2 = 0, u3 = Math.min(i, n);o2 < u3; ++o2)
        if (t[o2] !== r[o2]) {
          i = t[o2], n = r[o2];
          break;
        }
      return i < n ? -1 : n < i ? 1 : 0;
    };
    h4.isEncoding = function(t) {
      switch (String(t).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    h4.concat = function(t, r) {
      if (!Array.isArray(t))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (t.length === 0)
        return h4.alloc(0);
      let i;
      if (r === undefined)
        for (r = 0, i = 0;i < t.length; ++i)
          r += t[i].length;
      let n = h4.allocUnsafe(r), o2 = 0;
      for (i = 0;i < t.length; ++i) {
        let u3 = t[i];
        if (B3(u3, Uint8Array))
          o2 + u3.length > n.length ? (h4.isBuffer(u3) || (u3 = h4.from(u3)), u3.copy(n, o2)) : Uint8Array.prototype.set.call(n, u3, o2);
        else if (h4.isBuffer(u3))
          u3.copy(n, o2);
        else
          throw new TypeError('"list" argument must be an Array of Buffers');
        o2 += u3.length;
      }
      return n;
    };
    function st3(e, t) {
      if (h4.isBuffer(e))
        return e.length;
      if (ArrayBuffer.isView(e) || B3(e, ArrayBuffer))
        return e.byteLength;
      if (typeof e != "string")
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
      let r = e.length, i = arguments.length > 2 && arguments[2] === true;
      if (!i && r === 0)
        return 0;
      let n = false;
      for (;; )
        switch (t) {
          case "ascii":
          case "latin1":
          case "binary":
            return r;
          case "utf8":
          case "utf-8":
            return j4(e).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return r * 2;
          case "hex":
            return r >>> 1;
          case "base64":
            return dt2(e).length;
          default:
            if (n)
              return i ? -1 : j4(e).length;
            t = ("" + t).toLowerCase(), n = true;
        }
    }
    h4.byteLength = st3;
    function Xt(e, t, r) {
      let i = false;
      if ((t === undefined || t < 0) && (t = 0), t > this.length || ((r === undefined || r > this.length) && (r = this.length), r <= 0) || (r >>>= 0, t >>>= 0, r <= t))
        return "";
      for (e || (e = "utf8");; )
        switch (e) {
          case "hex":
            return ir(this, t, r);
          case "utf8":
          case "utf-8":
            return ct3(this, t, r);
          case "ascii":
            return rr2(this, t, r);
          case "latin1":
          case "binary":
            return er(this, t, r);
          case "base64":
            return vt2(this, t, r);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return nr(this, t, r);
          default:
            if (i)
              throw new TypeError("Unknown encoding: " + e);
            e = (e + "").toLowerCase(), i = true;
        }
    }
    h4.prototype._isBuffer = true;
    function F2(e, t, r) {
      let i = e[t];
      e[t] = e[r], e[r] = i;
    }
    h4.prototype.swap16 = function() {
      let t = this.length;
      if (t % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let r = 0;r < t; r += 2)
        F2(this, r, r + 1);
      return this;
    };
    h4.prototype.swap32 = function() {
      let t = this.length;
      if (t % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let r = 0;r < t; r += 4)
        F2(this, r, r + 3), F2(this, r + 1, r + 2);
      return this;
    };
    h4.prototype.swap64 = function() {
      let t = this.length;
      if (t % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let r = 0;r < t; r += 8)
        F2(this, r, r + 7), F2(this, r + 1, r + 6), F2(this, r + 2, r + 5), F2(this, r + 3, r + 4);
      return this;
    };
    h4.prototype.toString = function() {
      let t = this.length;
      return t === 0 ? "" : arguments.length === 0 ? ct3(this, 0, t) : Xt.apply(this, arguments);
    };
    h4.prototype.toLocaleString = h4.prototype.toString;
    h4.prototype.equals = function(t) {
      if (!h4.isBuffer(t))
        throw new TypeError("Argument must be a Buffer");
      return this === t ? true : h4.compare(this, t) === 0;
    };
    h4.prototype.inspect = function() {
      let t = "", r = S2.INSPECT_MAX_BYTES;
      return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
    };
    et && (h4.prototype[et] = h4.prototype.inspect);
    h4.prototype.compare = function(t, r, i, n, o2) {
      if (B3(t, Uint8Array) && (t = h4.from(t, t.offset, t.byteLength)), !h4.isBuffer(t))
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);
      if (r === undefined && (r = 0), i === undefined && (i = t ? t.length : 0), n === undefined && (n = 0), o2 === undefined && (o2 = this.length), r < 0 || i > t.length || n < 0 || o2 > this.length)
        throw new RangeError("out of range index");
      if (n >= o2 && r >= i)
        return 0;
      if (n >= o2)
        return -1;
      if (r >= i)
        return 1;
      if (r >>>= 0, i >>>= 0, n >>>= 0, o2 >>>= 0, this === t)
        return 0;
      let u3 = o2 - n, s2 = i - r, f2 = Math.min(u3, s2), l3 = this.slice(n, o2), a3 = t.slice(r, i);
      for (let c2 = 0;c2 < f2; ++c2)
        if (l3[c2] !== a3[c2]) {
          u3 = l3[c2], s2 = a3[c2];
          break;
        }
      return u3 < s2 ? -1 : s2 < u3 ? 1 : 0;
    };
    function ft2(e, t, r, i, n) {
      if (e.length === 0)
        return -1;
      if (typeof r == "string" ? (i = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, X4(r) && (r = n ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
        if (n)
          return -1;
        r = e.length - 1;
      } else if (r < 0)
        if (n)
          r = 0;
        else
          return -1;
      if (typeof t == "string" && (t = h4.from(t, i)), h4.isBuffer(t))
        return t.length === 0 ? -1 : it2(e, t, r, i, n);
      if (typeof t == "number")
        return t = t & 255, typeof Uint8Array.prototype.indexOf == "function" ? n ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : it2(e, [t], r, i, n);
      throw new TypeError("val must be string, number or Buffer");
    }
    function it2(e, t, r, i, n) {
      let o2 = 1, u3 = e.length, s2 = t.length;
      if (i !== undefined && (i = String(i).toLowerCase(), i === "ucs2" || i === "ucs-2" || i === "utf16le" || i === "utf-16le")) {
        if (e.length < 2 || t.length < 2)
          return -1;
        o2 = 2, u3 /= 2, s2 /= 2, r /= 2;
      }
      function f2(a3, c2) {
        return o2 === 1 ? a3[c2] : a3.readUInt16BE(c2 * o2);
      }
      let l3;
      if (n) {
        let a3 = -1;
        for (l3 = r;l3 < u3; l3++)
          if (f2(e, l3) === f2(t, a3 === -1 ? 0 : l3 - a3)) {
            if (a3 === -1 && (a3 = l3), l3 - a3 + 1 === s2)
              return a3 * o2;
          } else
            a3 !== -1 && (l3 -= l3 - a3), a3 = -1;
      } else
        for (r + s2 > u3 && (r = u3 - s2), l3 = r;l3 >= 0; l3--) {
          let a3 = true;
          for (let c2 = 0;c2 < s2; c2++)
            if (f2(e, l3 + c2) !== f2(t, c2)) {
              a3 = false;
              break;
            }
          if (a3)
            return l3;
        }
      return -1;
    }
    h4.prototype.includes = function(t, r, i) {
      return this.indexOf(t, r, i) !== -1;
    };
    h4.prototype.indexOf = function(t, r, i) {
      return ft2(this, t, r, i, true);
    };
    h4.prototype.lastIndexOf = function(t, r, i) {
      return ft2(this, t, r, i, false);
    };
    function Jt(e, t, r, i) {
      r = Number(r) || 0;
      let n = e.length - r;
      i ? (i = Number(i), i > n && (i = n)) : i = n;
      let o2 = t.length;
      i > o2 / 2 && (i = o2 / 2);
      let u3;
      for (u3 = 0;u3 < i; ++u3) {
        let s2 = parseInt(t.substr(u3 * 2, 2), 16);
        if (X4(s2))
          return u3;
        e[r + u3] = s2;
      }
      return u3;
    }
    function zt(e, t, r, i) {
      return M3(j4(t, e.length - r), e, r, i);
    }
    function Kt(e, t, r, i) {
      return M3(sr(t), e, r, i);
    }
    function Zt(e, t, r, i) {
      return M3(dt2(t), e, r, i);
    }
    function Qt(e, t, r, i) {
      return M3(fr(t, e.length - r), e, r, i);
    }
    h4.prototype.write = function(t, r, i, n) {
      if (r === undefined)
        n = "utf8", i = this.length, r = 0;
      else if (i === undefined && typeof r == "string")
        n = r, i = this.length, r = 0;
      else if (isFinite(r))
        r = r >>> 0, isFinite(i) ? (i = i >>> 0, n === undefined && (n = "utf8")) : (n = i, i = undefined);
      else
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      let o2 = this.length - r;
      if ((i === undefined || i > o2) && (i = o2), t.length > 0 && (i < 0 || r < 0) || r > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      n || (n = "utf8");
      let u3 = false;
      for (;; )
        switch (n) {
          case "hex":
            return Jt(this, t, r, i);
          case "utf8":
          case "utf-8":
            return zt(this, t, r, i);
          case "ascii":
          case "latin1":
          case "binary":
            return Kt(this, t, r, i);
          case "base64":
            return Zt(this, t, r, i);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Qt(this, t, r, i);
          default:
            if (u3)
              throw new TypeError("Unknown encoding: " + n);
            n = ("" + n).toLowerCase(), u3 = true;
        }
    };
    h4.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function vt2(e, t, r) {
      return t === 0 && r === e.length ? G2.fromByteArray(e) : G2.fromByteArray(e.slice(t, r));
    }
    function ct3(e, t, r) {
      r = Math.min(e.length, r);
      let i = [], n = t;
      for (;n < r; ) {
        let o2 = e[n], u3 = null, s2 = o2 > 239 ? 4 : o2 > 223 ? 3 : o2 > 191 ? 2 : 1;
        if (n + s2 <= r) {
          let f2, l3, a3, c2;
          switch (s2) {
            case 1:
              o2 < 128 && (u3 = o2);
              break;
            case 2:
              f2 = e[n + 1], (f2 & 192) === 128 && (c2 = (o2 & 31) << 6 | f2 & 63, c2 > 127 && (u3 = c2));
              break;
            case 3:
              f2 = e[n + 1], l3 = e[n + 2], (f2 & 192) === 128 && (l3 & 192) === 128 && (c2 = (o2 & 15) << 12 | (f2 & 63) << 6 | l3 & 63, c2 > 2047 && (c2 < 55296 || c2 > 57343) && (u3 = c2));
              break;
            case 4:
              f2 = e[n + 1], l3 = e[n + 2], a3 = e[n + 3], (f2 & 192) === 128 && (l3 & 192) === 128 && (a3 & 192) === 128 && (c2 = (o2 & 15) << 18 | (f2 & 63) << 12 | (l3 & 63) << 6 | a3 & 63, c2 > 65535 && c2 < 1114112 && (u3 = c2));
          }
        }
        u3 === null ? (u3 = 65533, s2 = 1) : u3 > 65535 && (u3 -= 65536, i.push(u3 >>> 10 & 1023 | 55296), u3 = 56320 | u3 & 1023), i.push(u3), n += s2;
      }
      return tr(i);
    }
    var nt3 = 4096;
    function tr(e) {
      let t = e.length;
      if (t <= nt3)
        return String.fromCharCode.apply(String, e);
      let r = "", i = 0;
      for (;i < t; )
        r += String.fromCharCode.apply(String, e.slice(i, i += nt3));
      return r;
    }
    function rr2(e, t, r) {
      let i = "";
      r = Math.min(e.length, r);
      for (let n = t;n < r; ++n)
        i += String.fromCharCode(e[n] & 127);
      return i;
    }
    function er(e, t, r) {
      let i = "";
      r = Math.min(e.length, r);
      for (let n = t;n < r; ++n)
        i += String.fromCharCode(e[n]);
      return i;
    }
    function ir(e, t, r) {
      let i = e.length;
      (!t || t < 0) && (t = 0), (!r || r < 0 || r > i) && (r = i);
      let n = "";
      for (let o2 = t;o2 < r; ++o2)
        n += cr[e[o2]];
      return n;
    }
    function nr(e, t, r) {
      let i = e.slice(t, r), n = "";
      for (let o2 = 0;o2 < i.length - 1; o2 += 2)
        n += String.fromCharCode(i[o2] + i[o2 + 1] * 256);
      return n;
    }
    h4.prototype.slice = function(t, r) {
      let i = this.length;
      t = ~~t, r = r === undefined ? i : ~~r, t < 0 ? (t += i, t < 0 && (t = 0)) : t > i && (t = i), r < 0 ? (r += i, r < 0 && (r = 0)) : r > i && (r = i), r < t && (r = t);
      let n = this.subarray(t, r);
      return Object.setPrototypeOf(n, h4.prototype), n;
    };
    function p3(e, t, r) {
      if (e % 1 !== 0 || e < 0)
        throw new RangeError("offset is not uint");
      if (e + t > r)
        throw new RangeError("Trying to access beyond buffer length");
    }
    h4.prototype.readUintLE = h4.prototype.readUIntLE = function(t, r, i) {
      t = t >>> 0, r = r >>> 0, i || p3(t, r, this.length);
      let n = this[t], o2 = 1, u3 = 0;
      for (;++u3 < r && (o2 *= 256); )
        n += this[t + u3] * o2;
      return n;
    };
    h4.prototype.readUintBE = h4.prototype.readUIntBE = function(t, r, i) {
      t = t >>> 0, r = r >>> 0, i || p3(t, r, this.length);
      let n = this[t + --r], o2 = 1;
      for (;r > 0 && (o2 *= 256); )
        n += this[t + --r] * o2;
      return n;
    };
    h4.prototype.readUint8 = h4.prototype.readUInt8 = function(t, r) {
      return t = t >>> 0, r || p3(t, 1, this.length), this[t];
    };
    h4.prototype.readUint16LE = h4.prototype.readUInt16LE = function(t, r) {
      return t = t >>> 0, r || p3(t, 2, this.length), this[t] | this[t + 1] << 8;
    };
    h4.prototype.readUint16BE = h4.prototype.readUInt16BE = function(t, r) {
      return t = t >>> 0, r || p3(t, 2, this.length), this[t] << 8 | this[t + 1];
    };
    h4.prototype.readUint32LE = h4.prototype.readUInt32LE = function(t, r) {
      return t = t >>> 0, r || p3(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + this[t + 3] * 16777216;
    };
    h4.prototype.readUint32BE = h4.prototype.readUInt32BE = function(t, r) {
      return t = t >>> 0, r || p3(t, 4, this.length), this[t] * 16777216 + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
    };
    h4.prototype.readBigUInt64LE = m3(function(t) {
      t = t >>> 0, N5(t, "offset");
      let r = this[t], i = this[t + 7];
      (r === undefined || i === undefined) && _4(t, this.length - 8);
      let n = r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24, o2 = this[++t] + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + i * 2 ** 24;
      return BigInt(n) + (BigInt(o2) << BigInt(32));
    });
    h4.prototype.readBigUInt64BE = m3(function(t) {
      t = t >>> 0, N5(t, "offset");
      let r = this[t], i = this[t + 7];
      (r === undefined || i === undefined) && _4(t, this.length - 8);
      let n = r * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t], o2 = this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + i;
      return (BigInt(n) << BigInt(32)) + BigInt(o2);
    });
    h4.prototype.readIntLE = function(t, r, i) {
      t = t >>> 0, r = r >>> 0, i || p3(t, r, this.length);
      let n = this[t], o2 = 1, u3 = 0;
      for (;++u3 < r && (o2 *= 256); )
        n += this[t + u3] * o2;
      return o2 *= 128, n >= o2 && (n -= Math.pow(2, 8 * r)), n;
    };
    h4.prototype.readIntBE = function(t, r, i) {
      t = t >>> 0, r = r >>> 0, i || p3(t, r, this.length);
      let n = r, o2 = 1, u3 = this[t + --n];
      for (;n > 0 && (o2 *= 256); )
        u3 += this[t + --n] * o2;
      return o2 *= 128, u3 >= o2 && (u3 -= Math.pow(2, 8 * r)), u3;
    };
    h4.prototype.readInt8 = function(t, r) {
      return t = t >>> 0, r || p3(t, 1, this.length), this[t] & 128 ? (255 - this[t] + 1) * -1 : this[t];
    };
    h4.prototype.readInt16LE = function(t, r) {
      t = t >>> 0, r || p3(t, 2, this.length);
      let i = this[t] | this[t + 1] << 8;
      return i & 32768 ? i | 4294901760 : i;
    };
    h4.prototype.readInt16BE = function(t, r) {
      t = t >>> 0, r || p3(t, 2, this.length);
      let i = this[t + 1] | this[t] << 8;
      return i & 32768 ? i | 4294901760 : i;
    };
    h4.prototype.readInt32LE = function(t, r) {
      return t = t >>> 0, r || p3(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
    };
    h4.prototype.readInt32BE = function(t, r) {
      return t = t >>> 0, r || p3(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
    };
    h4.prototype.readBigInt64LE = m3(function(t) {
      t = t >>> 0, N5(t, "offset");
      let r = this[t], i = this[t + 7];
      (r === undefined || i === undefined) && _4(t, this.length - 8);
      let n = this[t + 4] + this[t + 5] * 2 ** 8 + this[t + 6] * 2 ** 16 + (i << 24);
      return (BigInt(n) << BigInt(32)) + BigInt(r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24);
    });
    h4.prototype.readBigInt64BE = m3(function(t) {
      t = t >>> 0, N5(t, "offset");
      let r = this[t], i = this[t + 7];
      (r === undefined || i === undefined) && _4(t, this.length - 8);
      let n = (r << 24) + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t];
      return (BigInt(n) << BigInt(32)) + BigInt(this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + i);
    });
    h4.prototype.readFloatLE = function(t, r) {
      return t = t >>> 0, r || p3(t, 4, this.length), T2.read(this, t, true, 23, 4);
    };
    h4.prototype.readFloatBE = function(t, r) {
      return t = t >>> 0, r || p3(t, 4, this.length), T2.read(this, t, false, 23, 4);
    };
    h4.prototype.readDoubleLE = function(t, r) {
      return t = t >>> 0, r || p3(t, 8, this.length), T2.read(this, t, true, 52, 8);
    };
    h4.prototype.readDoubleBE = function(t, r) {
      return t = t >>> 0, r || p3(t, 8, this.length), T2.read(this, t, false, 52, 8);
    };
    function y4(e, t, r, i, n, o2) {
      if (!h4.isBuffer(e))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (t > n || t < o2)
        throw new RangeError('"value" argument is out of bounds');
      if (r + i > e.length)
        throw new RangeError("Index out of range");
    }
    h4.prototype.writeUintLE = h4.prototype.writeUIntLE = function(t, r, i, n) {
      if (t = +t, r = r >>> 0, i = i >>> 0, !n) {
        let s2 = Math.pow(2, 8 * i) - 1;
        y4(this, t, r, i, s2, 0);
      }
      let o2 = 1, u3 = 0;
      for (this[r] = t & 255;++u3 < i && (o2 *= 256); )
        this[r + u3] = t / o2 & 255;
      return r + i;
    };
    h4.prototype.writeUintBE = h4.prototype.writeUIntBE = function(t, r, i, n) {
      if (t = +t, r = r >>> 0, i = i >>> 0, !n) {
        let s2 = Math.pow(2, 8 * i) - 1;
        y4(this, t, r, i, s2, 0);
      }
      let o2 = i - 1, u3 = 1;
      for (this[r + o2] = t & 255;--o2 >= 0 && (u3 *= 256); )
        this[r + o2] = t / u3 & 255;
      return r + i;
    };
    h4.prototype.writeUint8 = h4.prototype.writeUInt8 = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 1, 255, 0), this[r] = t & 255, r + 1;
    };
    h4.prototype.writeUint16LE = h4.prototype.writeUInt16LE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 2, 65535, 0), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    h4.prototype.writeUint16BE = h4.prototype.writeUInt16BE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 2, 65535, 0), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    h4.prototype.writeUint32LE = h4.prototype.writeUInt32LE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 4, 4294967295, 0), this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = t & 255, r + 4;
    };
    h4.prototype.writeUint32BE = h4.prototype.writeUInt32BE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 4, 4294967295, 0), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    function at3(e, t, r, i, n) {
      xt(t, i, n, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2;
      let u3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r++] = u3, u3 = u3 >> 8, e[r++] = u3, u3 = u3 >> 8, e[r++] = u3, u3 = u3 >> 8, e[r++] = u3, r;
    }
    function lt3(e, t, r, i, n) {
      xt(t, i, n, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r + 7] = o2, o2 = o2 >> 8, e[r + 6] = o2, o2 = o2 >> 8, e[r + 5] = o2, o2 = o2 >> 8, e[r + 4] = o2;
      let u3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r + 3] = u3, u3 = u3 >> 8, e[r + 2] = u3, u3 = u3 >> 8, e[r + 1] = u3, u3 = u3 >> 8, e[r] = u3, r + 8;
    }
    h4.prototype.writeBigUInt64LE = m3(function(t, r = 0) {
      return at3(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    h4.prototype.writeBigUInt64BE = m3(function(t, r = 0) {
      return lt3(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    h4.prototype.writeIntLE = function(t, r, i, n) {
      if (t = +t, r = r >>> 0, !n) {
        let f2 = Math.pow(2, 8 * i - 1);
        y4(this, t, r, i, f2 - 1, -f2);
      }
      let o2 = 0, u3 = 1, s2 = 0;
      for (this[r] = t & 255;++o2 < i && (u3 *= 256); )
        t < 0 && s2 === 0 && this[r + o2 - 1] !== 0 && (s2 = 1), this[r + o2] = (t / u3 >> 0) - s2 & 255;
      return r + i;
    };
    h4.prototype.writeIntBE = function(t, r, i, n) {
      if (t = +t, r = r >>> 0, !n) {
        let f2 = Math.pow(2, 8 * i - 1);
        y4(this, t, r, i, f2 - 1, -f2);
      }
      let o2 = i - 1, u3 = 1, s2 = 0;
      for (this[r + o2] = t & 255;--o2 >= 0 && (u3 *= 256); )
        t < 0 && s2 === 0 && this[r + o2 + 1] !== 0 && (s2 = 1), this[r + o2] = (t / u3 >> 0) - s2 & 255;
      return r + i;
    };
    h4.prototype.writeInt8 = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[r] = t & 255, r + 1;
    };
    h4.prototype.writeInt16LE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 2, 32767, -32768), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    h4.prototype.writeInt16BE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 2, 32767, -32768), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    h4.prototype.writeInt32LE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 4, 2147483647, -2147483648), this[r] = t & 255, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24, r + 4;
    };
    h4.prototype.writeInt32BE = function(t, r, i) {
      return t = +t, r = r >>> 0, i || y4(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    h4.prototype.writeBigInt64LE = m3(function(t, r = 0) {
      return at3(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    h4.prototype.writeBigInt64BE = m3(function(t, r = 0) {
      return lt3(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function pt3(e, t, r, i, n, o2) {
      if (r + i > e.length)
        throw new RangeError("Index out of range");
      if (r < 0)
        throw new RangeError("Index out of range");
    }
    function yt2(e, t, r, i, n) {
      return t = +t, r = r >>> 0, n || pt3(e, t, r, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), T2.write(e, t, r, i, 23, 4), r + 4;
    }
    h4.prototype.writeFloatLE = function(t, r, i) {
      return yt2(this, t, r, true, i);
    };
    h4.prototype.writeFloatBE = function(t, r, i) {
      return yt2(this, t, r, false, i);
    };
    function wt(e, t, r, i, n) {
      return t = +t, r = r >>> 0, n || pt3(e, t, rwrite(e, t, r, i, 52, 8), r + 8;
    }
    h4.prototype.writeDoubleLE = function(t, r, i) {
      return wt(this, t, r, true, i);
    };
    h4.prototype.writeDoubleBE = function(t, r, i) {
      return wt(this, t, r, false, i);
    };
    h4.prototype.copy = function(t, r, i, n) {
      if (!h4.isBuffer(t))
        throw new TypeError("argument should be a Buffer");
      if (i || (i = 0), !n && n !== 0 && (n = this.length), r >= t.length && (r = t.length), r || (r = 0), n > 0 && n < i && (n = i), n === i || t.length === 0 || this.length === 0)
        return 0;
      if (r < 0)
        throw new RangeError("targetStart out of bounds");
      if (i < 0 || i >= this.length)
        throw new RangeError("Index out of range");
      if (n < 0)
        throw new RangeError("sourceEnd out of bounds");
      n > this.length && (n = this.length), t.length - r < n - i && (n = t.length - r + i);
      let o2 = n - i;
      return this === t && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(r, i, n) : Uint8Array.prototype.set.call(t, this.subarray(i, n), r), o2;
    };
    h4.prototype.fill = function(t, r, i, n) {
      if (typeof t == "string") {
        if (typeof r == "string" ? (n = r, r = 0, i = this.length) : typeof i == "string" && (n = i, i = this.length), n !== undefined && typeof n != "string")
          throw new TypeError("encoding must be a string");
        if (typeof n == "string" && !h4.isEncoding(n))
          throw new TypeError("Unknown encoding: " + n);
        if (t.length === 1) {
          let u3 = t.charCodeAt(0);
          (n === "utf8" && u3 < 128 || n === "latin1") && (t = u3);
        }
      } else
        typeof t == "number" ? t = t & 255 : typeof t == "boolean" && (t = Number(t));
      if (r < 0 || this.length < r || this.length < i)
        throw new RangeError("Out of range index");
      if (i <= r)
        return this;
      r = r >>> 0, i = i === undefined ? this.length : i >>> 0, t || (t = 0);
      let o2;
      if (typeof t == "number")
        for (o2 = r;o2 < i; ++o2)
          this[o2] = t;
      else {
        let u3 = h4.isBuffer(t) ? t : h4.from(t, n), s2 = u3.length;
        if (s2 === 0)
          throw new TypeError('The value "' + t + '" is invalid for argument "value"');
        for (o2 = 0;o2 < i - r; ++o2)
          this[o2 + r] = u3[o2 % s2];
      }
      return this;
    };
    var C2 = {};
    function V5(e, t, r) {
      C2[e] = class extends r {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: t.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e}]`, this.stack, delete this.name;
        }
        get code() {
          return e;
        }
        set code(n) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: n, writable: true });
        }
        toString() {
          return `${this.name} [${e}]: ${this.message}`;
        }
      };
    }
    V5("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
      return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError);
    V5("ERR_INVALID_ARG_TYPE", function(e, t) {
      return `The "${e}" argument must be of type number. Received type ${typeof t}`;
    }, TypeError);
    V5("ERR_OUT_OF_RANGE", function(e, t, r) {
      let i = `The value of "${e}" is out of range.`, n = r;
      return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? n = ot3(String(r)) : typeof r == "bigint" && (n = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (n = ot3(n)), n += "n"), i += ` It must be ${t}. Received ${n}`, i;
    }, RangeError);
    function ot3(e) {
      let t = "", r = e.length, i = e[0] === "-" ? 1 : 0;
      for (;r >= i + 4; r -= 3)
        t = `_${e.slice(r - 3, r)}${t}`;
      return `${e.slice(0, r)}${t}`;
    }
    function or(e, t, r) {
      N5(t, "offset"), (e[t] === undefined || e[t + r] === undefined) && _4(t, e.length - (r + 1));
    }
    function xt(e, t, r, i, n, o2) {
      if (e > r || e < t) {
        let u3 = typeof t == "bigint" ? "n" : "", s2;
        throw o2 > 3 ? t === 0 || t === BigInt(0) ? s2 = `>= 0${u3} and < 2${u3} ** ${(o2 + 1) * 8}${u3}` : s2 = `>= -(2${u3} ** ${(o2 + 1) * 8 - 1}${u3}) and < 2 ** ${(o2 + 1) * 8 - 1}${u3}` : s2 = `>= ${t}${u3} and <= ${r}${u3}`, new C2.ERR_OUT_OF_RANGE("value", s2, e);
      }
      or(i, n, o2);
    }
    function N5(e, t) {
      if (typeof e != "number")
        throw new C2.ERR_INVALID_ARG_TYPE(t, "number", e);
    }
    function _4(e, t, r) {
      throw Math.floor(e) !== e ? (N5(e, r), new C2.ERR_OUT_OF_RANGE(r || "offset", "an integer", e)) : t < 0 ? new C2.ERR_BUFFER_OUT_OF_BOUNDS : new C2.ERR_OUT_OF_RANGE(r || "offset", `>= ${r ? 1 : 0} and <= ${t}`, e);
    }
    var ur = /[^+/0-9A-Za-z-_]/g;
    function hr(e) {
      if (e = e.split("=")[0], e = e.trim().replace(ur, ""), e.length < 2)
        return "";
      for (;e.length % 4 !== 0; )
        e = e + "=";
      return e;
    }
    function j4(e, t) {
      t = t || 1 / 0;
      let r, i = e.length, n = null, o2 = [];
      for (let u3 = 0;u3 < i; ++u3) {
        if (r = e.charCodeAt(u3), r > 55295 && r < 57344) {
          if (!n) {
            if (r > 56319) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            } else if (u3 + 1 === i) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            }
            n = r;
            continue;
          }
          if (r < 56320) {
            (t -= 3) > -1 && o2.push(239, 191, 189), n = r;
            continue;
          }
          r = (n - 55296 << 10 | r - 56320) + 65536;
        } else
          n && (t -= 3) > -1 && o2.push(239, 191, 189);
        if (n = null, r < 128) {
          if ((t -= 1) < 0)
            break;
          o2.push(r);
        } else if (r < 2048) {
          if ((t -= 2) < 0)
            break;
          o2.push(r >> 6 | 192, r & 63 | 128);
        } else if (r < 65536) {
          if ((t -= 3) < 0)
            break;
          o2.push(r >> 12 | 224, r >> 6 & 63 | 128, r & 63 | 128);
        } else if (r < 1114112) {
          if ((t -= 4) < 0)
            break;
          o2.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, r & 63 | 128);
        } else
          throw new Error("Invalid code point");
      }
      return o2;
    }
    function sr(e) {
      let t = [];
      for (let r = 0;r < e.length; ++r)
        t.push(e.charCodeAt(r) & 255);
      return t;
    }
    function fr(e, t) {
      let r, i, n, o2 = [];
      for (let u3 = 0;u3 < e.length && !((t -= 2) < 0); ++u3)
        r = e.charCodeAt(u3), i = r >> 8, n = r % 256, o2.push(n), o2.push(i);
      return o2;
    }
    function dt2(e) {
      return G2.toByteArray(hr(e));
    }
    function M3(e, t, r, i) {
      let n;
      for (n = 0;n < i && !(n + r >= t.length || n >= e.length); ++n)
        t[n + r] = e[n];
      return n;
    }
    function B3(e, t) {
      return e instanceof t || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === t.name;
    }
    function X4(e) {
      return e !== e;
    }
    var cr = function() {
      let e = "0123456789abcdef", t = new Array(256);
      for (let r = 0;r < 16; ++r) {
        let i = r * 16;
        for (let n = 0;n < 16; ++n)
          t[i + n] = e[r] + e[n];
      }
      return t;
    }();
    function m3(e) {
      return typeof BigInt > "u" ? ar : e;
    }
    function ar() {
      throw new Error("BigInt not supported");
    }
  });
  mt2 = R3((J2, Et) => {
    var $3 = Bt(), g5 = $3.Buffer;
    function gt2(e, t) {
      for (var r in e)
        t[r] = e[r];
    }
    g5.from && g5.alloc && g5.allocUnsafe && g5.allocUnsafeSlow ? Et.exports = $3 : (gt2($3, J2), J2.Buffer = A3);
    function A3(e, t, r) {
      return g5(e, t, r);
    }
    A3.prototype = Object.create(g5.prototype);
    gt2(g5, A3);
    A3.from = function(e, t, r) {
      if (typeof e == "number")
        throw new TypeError("Argument must not be a number");
      return g5(e, t, r);
    };
    A3.alloc = function(e, t, r) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      var i = g5(e);
      return t !== undefined ? typeof r == "string" ? i.fill(t, r) : i.fill(t) : i.fill(0), i;
    };
    A3.allocUnsafe = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return g5(e);
    };
    A3.allocUnsafeSlow = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return $3.SlowBuffer(e);
    };
  });
  At2 = R3((Ft) => {
    var K3 = mt2().Buffer, It = K3.isEncoding || function(e) {
      switch (e = "" + e, e && e.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return true;
        default:
          return false;
      }
    };
    function lr(e) {
      if (!e)
        return "utf8";
      for (var t;; )
        switch (e) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return e;
          default:
            if (t)
              return;
            e = ("" + e).toLowerCase(), t = true;
        }
    }
    function pr(e) {
      var t = lr(e);
      if (typeof t != "string" && (K3.isEncoding === It || !It(e)))
        throw new Error("Unknown encoding: " + e);
      return t || e;
    }
    Ft.StringDecoder = L4;
    function L4(e) {
      this.encoding = pr(e);
      var t;
      switch (this.encoding) {
        case "utf16le":
          this.text = gr3, this.end = Er2, t = 4;
          break;
        case "utf8":
          this.fillLast = xr, t = 4;
          break;
        case "base64":
          this.text = mr2, this.end = Ir3, t = 3;
          break;
        default:
          this.write = Fr3, this.end = Ar2;
          return;
      }
      this.lastNeed = 0, this.lastTotal = 0, this.lastChar = K3.allocUnsafe(t);
    }
    L4.prototype.write = function(e) {
      if (e.length === 0)
        return "";
      var t, r;
      if (this.lastNeed) {
        if (t = this.fillLast(e), t === undefined)
          return "";
        r = this.lastNeed, this.lastNeed = 0;
      } else
        r = 0;
      return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || "";
    };
    L4.prototype.end = Br3;
    L4.prototype.text = dr2;
    L4.prototype.fillLast = function(e) {
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;
    };
    function z(e) {
      return e <= 127 ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : e >> 6 === 2 ? -1 : -2;
    }
    function yr(e, t, r) {
      var i = t.length - 1;
      if (i < r)
        return 0;
      var n = z(t[i]);
      return n >= 0 ? (n > 0 && (e.lastNeed = n - 1), n) : --i < r || n === -2 ? 0 : (n = z(t[i]), n >= 0 ? (n > 0 && (e.lastNeed = n - 2), n) : --i < r || n === -2 ? 0 : (n = z(t[i]), n >= 0 ? (n > 0 && (n === 2 ? n = 0 : e.lastNeed = n - 3), n) : 0));
    }
    function wr(e, t, r) {
      if ((t[0] & 192) !== 128)
        return e.lastNeed = 0, "�";
      if (e.lastNeed > 1 && t.length > 1) {
        if ((t[1] & 192) !== 128)
          return e.lastNeed = 1, "�";
        if (e.lastNeed > 2 && t.length > 2 && (t[2] & 192) !== 128)
          return e.lastNeed = 2, "�";
      }
    }
    function xr(e) {
      var t = this.lastTotal - this.lastNeed, r = wr(this, e, t);
      if (r !== undefined)
        return r;
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, t, 0, e.length), this.lastNeed -= e.length;
    }
    function dr2(e, t) {
      var r = yr(this, e, t);
      if (!this.lastNeed)
        return e.toString("utf8", t);
      this.lastTotal = r;
      var i = e.length - (r - this.lastNeed);
      return e.copy(this.lastChar, 0, i), e.toString("utf8", t, i);
    }
    function Br3(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + "�" : t;
    }
    function gr3(e, t) {
      if ((e.length - t) % 2 === 0) {
        var r = e.toString("utf16le", t);
        if (r) {
          var i = r.charCodeAt(r.length - 1);
          if (i >= 55296 && i <= 56319)
            return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], r.slice(0, -1);
        }
        return r;
      }
      return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString("utf16le", t, e.length - 1);
    }
    function Er2(e) {
      var t = e && e.length ? this.write(e) : "";
      if (this.lastNeed) {
        var r = this.lastTotal - this.lastNeed;
        return t + this.lastChar.toString("utf16le", 0, r);
      }
      return t;
    }
    function mr2(e, t) {
      var r = (e.length - t) % 3;
      return r === 0 ? e.toString("base64", t) : (this.lastNeed = 3 - r, this.lastTotal = 3, r === 1 ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString("base64", t, e.length - r));
    }
    function Ir3(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t;
    }
    function Fr3(e) {
      return e.toString(this.encoding);
    }
    function Ar2(e) {
      return e && e.length ? this.write(e) : "";
    }
  });
  Ut = kt(At2());
  export_StringDecoder = Ut.StringDecoder;
  export_default2 = Ut.StringDecoder;
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
});

// node_modules/winston/dist/winston/tail-file.js
var require_tail_file = __commonJS((exports, module) => {
  var fs = (() => ({}));
  var _require = (init_string_decoder(), __toCommonJS(exports_string_decoder));
  var StringDecoder = _require.StringDecoder;
  var _require2 = require_readable_browser();
  var Stream = _require2.Stream;
  function noop() {
  }
  module.exports = function(options, iter) {
    var buffer = Buffer.alloc(64 * 1024);
    var decode = new StringDecoder("utf8");
    var stream = new Stream;
    var buff = "";
    var pos = 0;
    var row = 0;
    if (options.start === -1) {
      delete options.start;
    }
    stream.readable = true;
    stream.destroy = function() {
      stream.destroyed = true;
      stream.emit("end");
      stream.emit("close");
    };
    fs.open(options.file, "a+", "0644", function(err, fd) {
      if (err) {
        if (!iter) {
          stream.emit("error", err);
        } else {
          iter(err);
        }
        stream.destroy();
        return;
      }
      (function read() {
        if (stream.destroyed) {
          fs.close(fd, noop);
          return;
        }
        return fs.read(fd, buffer, 0, buffer.length, pos, function(error, bytes) {
          if (error) {
            if (!iter) {
              stream.emit("error", error);
            } else {
              iter(error);
            }
            stream.destroy();
            return;
          }
          if (!bytes) {
            if (buff) {
              if (options.start == null || row > options.start) {
                if (!iter) {
                  stream.emit("line", buff);
                } else {
                  iter(null, buff);
                }
              }
              row++;
              buff = "";
            }
            return setTimeout(read, 1000);
          }
          var data = decode.write(buffer.slice(0, bytes));
          if (!iter) {
            stream.emit("data", data);
          }
          data = (buff + data).split(/\n+/);
          var l3 = data.length - 1;
          var i = 0;
          for (;i < l3; i++) {
            if (options.start == null || row > options.start) {
              if (!iter) {
                stream.emit("line", data[i]);
              } else {
                iter(null, data[i]);
              }
            }
            row++;
          }
          buff = data[l3];
          pos += bytes;
          return read();
        });
      })();
    });
    if (!iter) {
      return stream;
    }
    return stream.destroy;
  };
});

// node_modules/winston/dist/winston/transports/file.js
var require_file = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var fs = (() => ({}));
  var path = (init_path(), __toCommonJS(exports_path));
  var asyncSeries = require_series();
  var zlib = (init_zlib(), __toCommonJS(exports_zlib));
  var _require = require_triple_beam();
  var MESSAGE = _require.MESSAGE;
  var _require2 = require_readable_browser();
  var Stream = _require2.Stream;
  var PassThrough = _require2.PassThrough;
  var TransportStream = require_dist();
  var debug = require_browser4()("winston:file");
  var os = (init_os(), __toCommonJS(exports_os));
  var tailFile = require_tail_file();
  module.exports = /* @__PURE__ */ function(_TransportStream) {
    function File() {
      var _this;
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, File);
      _this = _callSuper(this, File, [options]);
      _this.name = options.name || "file";
      function throwIf(target) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1;_key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        args.slice(1).forEach(function(name) {
          if (options[name]) {
            throw new Error("Cannot set ".concat(name, " and ").concat(target, " together"));
          }
        });
      }
      _this._stream = new PassThrough;
      _this._stream.setMaxListeners(30);
      _this._onError = _this._onError.bind(_this);
      if (options.filename || options.dirname) {
        throwIf("filename or dirname", "stream");
        _this._basename = _this.filename = options.filename ? path.basename(options.filename) : "winston.log";
        _this.dirname = options.dirname || path.dirname(options.filename);
        _this.options = options.options || {
          flags: "a"
        };
      } else if (options.stream) {
        console.warn("options.stream will be removed in winston@4. Use winston.transports.Stream");
        throwIf("stream", "filename", "maxsize");
        _this._dest = _this._stream.pipe(_this._setupStream(options.stream));
        _this.dirname = path.dirname(_this._dest.path);
      } else {
        throw new Error("Cannot log to file without filename or stream.");
      }
      _this.maxsize = options.maxsize || null;
      _this.rotationFormat = options.rotationFormat || false;
      _this.zippedArchive = options.zippedArchive || false;
      _this.maxFiles = options.maxFiles || null;
      _this.eol = typeof options.eol === "string" ? options.eol : os.EOL;
      _this.tailable = options.tailable || false;
      _this.lazy = options.lazy || false;
      _this._size = 0;
      _this._pendingSize = 0;
      _this._created = 0;
      _this._drain = false;
      _this._opening = false;
      _this._ending = false;
      _this._fileExist = false;
      if (_this.dirname)
        _this._createLogDirIfNotExist(_this.dirname);
      if (!_this.lazy)
        _this.open();
      return _this;
    }
    _inherits(File, _TransportStream);
    return _createClass(File, [{
      key: "finishIfEnding",
      value: function finishIfEnding() {
        var _this2 = this;
        if (this._ending) {
          if (this._opening) {
            this.once("open", function() {
              _this2._stream.once("finish", function() {
                return _this2.emit("finish");
              });
              setImmediate(function() {
                return _this2._stream.end();
              });
            });
          } else {
            this._stream.once("finish", function() {
              return _this2.emit("finish");
            });
            setImmediate(function() {
              return _this2._stream.end();
            });
          }
        }
      }
    }, {
      key: "log",
      value: function log(info) {
        var _this3 = this;
        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function() {
        };
        if (this.silent) {
          callback();
          return true;
        }
        if (this._drain) {
          this._stream.once("drain", function() {
            _this3._drain = false;
            _this3.log(info, callback);
          });
          return;
        }
        if (this._rotate) {
          this._stream.once("rotate", function() {
            _this3._rotate = false;
            _this3.log(info, callback);
          });
          return;
        }
        if (this.lazy) {
          if (!this._fileExist) {
            if (!this._opening) {
              this.open();
            }
            this.once("open", function() {
              _this3._fileExist = true;
              _this3.log(info, callback);
              return;
            });
            return;
          }
          if (this._needsNewFile(this._pendingSize)) {
            this._dest.once("close", function() {
              if (!_this3._opening) {
                _this3.open();
              }
              _this3.once("open", function() {
                _this3.log(info, callback);
                return;
              });
              return;
            });
            return;
          }
        }
        var output = "".concat(info[MESSAGE]).concat(this.eol);
        var bytes = Buffer.byteLength(output);
        function logged() {
          var _this4 = this;
          this._size += bytes;
          this._pendingSize -= bytes;
          debug("logged %s %s", this._size, output);
          this.emit("logged", info);
          if (this._rotate) {
            return;
          }
          if (this._opening) {
            return;
          }
          if (!this._needsNewFile()) {
            return;
          }
          if (this.lazy) {
            this._endStream(function() {
              _this4.emit("fileclosed");
            });
            return;
          }
          this._rotate = true;
          this._endStream(function() {
            return _this4._rotateFile();
          });
        }
        this._pendingSize += bytes;
        if (this._opening && !this.rotatedWhileOpening && this._needsNewFile(this._size + this._pendingSize)) {
          this.rotatedWhileOpening = true;
        }
        var written = this._stream.write(output, logged.bind(this));
        if (!written) {
          this._drain = true;
          this._stream.once("drain", function() {
            _this3._drain = false;
            callback();
          });
        } else {
          callback();
        }
        debug("written", written, this._drain);
        this.finishIfEnding();
        return written;
      }
    }, {
      key: "query",
      value: function query(options, callback) {
        if (typeof options === "function") {
          callback = options;
          options = {};
        }
        options = normalizeQuery(options);
        var file = path.join(this.dirname, this.filename);
        var buff = "";
        var results = [];
        var row = 0;
        var stream = fs.createReadStream(file, {
          encoding: "utf8"
        });
        stream.on("error", function(err) {
          if (stream.readable) {
            stream.destroy();
          }
          if (!callback) {
            return;
          }
          return err.code !== "ENOENT" ? callback(err) : callback(null, results);
        });
        stream.on("data", function(data) {
          data = (buff + data).split(/\n+/);
          var l3 = data.length - 1;
          var i = 0;
          for (;i < l3; i++) {
            if (!options.start || row >= options.start) {
              add(data[i]);
            }
            row++;
          }
          buff = data[l3];
        });
        stream.on("close", function() {
          if (buff) {
            add(buff, true);
          }
          if (options.order === "desc") {
            results = results.reverse();
          }
          if (callback)
            callback(null, results);
        });
        function add(buff2, attempt) {
          try {
            var log = JSON.parse(buff2);
            if (check(log)) {
              push(log);
            }
          } catch (e) {
            if (!attempt) {
              stream.emit("error", e);
            }
          }
        }
        function push(log) {
          if (options.rows && results.length >= options.rows && options.order !== "desc") {
            if (stream.readable) {
              stream.destroy();
            }
            return;
          }
          if (options.fields) {
            log = options.fields.reduce(function(obj, key) {
              obj[key] = log[key];
              return obj;
            }, {});
          }
          if (options.order === "desc") {
            if (results.length >= options.rows) {
              results.shift();
            }
          }
          results.push(log);
        }
        function check(log) {
          if (!log) {
            return;
          }
          if (_typeof(log) !== "object") {
            return;
          }
          var time = new Date(log.timestamp);
          if (options.from && time < options.from || options.until && time > options.until || options.level && options.level !== log.level) {
            return;
          }
          return true;
        }
        function normalizeQuery(options2) {
          options2 = options2 || {};
          options2.rows = options2.rows || options2.limit || 10;
          options2.start = options2.start || 0;
          options2.until = options2.until || new Date;
          if (_typeof(options2.until) !== "object") {
            options2.until = new Date(options2.until);
          }
          options2.from = options2.from || options2.until - 24 * 60 * 60 * 1000;
          if (_typeof(options2.from) !== "object") {
            options2.from = new Date(options2.from);
          }
          options2.order = options2.order || "desc";
          return options2;
        }
      }
    }, {
      key: "stream",
      value: function stream() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var file = path.join(this.dirname, this.filename);
        var stream = new Stream;
        var tail = {
          file,
          start: options.start
        };
        stream.destroy = tailFile(tail, function(err, line) {
          if (err) {
            return stream.emit("error", err);
          }
          try {
            stream.emit("data", line);
            line = JSON.parse(line);
            stream.emit("log", line);
          } catch (e) {
            stream.emit("error", e);
          }
        });
        return stream;
      }
    }, {
      key: "open",
      value: function open() {
        var _this5 = this;
        if (!this.filename)
          return;
        if (this._opening)
          return;
        this._opening = true;
        this.stat(function(err, size) {
          if (err) {
            return _this5.emit("error", err);
          }
          debug("stat done: %s { size: %s }", _this5.filename, size);
          _this5._size = size;
          _this5._dest = _this5._createStream(_this5._stream);
          _this5._opening = false;
          _this5.once("open", function() {
            if (!_this5._stream.emit("rotate")) {
              _this5._rotate = false;
            }
          });
        });
      }
    }, {
      key: "stat",
      value: function stat(callback) {
        var _this6 = this;
        var target = this._getFile();
        var fullpath = path.join(this.dirname, target);
        fs.stat(fullpath, function(err, stat) {
          if (err && err.code === "ENOENT") {
            debug("ENOENT ok", fullpath);
            _this6.filename = target;
            return callback(null, 0);
          }
          if (err) {
            debug("err ".concat(err.code, " ").concat(fullpath));
            return callback(err);
          }
          if (!stat || _this6._needsNewFile(stat.size)) {
            return _this6._incFile(function() {
              return _this6.stat(callback);
            });
          }
          _this6.filename = target;
          callback(null, stat.size);
        });
      }
    }, {
      key: "close",
      value: function close(cb) {
        var _this7 = this;
        if (!this._stream) {
          return;
        }
        this._stream.end(function() {
          if (cb) {
            cb();
          }
          _this7.emit("flush");
          _this7.emit("closed");
        });
      }
    }, {
      key: "_needsNewFile",
      value: function _needsNewFile(size) {
        size = size || this._size;
        return this.maxsize && size >= this.maxsize;
      }
    }, {
      key: "_onError",
      value: function _onError(err) {
        this.emit("error", err);
      }
    }, {
      key: "_setupStream",
      value: function _setupStream(stream) {
        stream.on("error", this._onError);
        return stream;
      }
    }, {
      key: "_cleanupStream",
      value: function _cleanupStream(stream) {
        stream.removeListener("error", this._onError);
        stream.destroy();
        return stream;
      }
    }, {
      key: "_rotateFile",
      value: function _rotateFile() {
        var _this8 = this;
        this._incFile(function() {
          return _this8.open();
        });
      }
    }, {
      key: "_endStream",
      value: function _endStream() {
        var _this9 = this;
        var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function() {
        };
        if (this._dest) {
          this._stream.unpipe(this._dest);
          this._dest.end(function() {
            _this9._cleanupStream(_this9._dest);
            callback();
          });
        } else {
          callback();
        }
      }
    }, {
      key: "_createStream",
      value: function _createStream(source) {
        var _this10 = this;
        var fullpath = path.join(this.dirname, this.filename);
        debug("create stream start", fullpath, this.options);
        var dest = fs.createWriteStream(fullpath, this.options).on("error", function(err) {
          return debug(err);
        }).on("close", function() {
          return debug("close", dest.path, dest.bytesWritten);
        }).on("open", function() {
          debug("file open ok", fullpath);
          _this10.emit("open", fullpath);
          source.pipe(dest);
          if (_this10.rotatedWhileOpening) {
            _this10._stream = new PassThrough;
            _this10._stream.setMaxListeners(30);
            _this10._rotateFile();
            _this10.rotatedWhileOpening = false;
            _this10._cleanupStream(dest);
            source.end();
          }
        });
        debug("create stream ok", fullpath);
        return dest;
      }
    }, {
      key: "_incFile",
      value: function _incFile(callback) {
        debug("_incFile", this.filename);
        var ext = path.extname(this._basename);
        var basename = path.basename(this._basename, ext);
        var tasks = [];
        if (this.zippedArchive) {
          tasks.push(function(cb) {
            var num = this._created > 0 && !this.tailable ? this._created : "";
            this._compressFile(path.join(this.dirname, "".concat(basename).concat(num).concat(ext)), path.join(this.dirname, "".concat(basename).concat(num).concat(ext, ".gz")), cb);
          }.bind(this));
        }
        tasks.push(function(cb) {
          if (!this.tailable) {
            this._created += 1;
            this._checkMaxFilesIncrementing(ext, basename, cb);
          } else {
            this._checkMaxFilesTailable(ext, basename, cb);
          }
        }.bind(this));
        asyncSeries(tasks, callback);
      }
    }, {
      key: "_getFile",
      value: function _getFile() {
        var ext = path.extname(this._basename);
        var basename = path.basename(this._basename, ext);
        var isRotation = this.rotationFormat ? this.rotationFormat() : this._created;
        return !this.tailable && this._created ? "".concat(basename).concat(isRotation).concat(ext) : "".concat(basename).concat(ext);
      }
    }, {
      key: "_checkMaxFilesIncrementing",
      value: function _checkMaxFilesIncrementing(ext, basename, callback) {
        if (!this.maxFiles || this._created < this.maxFiles) {
          return setImmediate(callback);
        }
        var oldest = this._created - this.maxFiles;
        var isOldest = oldest !== 0 ? oldest : "";
        var isZipped = this.zippedArchive ? ".gz" : "";
        var filePath = "".concat(basename).concat(isOldest).concat(ext).concat(isZipped);
        var target = path.join(this.dirname, filePath);
        fs.unlink(target, callback);
      }
    }, {
      key: "_checkMaxFilesTailable",
      value: function _checkMaxFilesTailable(ext, basename, callback) {
        var _this12 = this;
        var tasks = [];
        if (!this.maxFiles) {
          return;
        }
        var isZipped = this.zippedArchive ? ".gz" : "";
        for (var x5 = this.maxFiles - 1;x5 > 1; x5--) {
          tasks.push(function(i, cb) {
            var _this11 = this;
            var fileName = "".concat(basename).concat(i - 1).concat(ext).concat(isZipped);
            var tmppath = path.join(this.dirname, fileName);
            fs.exists(tmppath, function(exists) {
              if (!exists) {
                return cb(null);
              }
              fileName = "".concat(basename).concat(i).concat(ext).concat(isZipped);
              fs.rename(tmppath, path.join(_this11.dirname, fileName), cb);
            });
          }.bind(this, x5));
        }
        asyncSeries(tasks, function() {
          fs.rename(path.join(_this12.dirname, "".concat(basename).concat(ext).concat(isZipped)), path.join(_this12.dirname, "".concat(basename, "1").concat(ext).concat(isZipped)), callback);
        });
      }
    }, {
      key: "_compressFile",
      value: function _compressFile(src, dest, callback) {
        fs.access(src, fs.F_OK, function(err) {
          if (err) {
            return callback();
          }
          var gzip = zlib.createGzip();
          var inp = fs.createReadStream(src);
          var out = fs.createWriteStream(dest);
          out.on("finish", function() {
            fs.unlink(src, callback);
          });
          inp.pipe(gzip).pipe(out);
        });
      }
    }, {
      key: "_createLogDirIfNotExist",
      value: function _createLogDirIfNotExist(dirPath) {
        if (!fs.existsSync(dirPath)) {
          fs.mkdirSync(dirPath, {
            recursive: true
          });
        }
      }
    }]);
  }(TransportStream);
});

// node:http
var exports_http = {};
__export(exports_http, {
  request: () => ou,
  globalAgent: () => lu,
  get: () => au,
  default: () => iu,
  STATUS_CODES: () => hu,
  METHODS: () => cu,
  IncomingMessage: () => fu,
  ClientRequest: () => su,
  Agent: () => uu
});
function oe(e) {
  throw new RangeError($s[e]);
}
function Gs(e, t) {
  let r = [], n = e.length;
  for (;n--; )
    r[n] = t(e[n]);
  return r;
}
function yi(e, t) {
  let r = e.split("@"), n = "";
  r.length > 1 && (n = r[0] + "@", e = r[1]), e = e.replace(Ws, ".");
  let i = e.split("."), o2 = Gs(i, t).join(".");
  return n + o2;
}
function dr2(e) {
  let t = [], r = 0, n = e.length;
  for (;r < n; ) {
    let i = e.charCodeAt(r++);
    if (i >= 55296 && i <= 56319 && r < n) {
      let o2 = e.charCodeAt(r++);
      (o2 & 64512) == 56320 ? t.push(((i & 1023) << 10) + (o2 & 1023) + 65536) : (t.push(i), r--);
    } else
      t.push(i);
  }
  return t;
}
var Gi, ke, Ki, Vi, Yi, Xi, vr = (e, t) => () => (e && (t = e(e = 0)), t), b4 = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), Er2 = (e, t) => {
  for (var r in t)
    ke(e, r, { get: t[r], enumerable: true });
}, xr = (e, t, r, n) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let i of Vi(t))
      !Xi.call(e, i) && i !== r && ke(e, i, { get: () => t[i], enumerable: !(n = Ki(t, i)) || n.enumerable });
  return e;
}, Rr2 = (e, t, r) => (r = e != null ? Gi(Yi(e)) : {}, xr(t || !e || !e.__esModule ? ke(r, "default", { value: e, enumerable: true }) : r, e)), dt2 = (e) => xr(ke({}, "__esModule", { value: true }), e), gt2, Q2, bt2, _t2, qr, Dr, _e, Lt2, an, Ft, fe, Nt2, pn, Dt, ue, Sn, Bn2, Kt, Qe, Vt, et, On, Nn, Ht, ir, zn, ti, ar, ur, fi, li, ci, _i, pi, js, Hs, Ws, $s, hr, K3, cr, gi2, Ks, di, wi2, pr, yr, mi, bi, Vs, Ys, vi, xi, Si2, Ni, Di, Hi, _r, iu, ou, au, su, fu, uu, lu, hu, cu;
var init_http = __esm(() => {
  Gi = Object.create;
  ke = Object.defineProperty;
  Ki = Object.getOwnPropertyDescriptor;
  Vi = Object.getOwnPropertyNames;
  Yi = Object.getPrototypeOf;
  Xi = Object.prototype.hasOwnProperty;
  gt2 = b4((N5) => {
    N5.fetch = Ce2(global.fetch) && Ce2(global.ReadableStream);
    N5.writableStream = Ce2(global.WritableStream);
    N5.abortController = Ce2(global.AbortController);
    var J2;
    function pt3() {
      if (J2 !== undefined)
        return J2;
      if (global.XMLHttpRequest) {
        J2 = new global.XMLHttpRequest;
        try {
          J2.open("GET", global.XDomainRequest ? "/" : "https://example.com");
        } catch {
          J2 = null;
        }
      } else
        J2 = null;
      return J2;
    }
    function yt2(e) {
      var t = pt3();
      if (!t)
        return false;
      try {
        return t.responseType = e, t.responseType === e;
      } catch {
      }
      return false;
    }
    N5.arraybuffer = N5.fetch || yt2("arraybuffer");
    N5.msstream = !N5.fetch && yt2("ms-stream");
    N5.mozchunkedarraybuffer = !N5.fetch && yt2("moz-chunked-arraybuffer");
    N5.overrideMimeType = N5.fetch || (pt3() ? Ce2(pt3().overrideMimeType) : false);
    function Ce2(e) {
      return typeof e == "function";
    }
    J2 = null;
  });
  Q2 = b4((Rf, wt) => {
    typeof Object.create == "function" ? wt.exports = function(t, r) {
      r && (t.super_ = r, t.prototype = Object.create(r.prototype, { constructor: { value: t, enumerable: false, writable: true, configurable: true } }));
    } : wt.exports = function(t, r) {
      if (r) {
        t.super_ = r;
        var n = function() {
        };
        n.prototype = r.prototype, t.prototype = new n, t.prototype.constructor = t;
      }
    };
  });
  bt2 = b4((Sf2, mt3) => {
    var ye2 = typeof Reflect == "object" ? Reflect : null, Sr = ye2 && typeof ye2.apply == "function" ? ye2.apply : function(t, r, n) {
      return Function.prototype.apply.call(t, r, n);
    }, je;
    ye2 && typeof ye2.ownKeys == "function" ? je = ye2.ownKeys : Object.getOwnPropertySymbols ? je = function(t) {
      return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
    } : je = function(t) {
      return Object.getOwnPropertyNames(t);
    };
    function zi(e) {
      console && console.warn && console.warn(e);
    }
    var Ar2 = Number.isNaN || function(t) {
      return t !== t;
    };
    function x5() {
      x5.init.call(this);
    }
    mt3.exports = x5;
    mt3.exports.once = eo;
    x5.EventEmitter = x5;
    x5.prototype._events = undefined;
    x5.prototype._eventsCount = 0;
    x5.prototype._maxListeners = undefined;
    var Tr = 10;
    function He(e) {
      if (typeof e != "function")
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e);
    }
    Object.defineProperty(x5, "defaultMaxListeners", { enumerable: true, get: function() {
      return Tr;
    }, set: function(e) {
      if (typeof e != "number" || e < 0 || Ar2(e))
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
      Tr = e;
    } });
    x5.init = function() {
      (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
    };
    x5.prototype.setMaxListeners = function(t) {
      if (typeof t != "number" || t < 0 || Ar2(t))
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
      return this._maxListeners = t, this;
    };
    function Br3(e) {
      return e._maxListeners === undefined ? x5.defaultMaxListeners : e._maxListeners;
    }
    x5.prototype.getMaxListeners = function() {
      return Br3(this);
    };
    x5.prototype.emit = function(t) {
      for (var r = [], n = 1;n < arguments.length; n++)
        r.push(arguments[n]);
      var i = t === "error", o2 = this._events;
      if (o2 !== undefined)
        i = i && o2.error === undefined;
      else if (!i)
        return false;
      if (i) {
        var a3;
        if (r.length > 0 && (a3 = r[0]), a3 instanceof Error)
          throw a3;
        var s2 = new Error("Unhandled error." + (a3 ? " (" + a3.message + ")" : ""));
        throw s2.context = a3, s2;
      }
      var u3 = o2[t];
      if (u3 === undefined)
        return false;
      if (typeof u3 == "function")
        Sr(u3, this, r);
      else
        for (var l3 = u3.length, h4 = Or(u3, l3), n = 0;n < l3; ++n)
          Sr(h4[n], this, r);
      return true;
    };
    function Cr(e, t, r, n) {
      var i, o2, a3;
      if (He(r), o2 = e._events, o2 === undefined ? (o2 = e._events = Object.create(null), e._eventsCount = 0) : (o2.newListener !== undefined && (e.emit("newListener", t, r.listener ? r.listener : r), o2 = e._events), a3 = o2[t]), a3 === undefined)
        a3 = o2[t] = r, ++e._eventsCount;
      else if (typeof a3 == "function" ? a3 = o2[t] = n ? [r, a3] : [a3, r] : n ? a3.unshift(r) : a3.push(r), i = Br3(e), i > 0 && a3.length > i && !a3.warned) {
        a3.warned = true;
        var s2 = new Error("Possible EventEmitter memory leak detected. " + a3.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        s2.name = "MaxListenersExceededWarning", s2.emitter = e, s2.type = t, s2.count = a3.length, zi(s2);
      }
      return e;
    }
    x5.prototype.addListener = function(t, r) {
      return Cr(this, t, r, false);
    };
    x5.prototype.on = x5.prototype.addListener;
    x5.prototype.prependListener = function(t, r) {
      return Cr(this, t, r, true);
    };
    function Zi() {
      if (!this.fired)
        return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
    }
    function Ir3(e, t, r) {
      var n = { fired: false, wrapFn: undefined, target: e, type: t, listener: r }, i = Zi.bind(n);
      return i.listener = r, n.wrapFn = i, i;
    }
    x5.prototype.once = function(t, r) {
      return He(r), this.on(t, Ir3(this, t, r)), this;
    };
    x5.prototype.prependOnceListener = function(t, r) {
      return He(r), this.prependListener(t, Ir3(this, t, r)), this;
    };
    x5.prototype.removeListener = function(t, r) {
      var n, i, o2, a3, s2;
      if (He(r), i = this._events, i === undefined)
        return this;
      if (n = i[t], n === undefined)
        return this;
      if (n === r || n.listener === r)
        --this._eventsCount === 0 ? this._events = Object.create(null) : (delete i[t], i.removeListener && this.emit("removeListener", t, n.listener || r));
      else if (typeof n != "function") {
        for (o2 = -1, a3 = n.length - 1;a3 >= 0; a3--)
          if (n[a3] === r || n[a3].listener === r) {
            s2 = n[a3].listener, o2 = a3;
            break;
          }
        if (o2 < 0)
          return this;
        o2 === 0 ? n.shift() : Ji(n, o2), n.length === 1 && (i[t] = n[0]), i.removeListener !== undefined && this.emit("removeListener", t, s2 || r);
      }
      return this;
    };
    x5.prototype.off = x5.prototype.removeListener;
    x5.prototype.removeAllListeners = function(t) {
      var r, n, i;
      if (n = this._events, n === undefined)
        return this;
      if (n.removeListener === undefined)
        return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : n[t] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete n[t]), this;
      if (arguments.length === 0) {
        var o2 = Object.keys(n), a3;
        for (i = 0;i < o2.length; ++i)
          a3 = o2[i], a3 !== "removeListener" && this.removeAllListeners(a3);
        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
      }
      if (r = n[t], typeof r == "function")
        this.removeListener(t, r);
      else if (r !== undefined)
        for (i = r.length - 1;i >= 0; i--)
          this.removeListener(t, r[i]);
      return this;
    };
    function Lr(e, t, r) {
      var n = e._events;
      if (n === undefined)
        return [];
      var i = n[t];
      return i === undefined ? [] : typeof i == "function" ? r ? [i.listener || i] : [i] : r ? Qi(i) : Or(i, i.length);
    }
    x5.prototype.listeners = function(t) {
      return Lr(this, t, true);
    };
    x5.prototype.rawListeners = function(t) {
      return Lr(this, t, false);
    };
    x5.listenerCount = function(e, t) {
      return typeof e.listenerCount == "function" ? e.listenerCount(t) : Mr.call(e, t);
    };
    x5.prototype.listenerCount = Mr;
    function Mr(e) {
      var t = this._events;
      if (t !== undefined) {
        var r = t[e];
        if (typeof r == "function")
          return 1;
        if (r !== undefined)
          return r.length;
      }
      return 0;
    }
    x5.prototype.eventNames = function() {
      return this._eventsCount > 0 ? je(this._events) : [];
    };
    function Or(e, t) {
      for (var r = new Array(t), n = 0;n < t; ++n)
        r[n] = e[n];
      return r;
    }
    function Ji(e, t) {
      for (;t + 1 < e.length; t++)
        e[t] = e[t + 1];
      e.pop();
    }
    function Qi(e) {
      for (var t = new Array(e.length), r = 0;r < t.length; ++r)
        t[r] = e[r].listener || e[r];
      return t;
    }
    function eo(e, t) {
      return new Promise(function(r, n) {
        function i(a3) {
          e.removeListener(t, o2), n(a3);
        }
        function o2() {
          typeof e.removeListener == "function" && e.removeListener("error", i), r([].slice.call(arguments));
        }
        Fr3(e, t, o2, { once: true }), t !== "error" && to(e, i, { once: true });
      });
    }
    function to(e, t, r) {
      typeof e.on == "function" && Fr3(e, "error", t, r);
    }
    function Fr3(e, t, r, n) {
      if (typeof e.on == "function")
        n.once ? e.once(t, r) : e.on(t, r);
      else if (typeof e.addEventListener == "function")
        e.addEventListener(t, function i(o2) {
          n.once && e.removeEventListener(t, i), r(o2);
        });
      else
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
    }
  });
  _t2 = b4((Tf, Nr) => {
    Nr.exports = bt2().EventEmitter;
  });
  qr = b4((We) => {
    We.byteLength = no;
    We.toByteArray = oo;
    We.fromByteArray = fo;
    var H3 = [], U3 = [], ro = typeof Uint8Array < "u" ? Uint8Array : Array, vt2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (ae = 0, Ur4 = vt2.length;ae < Ur4; ++ae)
      H3[ae] = vt2[ae], U3[vt2.charCodeAt(ae)] = ae;
    var ae, Ur4;
    U3[45] = 62;
    U3[95] = 63;
    function Pr(e) {
      var t = e.length;
      if (t % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var r = e.indexOf("=");
      r === -1 && (r = t);
      var n = r === t ? 0 : 4 - r % 4;
      return [r, n];
    }
    function no(e) {
      var t = Pr(e), r = t[0], n = t[1];
      return (r + n) * 3 / 4 - n;
    }
    function io(e, t, r) {
      return (t + r) * 3 / 4 - r;
    }
    function oo(e) {
      var t, r = Pr(e), n = r[0], i = r[1], o2 = new ro(io(e, n, i)), a3 = 0, s2 = i > 0 ? n - 4 : n, u3;
      for (u3 = 0;u3 < s2; u3 += 4)
        t = U3[e.charCodeAt(u3)] << 18 | U3[e.charCodeAt(u3 + 1)] << 12 | U3[e.charCodeAt(u3 + 2)] << 6 | U3[e.charCodeAt(u3 + 3)], o2[a3++] = t >> 16 & 255, o2[a3++] = t >> 8 & 255, o2[a3++] = t & 255;
      return i === 2 && (t = U3[e.charCodeAt(u3)] << 2 | U3[e.charCodeAt(u3 + 1)] >> 4, o2[a3++] = t & 255), i === 1 && (t = U3[e.charCodeAt(u3)] << 10 | U3[e.charCodeAt(u3 + 1)] << 4 | U3[e.charCodeAt(u3 + 2)] >> 2, o2[a3++] = t >> 8 & 255, o2[a3++] = t & 255), o2;
    }
    function ao(e) {
      return H3[e >> 18 & 63] + H3[e >> 12 & 63] + H3[e >> 6 & 63] + H3[e & 63];
    }
    function so2(e, t, r) {
      for (var n, i = [], o2 = t;o2 < r; o2 += 3)
        n = (e[o2] << 16 & 16711680) + (e[o2 + 1] << 8 & 65280) + (e[o2 + 2] & 255), i.push(ao(n));
      return i.join("");
    }
    function fo(e) {
      for (var t, r = e.length, n = r % 3, i = [], o2 = 16383, a3 = 0, s2 = r - n;a3 < s2; a3 += o2)
        i.push(so2(e, a3, a3 + o2 > s2 ? s2 : a3 + o2));
      return n === 1 ? (t = e[r - 1], i.push(H3[t >> 2] + H3[t << 4 & 63] + "==")) : n === 2 && (t = (e[r - 2] << 8) + e[r - 1], i.push(H3[t >> 10] + H3[t >> 4 & 63] + H3[t << 2 & 63] + "=")), i.join("");
    }
  });
  Dr = b4((Et) => {
    Et.read = function(e, t, r, n, i) {
      var o2, a3, s2 = i * 8 - n - 1, u3 = (1 << s2) - 1, l3 = u3 >> 1, h4 = -7, c2 = r ? i - 1 : 0, d3 = r ? -1 : 1, p3 = e[t + c2];
      for (c2 += d3, o2 = p3 & (1 << -h4) - 1, p3 >>= -h4, h4 += s2;h4 > 0; o2 = o2 * 256 + e[t + c2], c2 += d3, h4 -= 8)
        ;
      for (a3 = o2 & (1 << -h4) - 1, o2 >>= -h4, h4 += n;h4 > 0; a3 = a3 * 256 + e[t + c2], c2 += d3, h4 -= 8)
        ;
      if (o2 === 0)
        o2 = 1 - l3;
      else {
        if (o2 === u3)
          return a3 ? NaN : (p3 ? -1 : 1) * (1 / 0);
        a3 = a3 + Math.pow(2, n), o2 = o2 - l3;
      }
      return (p3 ? -1 : 1) * a3 * Math.pow(2, o2 - n);
    };
    Et.write = function(e, t, r, n, i, o2) {
      var a3, s2, u3, l3 = o2 * 8 - i - 1, h4 = (1 << l3) - 1, c2 = h4 >> 1, d3 = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p3 = n ? 0 : o2 - 1, g5 = n ? 1 : -1, E5 = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0;
      for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s2 = isNaN(t) ? 1 : 0, a3 = h4) : (a3 = Math.floor(Math.log(t) / Math.LN2), t * (u3 = Math.pow(2, -a3)) < 1 && (a3--, u3 *= 2), a3 + c2 >= 1 ? t += d3 / u3 : t += d3 * Math.pow(2, 1 - c2), t * u3 >= 2 && (a3++, u3 /= 2), a3 + c2 >= h4 ? (s2 = 0, a3 = h4) : a3 + c2 >= 1 ? (s2 = (t * u3 - 1) * Math.pow(2, i), a3 = a3 + c2) : (s2 = t * Math.pow(2, c2 - 1) * Math.pow(2, i), a3 = 0));i >= 8; e[r + p3] = s2 & 255, p3 += g5, s2 /= 256, i -= 8)
        ;
      for (a3 = a3 << i | s2, l3 += i;l3 > 0; e[r + p3] = a3 & 255, p3 += g5, a3 /= 256, l3 -= 8)
        ;
      e[r + p3 - g5] |= E5 * 128;
    };
  });
  _e = b4((be2) => {
    var xt = qr(), we = Dr(), kr = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    be2.Buffer = f2;
    be2.SlowBuffer = yo;
    be2.INSPECT_MAX_BYTES = 50;
    var $e = 2147483647;
    be2.kMaxLength = $e;
    f2.TYPED_ARRAY_SUPPORT = uo();
    !f2.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function uo() {
      try {
        let e = new Uint8Array(1), t = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), e.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(f2.prototype, "parent", { enumerable: true, get: function() {
      if (!!f2.isBuffer(this))
        return this.buffer;
    } });
    Object.defineProperty(f2.prototype, "offset", { enumerable: true, get: function() {
      if (!!f2.isBuffer(this))
        return this.byteOffset;
    } });
    function X4(e) {
      if (e > $e)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
      let t = new Uint8Array(e);
      return Object.setPrototypeOf(t, f2.prototype), t;
    }
    function f2(e, t, r) {
      if (typeof e == "number") {
        if (typeof t == "string")
          throw new TypeError('The "string" argument must be of type string. Received type number');
        return At3(e);
      }
      return $r(e, t, r);
    }
    f2.poolSize = 8192;
    function $r(e, t, r) {
      if (typeof e == "string")
        return ho(e, t);
      if (ArrayBuffer.isView(e))
        return co(e);
      if (e == null)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
      if (W(e, ArrayBuffer) || e && W(e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (W(e, SharedArrayBuffer) || e && W(e.buffer, SharedArrayBuffer)))
        return St2(e, t, r);
      if (typeof e == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      let n = e.valueOf && e.valueOf();
      if (n != null && n !== e)
        return f2.from(n, t, r);
      let i = po(e);
      if (i)
        return i;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] == "function")
        return f2.from(e[Symbol.toPrimitive]("string"), t, r);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
    }
    f2.from = function(e, t, r) {
      return $r(e, t, r);
    };
    Object.setPrototypeOf(f2.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(f2, Uint8Array);
    function Gr(e) {
      if (typeof e != "number")
        throw new TypeError('"size" argument must be of type number');
      if (e < 0)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
    }
    function lo(e, t, r) {
      return Gr(e), e <= 0 ? X4(e) : t !== undefined ? typeof r == "string" ? X4(e).fill(t, r) : X4(e).fill(t) : X4(e);
    }
    f2.alloc = function(e, t, r) {
      return lo(e, t, r);
    };
    function At3(e) {
      return Gr(e), X4(e < 0 ? 0 : Bt2(e) | 0);
    }
    f2.allocUnsafe = function(e) {
      return At3(e);
    };
    f2.allocUnsafeSlow = function(e) {
      return At3(e);
    };
    function ho(e, t) {
      if ((typeof t != "string" || t === "") && (t = "utf8"), !f2.isEncoding(t))
        throw new TypeError("Unknown encoding: " + t);
      let r = Kr2(e, t) | 0, n = X4(r), i = n.write(e, t);
      return i !== r && (n = n.slice(0, i)), n;
    }
    function Rt2(e) {
      let t = e.length < 0 ? 0 : Bt2(e.length) | 0, r = X4(t);
      for (let n = 0;n < t; n += 1)
        r[n] = e[n] & 255;
      return r;
    }
    function co(e) {
      if (W(e, Uint8Array)) {
        let t = new Uint8Array(e);
        return St2(t.buffer, t.byteOffset, t.byteLength);
      }
      return Rt2(e);
    }
    function St2(e, t, r) {
      if (t < 0 || e.byteLength < t)
        throw new RangeError('"offset" is outside of buffer bounds');
      if (e.byteLength < t + (r || 0))
        throw new RangeError('"length" is outside of buffer bounds');
      let n;
      return t === undefined && r === undefined ? n = new Uint8Array(e) : r === undefined ? n = new Uint8Array(e, t) : n = new Uint8Array(e, t, r), Object.setPrototypeOf(n, f2.prototype), n;
    }
    function po(e) {
      if (f2.isBuffer(e)) {
        let t = Bt2(e.length) | 0, r = X4(t);
        return r.length === 0 || e.copy(r, 0, 0, t), r;
      }
      if (e.length !== undefined)
        return typeof e.length != "number" || It(e.length) ? X4(0) : Rt2(e);
      if (e.type === "Buffer" && Array.isArray(e.data))
        return Rt2(e.data);
    }
    function Bt2(e) {
      if (e >= $e)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + $e.toString(16) + " bytes");
      return e | 0;
    }
    function yo(e) {
      return +e != e && (e = 0), f2.alloc(+e);
    }
    f2.isBuffer = function(t) {
      return t != null && t._isBuffer === true && t !== f2.prototype;
    };
    f2.compare = function(t, r) {
      if (W(t, Uint8Array) && (t = f2.from(t, t.offset, t.byteLength)), W(r, Uint8Array) && (r = f2.from(r, r.offset, r.byteLength)), !f2.isBuffer(t) || !f2.isBuffer(r))
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (t === r)
        return 0;
      let n = t.length, i = r.length;
      for (let o2 = 0, a3 = Math.min(n, i);o2 < a3; ++o2)
        if (t[o2] !== r[o2]) {
          n = t[o2], i = r[o2];
          break;
        }
      return n < i ? -1 : i < n ? 1 : 0;
    };
    f2.isEncoding = function(t) {
      switch (String(t).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    f2.concat = function(t, r) {
      if (!Array.isArray(t))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (t.length === 0)
        return f2.alloc(0);
      let n;
      if (r === undefined)
        for (r = 0, n = 0;n < t.length; ++n)
          r += t[n].length;
      let i = f2.allocUnsafe(r), o2 = 0;
      for (n = 0;n < t.length; ++n) {
        let a3 = t[n];
        if (W(a3, Uint8Array))
          o2 + a3.length > i.length ? (f2.isBuffer(a3) || (a3 = f2.from(a3)), a3.copy(i, o2)) : Uint8Array.prototype.set.call(i, a3, o2);
        else if (f2.isBuffer(a3))
          a3.copy(i, o2);
        else
          throw new TypeError('"list" argument must be an Array of Buffers');
        o2 += a3.length;
      }
      return i;
    };
    function Kr2(e, t) {
      if (f2.isBuffer(e))
        return e.length;
      if (ArrayBuffer.isView(e) || W(e, ArrayBuffer))
        return e.byteLength;
      if (typeof e != "string")
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
      let r = e.length, n = arguments.length > 2 && arguments[2] === true;
      if (!n && r === 0)
        return 0;
      let i = false;
      for (;; )
        switch (t) {
          case "ascii":
          case "latin1":
          case "binary":
            return r;
          case "utf8":
          case "utf-8":
            return Tt3(e).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return r * 2;
          case "hex":
            return r >>> 1;
          case "base64":
            return tn2(e).length;
          default:
            if (i)
              return n ? -1 : Tt3(e).length;
            t = ("" + t).toLowerCase(), i = true;
        }
    }
    f2.byteLength = Kr2;
    function go(e, t, r) {
      let n = false;
      if ((t === undefined || t < 0) && (t = 0), t > this.length || ((r === undefined || r > this.length) && (r = this.length), r <= 0) || (r >>>= 0, t >>>= 0, r <= t))
        return "";
      for (e || (e = "utf8");; )
        switch (e) {
          case "hex":
            return To(this, t, r);
          case "utf8":
          case "utf-8":
            return Yr2(this, t, r);
          case "ascii":
            return Ro(this, t, r);
          case "latin1":
          case "binary":
            return So(this, t, r);
          case "base64":
            return Eo(this, t, r);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Ao(this, t, r);
          default:
            if (n)
              throw new TypeError("Unknown encoding: " + e);
            e = (e + "").toLowerCase(), n = true;
        }
    }
    f2.prototype._isBuffer = true;
    function se2(e, t, r) {
      let n = e[t];
      e[t] = e[r], e[r] = n;
    }
    f2.prototype.swap16 = function() {
      let t = this.length;
      if (t % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let r = 0;r < t; r += 2)
        se2(this, r, r + 1);
      return this;
    };
    f2.prototype.swap32 = function() {
      let t = this.length;
      if (t % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let r = 0;r < t; r += 4)
        se2(this, r, r + 3), se2(this, r + 1, r + 2);
      return this;
    };
    f2.prototype.swap64 = function() {
      let t = this.length;
      if (t % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let r = 0;r < t; r += 8)
        se2(this, r, r + 7), se2(this, r + 1, r + 6), se2(this, r + 2, r + 5), se2(this, r + 3, r + 4);
      return this;
    };
    f2.prototype.toString = function() {
      let t = this.length;
      return t === 0 ? "" : arguments.length === 0 ? Yr2(this, 0, t) : go.apply(this, arguments);
    };
    f2.prototype.toLocaleString = f2.prototype.toString;
    f2.prototype.equals = function(t) {
      if (!f2.isBuffer(t))
        throw new TypeError("Argument must be a Buffer");
      return this === t ? true : f2.compare(this, t) === 0;
    };
    f2.prototype.inspect = function() {
      let t = "", r = be2.INSPECT_MAX_BYTES;
      return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
    };
    kr && (f2.prototype[kr] = f2.prototype.inspect);
    f2.prototype.compare = function(t, r, n, i, o2) {
      if (W(t, Uint8Array) && (t = f2.from(t, t.offset, t.byteLength)), !f2.isBuffer(t))
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);
      if (r === undefined && (r = 0), n === undefined && (n = t ? t.length : 0), i === undefined && (i = 0), o2 === undefined && (o2 = this.length), r < 0 || n > t.length || i < 0 || o2 > this.length)
        throw new RangeError("out of range index");
      if (i >= o2 && r >= n)
        return 0;
      if (i >= o2)
        return -1;
      if (r >= n)
        return 1;
      if (r >>>= 0, n >>>= 0, i >>>= 0, o2 >>>= 0, this === t)
        return 0;
      let a3 = o2 - i, s2 = n - r, u3 = Math.min(a3, s2), l3 = this.slice(i, o2), h4 = t.slice(r, n);
      for (let c2 = 0;c2 < u3; ++c2)
        if (l3[c2] !== h4[c2]) {
          a3 = l3[c2], s2 = h4[c2];
          break;
        }
      return a3 < s2 ? -1 : s2 < a3 ? 1 : 0;
    };
    function Vr(e, t, r, n, i) {
      if (e.length === 0)
        return -1;
      if (typeof r == "string" ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, It(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
        if (i)
          return -1;
        r = e.length - 1;
      } else if (r < 0)
        if (i)
          r = 0;
        else
          return -1;
      if (typeof t == "string" && (t = f2.from(t, n)), f2.isBuffer(t))
        return t.length === 0 ? -1 : jr(e, t, r, n, i);
      if (typeof t == "number")
        return t = t & 255, typeof Uint8Array.prototype.indexOf == "function" ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : jr(e, [t], r, n, i);
      throw new TypeError("val must be string, number or Buffer");
    }
    function jr(e, t, r, n, i) {
      let o2 = 1, a3 = e.length, s2 = t.length;
      if (n !== undefined && (n = String(n).toLowerCase(), n === "ucs2" || n === "ucs-2" || n === "utf16le" || n === "utf-16le")) {
        if (e.length < 2 || t.length < 2)
          return -1;
        o2 = 2, a3 /= 2, s2 /= 2, r /= 2;
      }
      function u3(h4, c2) {
        return o2 === 1 ? h4[c2] : h4.readUInt16BE(c2 * o2);
      }
      let l3;
      if (i) {
        let h4 = -1;
        for (l3 = r;l3 < a3; l3++)
          if (u3(e, l3) === u3(t, h4 === -1 ? 0 : l3 - h4)) {
            if (h4 === -1 && (h4 = l3), l3 - h4 + 1 === s2)
              return h4 * o2;
          } else
            h4 !== -1 && (l3 -= l3 - h4), h4 = -1;
      } else
        for (r + s2 > a3 && (r = a3 - s2), l3 = r;l3 >= 0; l3--) {
          let h4 = true;
          for (let c2 = 0;c2 < s2; c2++)
            if (u3(e, l3 + c2) !== u3(t, c2)) {
              h4 = false;
              break;
            }
          if (h4)
            return l3;
        }
      return -1;
    }
    f2.prototype.includes = function(t, r, n) {
      return this.indexOf(t, r, n) !== -1;
    };
    f2.prototype.indexOf = function(t, r, n) {
      return Vr(this, t, r, n, true);
    };
    f2.prototype.lastIndexOf = function(t, r, n) {
      return Vr(this, t, r, n, false);
    };
    function wo2(e, t, r, n) {
      r = Number(r) || 0;
      let i = e.length - r;
      n ? (n = Number(n), n > i && (n = i)) : n = i;
      let o2 = t.length;
      n > o2 / 2 && (n = o2 / 2);
      let a3;
      for (a3 = 0;a3 < n; ++a3) {
        let s2 = parseInt(t.substr(a3 * 2, 2), 16);
        if (It(s2))
          return a3;
        e[r + a3] = s2;
      }
      return a3;
    }
    function mo(e, t, r, n) {
      return Ge(Tt3(t, e.length - r), e, r, n);
    }
    function bo(e, t, r, n) {
      return Ge(Lo(t), e, r, n);
    }
    function _o(e, t, r, n) {
      return Ge(tn2(t), e, r, n);
    }
    function vo(e, t, r, n) {
      return Ge(Mo2(t, e.length - r), e, r, n);
    }
    f2.prototype.write = function(t, r, n, i) {
      if (r === undefined)
        i = "utf8", n = this.length, r = 0;
      else if (n === undefined && typeof r == "string")
        i = r, n = this.length, r = 0;
      else if (isFinite(r))
        r = r >>> 0, isFinite(n) ? (n = n >>> 0, i === undefined && (i = "utf8")) : (i = n, n = undefined);
      else
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      let o2 = this.length - r;
      if ((n === undefined || n > o2) && (n = o2), t.length > 0 && (n < 0 || r < 0) || r > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      i || (i = "utf8");
      let a3 = false;
      for (;; )
        switch (i) {
          case "hex":
            return wo2(this, t, r, n);
          case "utf8":
          case "utf-8":
            return mo(this, t, r, n);
          case "ascii":
          case "latin1":
          case "binary":
            return bo(this, t, r, n);
          case "base64":
            return _o(this, t, r, n);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return vo(this, t, r, n);
          default:
            if (a3)
              throw new TypeError("Unknown encoding: " + i);
            i = ("" + i).toLowerCase(), a3 = true;
        }
    };
    f2.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function Eo(e, t, r) {
      return t === 0 && r === e.length ? xt.fromByteArray(e) : xt.fromByteArray(e.slice(t, r));
    }
    function Yr2(e, t, r) {
      r = Math.min(e.length, r);
      let n = [], i = t;
      for (;i < r; ) {
        let o2 = e[i], a3 = null, s2 = o2 > 239 ? 4 : o2 > 223 ? 3 : o2 > 191 ? 2 : 1;
        if (i + s2 <= r) {
          let u3, l3, h4, c2;
          switch (s2) {
            case 1:
              o2 < 128 && (a3 = o2);
              break;
            case 2:
              u3 = e[i + 1], (u3 & 192) === 128 && (c2 = (o2 & 31) << 6 | u3 & 63, c2 > 127 && (a3 = c2));
              break;
            case 3:
              u3 = e[i + 1], l3 = e[i + 2], (u3 & 192) === 128 && (l3 & 192) === 128 && (c2 = (o2 & 15) << 12 | (u3 & 63) << 6 | l3 & 63, c2 > 2047 && (c2 < 55296 || c2 > 57343) && (a3 = c2));
              break;
            case 4:
              u3 = e[i + 1], l3 = e[i + 2], h4 = e[i + 3], (u3 & 192) === 128 && (l3 & 192) === 128 && (h4 & 192) === 128 && (c2 = (o2 & 15) << 18 | (u3 & 63) << 12 | (l3 & 63) << 6 | h4 & 63, c2 > 65535 && c2 < 1114112 && (a3 = c2));
          }
        }
        a3 === null ? (a3 = 65533, s2 = 1) : a3 > 65535 && (a3 -= 65536, n.push(a3 >>> 10 & 1023 | 55296), a3 = 56320 | a3 & 1023), n.push(a3), i += s2;
      }
      return xo(n);
    }
    var Hr2 = 4096;
    function xo(e) {
      let t = e.length;
      if (t <= Hr2)
        return String.fromCharCode.apply(String, e);
      let r = "", n = 0;
      for (;n < t; )
        r += String.fromCharCode.apply(String, e.slice(n, n += Hr2));
      return r;
    }
    function Ro(e, t, r) {
      let n = "";
      r = Math.min(e.length, r);
      for (let i = t;i < r; ++i)
        n += String.fromCharCode(e[i] & 127);
      return n;
    }
    function So(e, t, r) {
      let n = "";
      r = Math.min(e.length, r);
      for (let i = t;i < r; ++i)
        n += String.fromCharCode(e[i]);
      return n;
    }
    function To(e, t, r) {
      let n = e.length;
      (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
      let i = "";
      for (let o2 = t;o2 < r; ++o2)
        i += Oo[e[o2]];
      return i;
    }
    function Ao(e, t, r) {
      let n = e.slice(t, r), i = "";
      for (let o2 = 0;o2 < n.length - 1; o2 += 2)
        i += String.fromCharCode(n[o2] + n[o2 + 1] * 256);
      return i;
    }
    f2.prototype.slice = function(t, r) {
      let n = this.length;
      t = ~~t, r = r === undefined ? n : ~~r, t < 0 ? (t += n, t < 0 && (t = 0)) : t > n && (t = n), r < 0 ? (r += n, r < 0 && (r = 0)) : r > n && (r = n), r < t && (r = t);
      let i = this.subarray(t, r);
      return Object.setPrototypeOf(i, f2.prototype), i;
    };
    function C2(e, t, r) {
      if (e % 1 !== 0 || e < 0)
        throw new RangeError("offset is not uint");
      if (e + t > r)
        throw new RangeError("Trying to access beyond buffer length");
    }
    f2.prototype.readUintLE = f2.prototype.readUIntLE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || C2(t, r, this.length);
      let i = this[t], o2 = 1, a3 = 0;
      for (;++a3 < r && (o2 *= 256); )
        i += this[t + a3] * o2;
      return i;
    };
    f2.prototype.readUintBE = f2.prototype.readUIntBE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || C2(t, r, this.length);
      let i = this[t + --r], o2 = 1;
      for (;r > 0 && (o2 *= 256); )
        i += this[t + --r] * o2;
      return i;
    };
    f2.prototype.readUint8 = f2.prototype.readUInt8 = function(t, r) {
      return t = t >>> 0, r || C2(t, 1, this.length), this[t];
    };
    f2.prototype.readUint16LE = f2.prototype.readUInt16LE = function(t, r) {
      return t = t >>> 0, r || C2(t, 2, this.length), this[t] | this[t + 1] << 8;
    };
    f2.prototype.readUint16BE = f2.prototype.readUInt16BE = function(t, r) {
      return t = t >>> 0, r || C2(t, 2, this.length), this[t] << 8 | this[t + 1];
    };
    f2.prototype.readUint32LE = f2.prototype.readUInt32LE = function(t, r) {
      return t = t >>> 0, r || C2(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + this[t + 3] * 16777216;
    };
    f2.prototype.readUint32BE = f2.prototype.readUInt32BE = function(t, r) {
      return t = t >>> 0, r || C2(t, 4, this.length), this[t] * 16777216 + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
    };
    f2.prototype.readBigUInt64LE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ie(t, this.length - 8);
      let i = r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24, o2 = this[++t] + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + n * 2 ** 24;
      return BigInt(i) + (BigInt(o2) << BigInt(32));
    });
    f2.prototype.readBigUInt64BE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ie(t, this.length - 8);
      let i = r * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t], o2 = this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + n;
      return (BigInt(i) << BigInt(32)) + BigInt(o2);
    });
    f2.prototype.readIntLE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || C2(t, r, this.length);
      let i = this[t], o2 = 1, a3 = 0;
      for (;++a3 < r && (o2 *= 256); )
        i += this[t + a3] * o2;
      return o2 *= 128, i >= o2 && (i -= Math.pow(2, 8 * r)), i;
    };
    f2.prototype.readIntBE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || C2(t, r, this.length);
      let i = r, o2 = 1, a3 = this[t + --i];
      for (;i > 0 && (o2 *= 256); )
        a3 += this[t + --i] * o2;
      return o2 *= 128, a3 >= o2 && (a3 -= Math.pow(2, 8 * r)), a3;
    };
    f2.prototype.readInt8 = function(t, r) {
      return t = t >>> 0, r || C2(t, 1, this.length), this[t] & 128 ? (255 - this[t] + 1) * -1 : this[t];
    };
    f2.prototype.readInt16LE = function(t, r) {
      t = t >>> 0, r || C2(t, 2, this.length);
      let n = this[t] | this[t + 1] << 8;
      return n & 32768 ? n | 4294901760 : n;
    };
    f2.prototype.readInt16BE = function(t, r) {
      t = t >>> 0, r || C2(t, 2, this.length);
      let n = this[t + 1] | this[t] << 8;
      return n & 32768 ? n | 4294901760 : n;
    };
    f2.prototype.readInt32LE = function(t, r) {
      return t = t >>> 0, r || C2(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
    };
    f2.prototype.readInt32BE = function(t, r) {
      return t = t >>> 0, r || C2(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
    };
    f2.prototype.readBigInt64LE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ie(t, this.length - 8);
      let i = this[t + 4] + this[t + 5] * 2 ** 8 + this[t + 6] * 2 ** 16 + (n << 24);
      return (BigInt(i) << BigInt(32)) + BigInt(r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24);
    });
    f2.prototype.readBigInt64BE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ie(t, this.length - 8);
      let i = (r << 24) + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t];
      return (BigInt(i) << BigInt(32)) + BigInt(this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + n);
    });
    f2.prototype.readFloatLE = function(t, r) {
      return t = t >>> 0, r || C2(t, 4, this.length), we.read(this, t, true, 23, 4);
    };
    f2.prototype.readFloatBE = function(t, r) {
      return t = t >>> 0, r || C2(t, 4, this.length), we.read(this, t, false, 23, 4);
    };
    f2.prototype.readDoubleLE = function(t, r) {
      return t = t >>> 0, r || C2(t, 8, this.length), we.read(this, t, true, 52, 8);
    };
    f2.prototype.readDoubleBE = function(t, r) {
      return t = t >>> 0, r || C2(t, 8, this.length), we.read(this, t, false, 52, 8);
    };
    function O4(e, t, r, n, i, o2) {
      if (!f2.isBuffer(e))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (t > i || t < o2)
        throw new RangeError('"value" argument is out of bounds');
      if (r + n > e.length)
        throw new RangeError("Index out of range");
    }
    f2.prototype.writeUintLE = f2.prototype.writeUIntLE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, n = n >>> 0, !i) {
        let s2 = Math.pow(2, 8 * n) - 1;
        O4(this, t, r, n, s2, 0);
      }
      let o2 = 1, a3 = 0;
      for (this[r] = t & 255;++a3 < n && (o2 *= 256); )
        this[r + a3] = t / o2 & 255;
      return r + n;
    };
    f2.prototype.writeUintBE = f2.prototype.writeUIntBE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, n = n >>> 0, !i) {
        let s2 = Math.pow(2, 8 * n) - 1;
        O4(this, t, r, n, s2, 0);
      }
      let o2 = n - 1, a3 = 1;
      for (this[r + o2] = t & 255;--o2 >= 0 && (a3 *= 256); )
        this[r + o2] = t / a3 & 255;
      return r + n;
    };
    f2.prototype.writeUint8 = f2.prototype.writeUInt8 = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 1, 255, 0), this[r] = t & 255, r + 1;
    };
    f2.prototype.writeUint16LE = f2.prototype.writeUInt16LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 65535, 0), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    f2.prototype.writeUint16BE = f2.prototype.writeUInt16BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 65535, 0), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    f2.prototype.writeUint32LE = f2.prototype.writeUInt32LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 4294967295, 0), this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = t & 255, r + 4;
    };
    f2.prototype.writeUint32BE = f2.prototype.writeUInt32BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 4294967295, 0), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    function Xr(e, t, r, n, i) {
      en(t, n, i, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2;
      let a3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, r;
    }
    function zr2(e, t, r, n, i) {
      en(t, n, i, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r + 7] = o2, o2 = o2 >> 8, e[r + 6] = o2, o2 = o2 >> 8, e[r + 5] = o2, o2 = o2 >> 8, e[r + 4] = o2;
      let a3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r + 3] = a3, a3 = a3 >> 8, e[r + 2] = a3, a3 = a3 >> 8, e[r + 1] = a3, a3 = a3 >> 8, e[r] = a3, r + 8;
    }
    f2.prototype.writeBigUInt64LE = ee(function(t, r = 0) {
      return Xr(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    f2.prototype.writeBigUInt64BE = ee(function(t, r = 0) {
      return zr2(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    f2.prototype.writeIntLE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, !i) {
        let u3 = Math.pow(2, 8 * n - 1);
        O4(this, t, r, n, u3 - 1, -u3);
      }
      let o2 = 0, a3 = 1, s2 = 0;
      for (this[r] = t & 255;++o2 < n && (a3 *= 256); )
        t < 0 && s2 === 0 && this[r + o2 - 1] !== 0 && (s2 = 1), this[r + o2] = (t / a3 >> 0) - s2 & 255;
      return r + n;
    };
    f2.prototype.writeIntBE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, !i) {
        let u3 = Math.pow(2, 8 * n - 1);
        O4(this, t, r, n, u3 - 1, -u3);
      }
      let o2 = n - 1, a3 = 1, s2 = 0;
      for (this[r + o2] = t & 255;--o2 >= 0 && (a3 *= 256); )
        t < 0 && s2 === 0 && this[r + o2 + 1] !== 0 && (s2 = 1), this[r + o2] = (t / a3 >> 0) - s2 & 255;
      return r + n;
    };
    f2.prototype.writeInt8 = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[r] = t & 255, r + 1;
    };
    f2.prototype.writeInt16LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 32767, -32768), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    f2.prototype.writeInt16BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 32767, -32768), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    f2.prototype.writeInt32LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 2147483647, -2147483648), this[r] = t & 255, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24, r + 4;
    };
    f2.prototype.writeInt32BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    f2.prototype.writeBigInt64LE = ee(function(t, r = 0) {
      return Xr(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    f2.prototype.writeBigInt64BE = ee(function(t, r = 0) {
      return zr2(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function Zr2(e, t, r, n, i, o2) {
      if (r + n > e.length)
        throw new RangeError("Index out of range");
      if (r < 0)
        throw new RangeError("Index out of range");
    }
    function Jr(e, t, r, n, i) {
      return t = +t, r = r >>> 0, i || Zr2(e, t, r, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), we.write(e, t, r, n, 23, 4), r + 4;
    }
    f2.prototype.writeFloatLE = function(t, r, n) {
      return Jr(this, t, r, true, n);
    };
    f2.prototype.writeFloatBE = function(t, r, n) {
      return Jr(this, t, r, false, n);
    };
    function Qr(e, t, r, n, i) {
      return t = +t, r = r >>> 0, i || Zr2(e, t, rwe.write(e, t, r, n, 52, 8), r + 8;
    }
    f2.prototype.writeDoubleLE = function(t, r, n) {
      return Qr(this, t, r, true, n);
    };
    f2.prototype.writeDoubleBE = function(t, r, n) {
      return Qr(this, t, r, false, n);
    };
    f2.prototype.copy = function(t, r, n, i) {
      if (!f2.isBuffer(t))
        throw new TypeError("argument should be a Buffer");
      if (n || (n = 0), !i && i !== 0 && (i = this.length), r >= t.length && (r = t.length), r || (r = 0), i > 0 && i < n && (i = n), i === n || t.length === 0 || this.length === 0)
        return 0;
      if (r < 0)
        throw new RangeError("targetStart out of bounds");
      if (n < 0 || n >= this.length)
        throw new RangeError("Index out of range");
      if (i < 0)
        throw new RangeError("sourceEnd out of bounds");
      i > this.length && (i = this.length), t.length - r < i - n && (i = t.length - r + n);
      let o2 = i - n;
      return this === t && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(r, n, i) : Uint8Array.prototype.set.call(t, this.subarray(n, i), r), o2;
    };
    f2.prototype.fill = function(t, r, n, i) {
      if (typeof t == "string") {
        if (typeof r == "string" ? (i = r, r = 0, n = this.length) : typeof n == "string" && (i = n, n = this.length), i !== undefined && typeof i != "string")
          throw new TypeError("encoding must be a string");
        if (typeof i == "string" && !f2.isEncoding(i))
          throw new TypeError("Unknown encoding: " + i);
        if (t.length === 1) {
          let a3 = t.charCodeAt(0);
          (i === "utf8" && a3 < 128 || i === "latin1") && (t = a3);
        }
      } else
        typeof t == "number" ? t = t & 255 : typeof t == "boolean" && (t = Number(t));
      if (r < 0 || this.length < r || this.length < n)
        throw new RangeError("Out of range index");
      if (n <= r)
        return this;
      r = r >>> 0, n = n === undefined ? this.length : n >>> 0, t || (t = 0);
      let o2;
      if (typeof t == "number")
        for (o2 = r;o2 < n; ++o2)
          this[o2] = t;
      else {
        let a3 = f2.isBuffer(t) ? t : f2.from(t, i), s2 = a3.length;
        if (s2 === 0)
          throw new TypeError('The value "' + t + '" is invalid for argument "value"');
        for (o2 = 0;o2 < n - r; ++o2)
          this[o2 + r] = a3[o2 % s2];
      }
      return this;
    };
    var ge = {};
    function Ct(e, t, r) {
      ge[e] = class extends r {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: t.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e}]`, this.stack, delete this.name;
        }
        get code() {
          return e;
        }
        set code(i) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: i, writable: true });
        }
        toString() {
          return `${this.name} [${e}]: ${this.message}`;
        }
      };
    }
    Ct("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
      return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError);
    Ct("ERR_INVALID_ARG_TYPE", function(e, t) {
      return `The "${e}" argument must be of type number. Received type ${typeof t}`;
    }, TypeError);
    Ct("ERR_OUT_OF_RANGE", function(e, t, r) {
      let n = `The value of "${e}" is out of range.`, i = r;
      return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? i = Wr(String(r)) : typeof r == "bigint" && (i = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = Wr(i)), i += "n"), n += ` It must be ${t}. Received ${i}`, n;
    }, RangeError);
    function Wr(e) {
      let t = "", r = e.length, n = e[0] === "-" ? 1 : 0;
      for (;r >= n + 4; r -= 3)
        t = `_${e.slice(r - 3, r)}${t}`;
      return `${e.slice(0, r)}${t}`;
    }
    function Bo(e, t, r) {
      me(t, "offset"), (e[t] === undefined || e[t + r] === undefined) && Ie(t, e.length - (r + 1));
    }
    function en(e, t, r, n, i, o2) {
      if (e > r || e < t) {
        let a3 = typeof t == "bigint" ? "n" : "", s2;
        throw o2 > 3 ? t === 0 || t === BigInt(0) ? s2 = `>= 0${a3} and < 2${a3} ** ${(o2 + 1) * 8}${a3}` : s2 = `>= -(2${a3} ** ${(o2 + 1) * 8 - 1}${a3}) and < 2 ** ${(o2 + 1) * 8 - 1}${a3}` : s2 = `>= ${t}${a3} and <= ${r}${a3}`, new ge.ERR_OUT_OF_RANGE("value", s2, e);
      }
      Bo(n, i, o2);
    }
    function me(e, t) {
      if (typeof e != "number")
        throw new ge.ERR_INVALID_ARG_TYPE(t, "number", e);
    }
    function Ie(e, t, r) {
      throw Math.floor(e) !== e ? (me(e, r), new ge.ERR_OUT_OF_RANGE(r || "offset", "an integer", e)) : t < 0 ? new ge.ERR_BUFFER_OUT_OF_BOUNDS : new ge.ERR_OUT_OF_RANGE(r || "offset", `>= ${r ? 1 : 0} and <= ${t}`, e);
    }
    var Co = /[^+/0-9A-Za-z-_]/g;
    function Io(e) {
      if (e = e.split("=")[0], e = e.trim().replace(Co, ""), e.length < 2)
        return "";
      for (;e.length % 4 !== 0; )
        e = e + "=";
      return e;
    }
    function Tt3(e, t) {
      t = t || 1 / 0;
      let r, n = e.length, i = null, o2 = [];
      for (let a3 = 0;a3 < n; ++a3) {
        if (r = e.charCodeAt(a3), r > 55295 && r < 57344) {
          if (!i) {
            if (r > 56319) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            } else if (a3 + 1 === n) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            }
            i = r;
            continue;
          }
          if (r < 56320) {
            (t -= 3) > -1 && o2.push(239, 191, 189), i = r;
            continue;
          }
          r = (i - 55296 << 10 | r - 56320) + 65536;
        } else
          i && (t -= 3) > -1 && o2.push(239, 191, 189);
        if (i = null, r < 128) {
          if ((t -= 1) < 0)
            break;
          o2.push(r);
        } else if (r < 2048) {
          if ((t -= 2) < 0)
            break;
          o2.push(r >> 6 | 192, r & 63 | 128);
        } else if (r < 65536) {
          if ((t -= 3) < 0)
            break;
          o2.push(r >> 12 | 224, r >> 6 & 63 | 128, r & 63 | 128);
        } else if (r < 1114112) {
          if ((t -= 4) < 0)
            break;
          o2.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, r & 63 | 128);
        } else
          throw new Error("Invalid code point");
      }
      return o2;
    }
    function Lo(e) {
      let t = [];
      for (let r = 0;r < e.length; ++r)
        t.push(e.charCodeAt(r) & 255);
      return t;
    }
    function Mo2(e, t) {
      let r, n, i, o2 = [];
      for (let a3 = 0;a3 < e.length && !((t -= 2) < 0); ++a3)
        r = e.charCodeAt(a3), n = r >> 8, i = r % 256, o2.push(i), o2.push(n);
      return o2;
    }
    function tn2(e) {
      return xt.toByteArray(Io(e));
    }
    function Ge(e, t, r, n) {
      let i;
      for (i = 0;i < n && !(i + r >= t.length || i >= e.length); ++i)
        t[i + r] = e[i];
      return i;
    }
    function W(e, t) {
      return e instanceof t || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === t.name;
    }
    function It(e) {
      return e !== e;
    }
    var Oo = function() {
      let e = "0123456789abcdef", t = new Array(256);
      for (let r = 0;r < 16; ++r) {
        let n = r * 16;
        for (let i = 0;i < 16; ++i)
          t[n + i] = e[r] + e[i];
      }
      return t;
    }();
    function ee(e) {
      return typeof BigInt > "u" ? Fo : e;
    }
    function Fo() {
      throw new Error("BigInt not supported");
    }
  });
  Lt2 = b4(() => {
  });
  an = b4((Of, on) => {
    function rn(e, t) {
      var r = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e);
        t && (n = n.filter(function(i) {
          return Object.getOwnPropertyDescriptor(e, i).enumerable;
        })), r.push.apply(r, n);
      }
      return r;
    }
    function No(e) {
      for (var t = 1;t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {};
        t % 2 ? rn(Object(r), true).forEach(function(n) {
          Uo(e, n, r[n]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : rn(Object(r)).forEach(function(n) {
          Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
        });
      }
      return e;
    }
    function Uo(e, t, r) {
      return t in e ? Object.defineProperty(e, t, { value: r, enumerable: true, configurable: true, writable: true }) : e[t] = r, e;
    }
    function Po(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function nn(e, t) {
      for (var r = 0;r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, n.key, n);
      }
    }
    function qo(e, t, r) {
      return t && nn(e.prototype, t), r && nn(e, r), e;
    }
    var Do = _e(), Ke = Do.Buffer, ko = Lt2(), Mt = ko.inspect, jo = Mt && Mt.custom || "inspect";
    function Ho(e, t, r) {
      Ke.prototype.copy.call(e, t, r);
    }
    on.exports = function() {
      function e() {
        Po(this, e), this.head = null, this.tail = null, this.length = 0;
      }
      return qo(e, [{ key: "push", value: function(r) {
        var n = { data: r, next: null };
        this.length > 0 ? this.tail.next = n : this.head = n, this.tail = n, ++this.length;
      } }, { key: "unshift", value: function(r) {
        var n = { data: r, next: this.head };
        this.length === 0 && (this.tail = n), this.head = n, ++this.length;
      } }, { key: "shift", value: function() {
        if (this.length !== 0) {
          var r = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r;
        }
      } }, { key: "clear", value: function() {
        this.head = this.tail = null, this.length = 0;
      } }, { key: "join", value: function(r) {
        if (this.length === 0)
          return "";
        for (var n = this.head, i = "" + n.data;n = n.next; )
          i += r + n.data;
        return i;
      } }, { key: "concat", value: function(r) {
        if (this.length === 0)
          return Ke.alloc(0);
        for (var n = Ke.allocUnsafe(r >>> 0), i = this.head, o2 = 0;i; )
          Ho(i.data, n, o2), o2 += i.data.length, i = i.next;
        return n;
      } }, { key: "consume", value: function(r, n) {
        var i;
        return r < this.head.data.length ? (i = this.head.data.slice(0, r), this.head.data = this.head.data.slice(r)) : r === this.head.data.length ? i = this.shift() : i = n ? this._getString(r) : this._getBuffer(r), i;
      } }, { key: "first", value: function() {
        return this.head.data;
      } }, { key: "_getString", value: function(r) {
        var n = this.head, i = 1, o2 = n.data;
        for (r -= o2.length;n = n.next; ) {
          var a3 = n.data, s2 = r > a3.length ? a3.length : r;
          if (s2 === a3.length ? o2 += a3 : o2 += a3.slice(0, r), r -= s2, r === 0) {
            s2 === a3.length ? (++i, n.next ? this.head = n.next : this.head = this.tail = null) : (this.head = n, n.data = a3.slice(s2));
            break;
          }
          ++i;
        }
        return this.length -= i, o2;
      } }, { key: "_getBuffer", value: function(r) {
        var n = Ke.allocUnsafe(r), i = this.head, o2 = 1;
        for (i.data.copy(n), r -= i.data.length;i = i.next; ) {
          var a3 = i.data, s2 = r > a3.length ? a3.length : r;
          if (a3.copy(n, n.length - r, 0, s2), r -= s2, r === 0) {
            s2 === a3.length ? (++o2, i.next ? this.head = i.next : this.head = this.tail = null) : (this.head = i, i.data = a3.slice(s2));
            break;
          }
          ++o2;
        }
        return this.length -= o2, n;
      } }, { key: jo, value: function(r, n) {
        return Mt(this, No({}, n, { depth: 0, customInspect: false }));
      } }]), e;
    }();
  });
  Ft = b4((Ff, fn) => {
    function Wo(e, t) {
      var r = this, n = this._readableState && this._readableState.destroyed, i = this._writableState && this._writableState.destroyed;
      return n || i ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(Ot, this, e)) : process.nextTick(Ot, this, e)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e || null, function(o2) {
        !t && o2 ? r._writableState ? r._writableState.errorEmitted ? process.nextTick(Ve, r) : (r._writableState.errorEmitted = true, process.nextTick(sn, r, o2)) : process.nextTick(sn, r, o2) : t ? (process.nextTick(Ve, r), t(o2)) : process.nextTick(Ve, r);
      }), this);
    }
    function sn(e, t) {
      Ot(e, t), Ve(e);
    }
    function Ve(e) {
      e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close");
    }
    function $o() {
      this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
    }
    function Ot(e, t) {
      e.emit("error", t);
    }
    function Go(e, t) {
      var { _readableState: r, _writableState: n } = e;
      r && r.autoDestroy || n && n.autoDestroy ? e.destroy(t) : e.emit("error", t);
    }
    fn.exports = { destroy: Wo, undestroy: $o, errorOrDestroy: Go };
  });
  fe = b4((Nf, hn) => {
    function Ko(e, t) {
      e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t;
    }
    var ln = {};
    function P4(e, t, r) {
      r || (r = Error);
      function n(o2, a3, s2) {
        return typeof t == "string" ? t : t(o2, a3, s2);
      }
      var i = function(o2) {
        Ko(a3, o2);
        function a3(s2, u3, l3) {
          return o2.call(this, n(s2, u3, l3)) || this;
        }
        return a3;
      }(r);
      i.prototype.name = r.name, i.prototype.code = e, ln[e] = i;
    }
    function un2(e, t) {
      if (Array.isArray(e)) {
        var r = e.length;
        return e = e.map(function(n) {
          return String(n);
        }), r > 2 ? "one of ".concat(t, " ").concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1] : r === 2 ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0]);
      } else
        return "of ".concat(t, " ").concat(String(e));
    }
    function Vo(e, t, r) {
      return e.substr(!r || r < 0 ? 0 : +r, t.length) === t;
    }
    function Yo(e, t, r) {
      return (r === undefined || r > e.length) && (r = e.length), e.substring(r - t.length, r) === t;
    }
    function Xo(e, t, r) {
      return typeof r != "number" && (r = 0), r + t.length > e.length ? false : e.indexOf(t, r) !== -1;
    }
    P4("ERR_INVALID_OPT_VALUE", function(e, t) {
      return 'The value "' + t + '" is invalid for option "' + e + '"';
    }, TypeError);
    P4("ERR_INVALID_ARG_TYPE", function(e, t, r) {
      var n;
      typeof t == "string" && Vo(t, "not ") ? (n = "must not be", t = t.replace(/^not /, "")) : n = "must be";
      var i;
      if (Yo(e, " argument"))
        i = "The ".concat(e, " ").concat(n, " ").concat(un2(t, "type"));
      else {
        var o2 = Xo(e, ".") ? "property" : "argument";
        i = 'The "'.concat(e, '" ').concat(o2, " ").concat(n, " ").concat(un2(t, "type"));
      }
      return i += ". Received type ".concat(typeof r), i;
    }, TypeError);
    P4("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    P4("ERR_METHOD_NOT_IMPLEMENTED", function(e) {
      return "The " + e + " method is not implemented";
    });
    P4("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    P4("ERR_STREAM_DESTROYED", function(e) {
      return "Cannot call " + e + " after a stream was destroyed";
    });
    P4("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    P4("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    P4("ERR_STREAM_WRITE_AFTER_END", "write after end");
    P4("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    P4("ERR_UNKNOWN_ENCODING", function(e) {
      return "Unknown encoding: " + e;
    }, TypeError);
    P4("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    hn.exports.codes = ln;
  });
  Nt2 = b4((Uf, cn) => {
    var zo = fe().codes.ERR_INVALID_OPT_VALUE;
    function Zo(e, t, r) {
      return e.highWaterMark != null ? e.highWaterMark : t ? e[r] : null;
    }
    function Jo(e, t, r, n) {
      var i = Zo(t, n, r);
      if (i != null) {
        if (!(isFinite(i) && Math.floor(i) === i) || i < 0) {
          var o2 = n ? r : "highWaterMark";
          throw new zo(o2, i);
        }
        return Math.floor(i);
      }
      return e.objectMode ? 16 : 16 * 1024;
    }
    cn.exports = { getHighWaterMark: Jo };
  });
  pn = b4((Pf, dn) => {
    dn.exports = Qo2;
    function Qo2(e, t) {
      if (Ut2("noDeprecation"))
        return e;
      var r = false;
      function n() {
        if (!r) {
          if (Ut2("throwDeprecation"))
            throw new Error(t);
          Ut2("traceDeprecation") ? console.trace(t) : console.warn(t), r = true;
        }
        return e.apply(this, arguments);
      }
      return n;
    }
    function Ut2(e) {
      try {
        if (!global.localStorage)
          return false;
      } catch {
        return false;
      }
      var t = global.localStorage[e];
      return t == null ? false : String(t).toLowerCase() === "true";
    }
  });
  Dt = b4((qf, _n) => {
    _n.exports = A3;
    function gn(e) {
      var t = this;
      this.next = null, this.entry = null, this.finish = function() {
        Ta(t, e);
      };
    }
    var ve;
    A3.WritableState = Me;
    var ea = { deprecate: pn() }, wn = _t2(), Xe = _e().Buffer, ta = global.Uint8Array || function() {
    };
    function ra(e) {
      return Xe.from(e);
    }
    function na(e) {
      return Xe.isBuffer(e) || e instanceof ta;
    }
    var qt = Ft(), ia = Nt2(), oa = ia.getHighWaterMark, te = fe().codes, aa = te.ERR_INVALID_ARG_TYPE, sa = te.ERR_METHOD_NOT_IMPLEMENTED, fa = te.ERR_MULTIPLE_CALLBACK, ua = te.ERR_STREAM_CANNOT_PIPE, la = te.ERR_STREAM_DESTROYED, ha = te.ERR_STREAM_NULL_VALUES, ca = te.ERR_STREAM_WRITE_AFTER_END, da2 = te.ERR_UNKNOWN_ENCODING, Ee = qt.errorOrDestroy;
    Q2()(A3, wn);
    function pa() {
    }
    function Me(e, t, r) {
      ve = ve || ue(), e = e || {}, typeof r != "boolean" && (r = t instanceof ve), this.objectMode = !!e.objectMode, r && (this.objectMode = this.objectMode || !!e.writableObjectMode), this.highWaterMark = oa(this, e, "writableHighWaterMark", r), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      var n = e.decodeStrings === false;
      this.decodeStrings = !n, this.defaultEncoding = e.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(i) {
        va2(t, i);
      }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = e.emitClose !== false, this.autoDestroy = !!e.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new gn(this);
    }
    Me.prototype.getBuffer = function() {
      for (var t = this.bufferedRequest, r = [];t; )
        r.push(t), t = t.next;
      return r;
    };
    (function() {
      try {
        Object.defineProperty(Me.prototype, "buffer", { get: ea.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
      } catch {
      }
    })();
    var Ye;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (Ye = Function.prototype[Symbol.hasInstance], Object.defineProperty(A3, Symbol.hasInstance, { value: function(t) {
      return Ye.call(this, t) ? true : this !== A3 ? false : t && t._writableState instanceof Me;
    } })) : Ye = function(t) {
      return t instanceof this;
    };
    function A3(e) {
      ve = ve || ue();
      var t = this instanceof ve;
      if (!t && !Ye.call(A3, this))
        return new A3(e);
      this._writableState = new Me(e, this, t), this.writable = true, e && (typeof e.write == "function" && (this._write = e.write), typeof e.writev == "function" && (this._writev = e.writev), typeof e.destroy == "function" && (this._destroy = e.destroy), typeof e.final == "function" && (this._final = e.final)), wn.call(this);
    }
    A3.prototype.pipe = function() {
      Ee(this, new ua);
    };
    function ya(e, t) {
      var r = new ca;
      Ee(e, r), process.nextTick(t, r);
    }
    function ga(e, t, r, n) {
      var i;
      return r === null ? i = new ha : typeof r != "string" && !t.objectMode && (i = new aa("chunk", ["string", "Buffer"], r)), i ? (Ee(e, i), process.nextTick(n, i), false) : true;
    }
    A3.prototype.write = function(e, t, r) {
      var n = this._writableState, i = false, o2 = !n.objectMode && na(e);
      return o2 && !Xe.isBuffer(e) && (e = ra(e)), typeof t == "function" && (r = t, t = null), o2 ? t = "buffer" : t || (t = n.defaultEncoding), typeof r != "function" && (r = pa), n.ending ? ya(this, r) : (o2 || ga(this, n, e, r)) && (n.pendingcb++, i = ma(this, n, o2, e, t, r)), i;
    };
    A3.prototype.cork = function() {
      this._writableState.corked++;
    };
    A3.prototype.uncork = function() {
      var e = this._writableState;
      e.corked && (e.corked--, !e.writing && !e.corked && !e.bufferProcessing && e.bufferedRequest && mn(this, e));
    };
    A3.prototype.setDefaultEncoding = function(t) {
      if (typeof t == "string" && (t = t.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1))
        throw new da2(t);
      return this._writableState.defaultEncoding = t, this;
    };
    Object.defineProperty(A3.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    function wa2(e, t, r) {
      return !e.objectMode && e.decodeStrings !== false && typeof t == "string" && (t = Xe.from(t, r)), t;
    }
    Object.defineProperty(A3.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    function ma(e, t, r, n, i, o2) {
      if (!r) {
        var a3 = wa2(t, n, i);
        n !== a3 && (r = true, i = "buffer", n = a3);
      }
      var s2 = t.objectMode ? 1 : n.length;
      t.length += s2;
      var u3 = t.length < t.highWaterMark;
      if (u3 || (t.needDrain = true), t.writing || t.corked) {
        var l3 = t.lastBufferedRequest;
        t.lastBufferedRequest = { chunk: n, encoding: i, isBuf: r, callback: o2, next: null }, l3 ? l3.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1;
      } else
        Pt(e, t, false, s2, n, i, o2);
      return u3;
    }
    function Pt(e, t, r, n, i, o2, a3) {
      t.writelen = n, t.writecb = a3, t.writing = true, t.sync = true, t.destroyed ? t.onwrite(new la("write")) : r ? e._writev(i, t.onwrite) : e._write(i, o2, t.onwrite), t.sync = false;
    }
    function ba(e, t, r, n, i) {
      --t.pendingcb, r ? (process.nextTick(i, n), process.nextTick(Le, e, t), e._writableState.errorEmitted = true, Ee(e, n)) : (i(n), e._writableState.errorEmitted = true, Ee(e, n), Le(e, t));
    }
    function _a(e) {
      e.writing = false, e.writecb = null, e.length -= e.writelen, e.writelen = 0;
    }
    function va2(e, t) {
      var r = e._writableState, n = r.sync, i = r.writecb;
      if (typeof i != "function")
        throw new fa;
      if (_a(r), t)
        ba(e, r, n, t, i);
      else {
        var o2 = bn(r) || e.destroyed;
        !o2 && !r.corked && !r.bufferProcessing && r.bufferedRequest && mn(e, r), n ? process.nextTick(yn2, e, r, o2, i) : yn2(e, r, o2, i);
      }
    }
    function yn2(e, t, r, n) {
      r || Ea(e, t), t.pendingcb--, n(), Le(e, t);
    }
    function Ea(e, t) {
      t.length === 0 && t.needDrain && (t.needDrain = false, e.emit("drain"));
    }
    function mn(e, t) {
      t.bufferProcessing = true;
      var r = t.bufferedRequest;
      if (e._writev && r && r.next) {
        var n = t.bufferedRequestCount, i = new Array(n), o2 = t.corkedRequestsFree;
        o2.entry = r;
        for (var a3 = 0, s2 = true;r; )
          i[a3] = r, r.isBuf || (s2 = false), r = r.next, a3 += 1;
        i.allBuffers = s2, Pt(e, t, true, t.length, i, "", o2.finish), t.pendingcb++, t.lastBufferedRequest = null, o2.next ? (t.corkedRequestsFree = o2.next, o2.next = null) : t.corkedRequestsFree = new gn(t), t.bufferedRequestCount = 0;
      } else {
        for (;r; ) {
          var { chunk: u3, encoding: l3, callback: h4 } = r, c2 = t.objectMode ? 1 : u3.length;
          if (Pt(e, t, false, c2, u3, l3, h4), r = r.next, t.bufferedRequestCount--, t.writing)
            break;
        }
        r === null && (t.lastBufferedRequest = null);
      }
      t.bufferedRequest = r, t.bufferProcessing = false;
    }
    A3.prototype._write = function(e, t, r) {
      r(new sa("_write()"));
    };
    A3.prototype._writev = null;
    A3.prototype.end = function(e, t, r) {
      var n = this._writableState;
      return typeof e == "function" ? (r = e, e = null, t = null) : typeof t == "function" && (r = t, t = null), e != null && this.write(e, t), n.corked && (n.corked = 1, this.uncork()), n.ending || Sa(this, n, r), this;
    };
    Object.defineProperty(A3.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function bn(e) {
      return e.ending && e.length === 0 && e.bufferedRequest === null && !e.finished && !e.writing;
    }
    function xa(e, t) {
      e._final(function(r) {
        t.pendingcb--, r && Ee(e, r), t.prefinished = true, e.emit("prefinish"), Le(e, t);
      });
    }
    function Ra(e, t) {
      !t.prefinished && !t.finalCalled && (typeof e._final == "function" && !t.destroyed ? (t.pendingcb++, t.finalCalled = true, process.nextTick(xa, e, t)) : (t.prefinished = true, e.emit("prefinish")));
    }
    function Le(e, t) {
      var r = bn(t);
      if (r && (Ra(e, t), t.pendingcb === 0 && (t.finished = true, e.emit("finish"), t.autoDestroy))) {
        var n = e._readableState;
        (!n || n.autoDestroy && n.endEmitted) && e.destroy();
      }
      return r;
    }
    function Sa(e, t, r) {
      t.ending = true, Le(e, t), r && (t.finished ? process.nextTick(r) : e.once("finish", r)), t.ended = true, e.writable = false;
    }
    function Ta(e, t, r) {
      var n = e.entry;
      for (e.entry = null;n; ) {
        var i = n.callback;
        t.pendingcb--, i(r), n = n.next;
      }
      t.corkedRequestsFree.next = e;
    }
    Object.defineProperty(A3.prototype, "destroyed", { enumerable: false, get: function() {
      return this._writableState === undefined ? false : this._writableState.destroyed;
    }, set: function(t) {
      !this._writableState || (this._writableState.destroyed = t);
    } });
    A3.prototype.destroy = qt.destroy;
    A3.prototype._undestroy = qt.undestroy;
    A3.prototype._destroy = function(e, t) {
      t(e);
    };
  });
  ue = b4((Df, En) => {
    var Aa = Object.keys || function(e) {
      var t = [];
      for (var r in e)
        t.push(r);
      return t;
    };
    En.exports = $3;
    var vn = Ht(), jt = Dt();
    Q2()($3, vn);
    for (kt2 = Aa(jt.prototype), ze = 0;ze < kt2.length; ze++)
      Ze = kt2[ze], $3.prototype[Ze] || ($3.prototype[Ze] = jt.prototype[Ze]);
    var kt2, Ze, ze;
    function $3(e) {
      if (!(this instanceof $3))
        return new $3(e);
      vn.call(this, e), jt.call(this, e), this.allowHalfOpen = true, e && (e.readable === false && (this.readable = false), e.writable === false && (this.writable = false), e.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", Ba)));
    }
    Object.defineProperty($3.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    Object.defineProperty($3.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    Object.defineProperty($3.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function Ba() {
      this._writableState.ended || process.nextTick(Ca, this);
    }
    function Ca(e) {
      e.end();
    }
    Object.defineProperty($3.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set: function(t) {
      this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = t, this._writableState.destroyed = t);
    } });
  });
  Sn = b4((Wt, Rn) => {
    var Je = _e(), G2 = Je.Buffer;
    function xn(e, t) {
      for (var r in e)
        t[r] = e[r];
    }
    G2.from && G2.alloc && G2.allocUnsafe && G2.allocUnsafeSlow ? Rn.exports = Je : (xn(Je, Wt), Wt.Buffer = le);
    function le(e, t, r) {
      return G2(e, t, r);
    }
    le.prototype = Object.create(G2.prototype);
    xn(G2, le);
    le.from = function(e, t, r) {
      if (typeof e == "number")
        throw new TypeError("Argument must not be a number");
      return G2(e, t, r);
    };
    le.alloc = function(e, t, r) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      var n = G2(e);
      return t !== undefined ? typeof r == "string" ? n.fill(t, r) : n.fill(t) : n.fill(0), n;
    };
    le.allocUnsafe = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return G2(e);
    };
    le.allocUnsafeSlow = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return Je.SlowBuffer(e);
    };
  });
  Bn2 = b4((An) => {
    var Gt = Sn().Buffer, Tn2 = Gt.isEncoding || function(e) {
      switch (e = "" + e, e && e.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return true;
        default:
          return false;
      }
    };
    function Ia2(e) {
      if (!e)
        return "utf8";
      for (var t;; )
        switch (e) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return e;
          default:
            if (t)
              return;
            e = ("" + e).toLowerCase(), t = true;
        }
    }
    function La(e) {
      var t = Ia2(e);
      if (typeof t != "string" && (Gt.isEncoding === Tn2 || !Tn2(e)))
        throw new Error("Unknown encoding: " + e);
      return t || e;
    }
    An.StringDecoder = Oe;
    function Oe(e) {
      this.encoding = La(e);
      var t;
      switch (this.encoding) {
        case "utf16le":
          this.text = Pa, this.end = qa, t = 4;
          break;
        case "utf8":
          this.fillLast = Fa, t = 4;
          break;
        case "base64":
          this.text = Da, this.end = ka2, t = 3;
          break;
        default:
          this.write = ja, this.end = Ha;
          return;
      }
      this.lastNeed = 0, this.lastTotal = 0, this.lastChar = Gt.allocUnsafe(t);
    }
    Oe.prototype.write = function(e) {
      if (e.length === 0)
        return "";
      var t, r;
      if (this.lastNeed) {
        if (t = this.fillLast(e), t === undefined)
          return "";
        r = this.lastNeed, this.lastNeed = 0;
      } else
        r = 0;
      return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || "";
    };
    Oe.prototype.end = Ua;
    Oe.prototype.text = Na2;
    Oe.prototype.fillLast = function(e) {
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;
    };
    function $t(e) {
      return e <= 127 ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : e >> 6 === 2 ? -1 : -2;
    }
    function Ma(e, t, r) {
      var n = t.length - 1;
      if (n < r)
        return 0;
      var i = $t(t[n]);
      return i >= 0 ? (i > 0 && (e.lastNeed = i - 1), i) : --n < r || i === -2 ? 0 : (i = $t(t[n]), i >= 0 ? (i > 0 && (e.lastNeed = i - 2), i) : --n < r || i === -2 ? 0 : (i = $t(t[n]), i >= 0 ? (i > 0 && (i === 2 ? i = 0 : e.lastNeed = i - 3), i) : 0));
    }
    function Oa(e, t, r) {
      if ((t[0] & 192) !== 128)
        return e.lastNeed = 0, "�";
      if (e.lastNeed > 1 && t.length > 1) {
        if ((t[1] & 192) !== 128)
          return e.lastNeed = 1, "�";
        if (e.lastNeed > 2 && t.length > 2 && (t[2] & 192) !== 128)
          return e.lastNeed = 2, "�";
      }
    }
    function Fa(e) {
      var t = this.lastTotal - this.lastNeed, r = Oa(this, e, t);
      if (r !== undefined)
        return r;
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, t, 0, e.length), this.lastNeed -= e.length;
    }
    function Na2(e, t) {
      var r = Ma(this, e, t);
      if (!this.lastNeed)
        return e.toString("utf8", t);
      this.lastTotal = r;
      var n = e.length - (r - this.lastNeed);
      return e.copy(this.lastChar, 0, n), e.toString("utf8", t, n);
    }
    function Ua(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + "�" : t;
    }
    function Pa(e, t) {
      if ((e.length - t) % 2 === 0) {
        var r = e.toString("utf16le", t);
        if (r) {
          var n = r.charCodeAt(r.length - 1);
          if (n >= 55296 && n <= 56319)
            return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], r.slice(0, -1);
        }
        return r;
      }
      return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString("utf16le", t, e.length - 1);
    }
    function qa(e) {
      var t = e && e.length ? this.write(e) : "";
      if (this.lastNeed) {
        var r = this.lastTotal - this.lastNeed;
        return t + this.lastChar.toString("utf16le", 0, r);
      }
      return t;
    }
    function Da(e, t) {
      var r = (e.length - t) % 3;
      return r === 0 ? e.toString("base64", t) : (this.lastNeed = 3 - r, this.lastTotal = 3, r === 1 ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString("base64", t, e.length - r));
    }
    function ka2(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t;
    }
    function ja(e) {
      return e.toString(this.encoding);
    }
    function Ha(e) {
      return e && e.length ? this.write(e) : "";
    }
  });
  Kt = {};
  Er2(Kt, { StringDecoder: () => Qe.StringDecoder, default: () => Qe.StringDecoder });
  Vt = vr(() => {
    Qe = Rr2(Bn2());
  });
  et = b4((jf, Ln2) => {
    var Cn = fe().codes.ERR_STREAM_PREMATURE_CLOSE;
    function Wa2(e) {
      var t = false;
      return function() {
        if (!t) {
          t = true;
          for (var r = arguments.length, n = new Array(r), i = 0;i < r; i++)
            n[i] = arguments[i];
          e.apply(this, n);
        }
      };
    }
    function $a2() {
    }
    function Ga2(e) {
      return e.setHeader && typeof e.abort == "function";
    }
    function In(e, t, r) {
      if (typeof t == "function")
        return In(e, null, t);
      t || (t = {}), r = Wa2(r || $a2);
      var n = t.readable || t.readable !== false && e.readable, i = t.writable || t.writable !== false && e.writable, o2 = function() {
        e.writable || s2();
      }, a3 = e._writableState && e._writableState.finished, s2 = function() {
        i = false, a3 = true, n || r.call(e);
      }, u3 = e._readableState && e._readableState.endEmitted, l3 = function() {
        n = false, u3 = true, i || r.call(e);
      }, h4 = function(g5) {
        r.call(e, g5);
      }, c2 = function() {
        var g5;
        if (n && !u3)
          return (!e._readableState || !e._readableState.ended) && (g5 = new Cn), r.call(e, g5);
        if (i && !a3)
          return (!e._writableState || !e._writableState.ended) && (g5 = new Cn), r.call(e, g5);
      }, d3 = function() {
        e.req.on("finish", s2);
      };
      return Ga2(e) ? (e.on("complete", s2), e.on("abort", c2), e.req ? d3() : e.on("request", d3)) : i && !e._writableState && (e.on("end", o2), e.on("close", o2)), e.on("end", l3), e.on("finish", s2), t.error !== false && e.on("error", h4), e.on("close", c2), function() {
        e.removeListener("complete", s2), e.removeListener("abort", c2), e.removeListener("request", d3), e.req && e.req.removeListener("finish", s2), e.removeListener("end", o2), e.removeListener("close", o2), e.removeListener("finish", s2), e.removeListener("end", l3), e.removeListener("error", h4), e.removeListener("close", c2);
      };
    }
    Ln2.exports = In;
  });
  On = b4((Hf, Mn) => {
    var tt3;
    function re2(e, t, r) {
      return t in e ? Object.defineProperty(e, t, { value: r, enumerable: true, configurable: true, writable: true }) : e[t] = r, e;
    }
    var Ka = et(), ne2 = Symbol("lastResolve"), he = Symbol("lastReject"), Fe = Symbol("error"), rt3 = Symbol("ended"), ce2 = Symbol("lastPromise"), Yt = Symbol("handlePromise"), de = Symbol("stream");
    function ie(e, t) {
      return { value: e, done: t };
    }
    function Va(e) {
      var t = e[ne2];
      if (t !== null) {
        var r = e[de].read();
        r !== null && (e[ce2] = null, e[ne2] = null, e[he] = null, t(ie(r, false)));
      }
    }
    function Ya2(e) {
      process.nextTick(Va, e);
    }
    function Xa(e, t) {
      return function(r, n) {
        e.then(function() {
          if (t[rt3]) {
            r(ie(undefined, true));
            return;
          }
          t[Yt](r, n);
        }, n);
      };
    }
    var za = Object.getPrototypeOf(function() {
    }), Za = Object.setPrototypeOf((tt3 = { get stream() {
      return this[de];
    }, next: function() {
      var t = this, r = this[Fe];
      if (r !== null)
        return Promise.reject(r);
      if (this[rt3])
        return Promise.resolve(ie(undefined, true));
      if (this[de].destroyed)
        return new Promise(function(a3, s2) {
          process.nextTick(function() {
            t[Fe] ? s2(t[Fe]) : a3(ie(undefined, true));
          });
        });
      var n = this[ce2], i;
      if (n)
        i = new Promise(Xa(n, this));
      else {
        var o2 = this[de].read();
        if (o2 !== null)
          return Promise.resolve(ie(o2, false));
        i = new Promise(this[Yt]);
      }
      return this[ce2] = i, i;
    } }, re2(tt3, Symbol.asyncIterator, function() {
      return this;
    }), re2(tt3, "return", function() {
      var t = this;
      return new Promise(function(r, n) {
        t[de].destroy(null, function(i) {
          if (i) {
            n(i);
            return;
          }
          r(ie(undefined, true));
        });
      });
    }), tt3), za), Ja = function(t) {
      var r, n = Object.create(Za, (r = {}, re2(r, de, { value: t, writable: true }), re2(r, ne2, { value: null, writable: true }), re2(r, he, { value: null, writable: true }), re2(r, Fe, { value: null, writable: true }), re2(r, rt3, { value: t._readableState.endEmitted, writable: true }), re2(r, Yt, { value: function(o2, a3) {
        var s2 = n[de].read();
        s2 ? (n[ce2] = null, n[ne2] = null, n[he] = null, o2(ie(s2, false))) : (n[ne2] = o2, n[he] = a3);
      }, writable: true }), r));
      return n[ce2] = null, Ka(t, function(i) {
        if (i && i.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var o2 = n[he];
          o2 !== null && (n[ce2] = null, n[ne2] = null, n[he] = null, o2(i)), n[Fe] = i;
          return;
        }
        var a3 = n[ne2];
        a3 !== null && (n[ce2] = null, n[ne2] = null, n[he] = null, a3(ie(undefined, true))), n[rt3] = true;
      }), t.on("readable", Ya2.bind(null, n)), n;
    };
    Mn.exports = Ja;
  });
  Nn = b4((Wf, Fn) => {
    Fn.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  });
  Ht = b4((Gf, Gn) => {
    Gn.exports = _4;
    var xe2;
    _4.ReadableState = Dn2;
    var $f = bt2().EventEmitter, qn2 = function(t, r) {
      return t.listeners(r).length;
    }, Ue = _t2(), nt3 = _e().Buffer, Qa = global.Uint8Array || function() {
    };
    function es(e) {
      return nt3.from(e);
    }
    function ts(e) {
      return nt3.isBuffer(e) || e instanceof Qa;
    }
    var Xt = Lt2(), w3;
    Xt && Xt.debuglog ? w3 = Xt.debuglog("stream") : w3 = function() {
    };
    var rs = an(), rr2 = Ft(), ns = Nt2(), is = ns.getHighWaterMark, it2 = fe().codes, os = it2.ERR_INVALID_ARG_TYPE, as = it2.ERR_STREAM_PUSH_AFTER_EOF, ss = it2.ERR_METHOD_NOT_IMPLEMENTED, fs = it2.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, Re, zt, Zt;
    Q2()(_4, Ue);
    var Ne = rr2.errorOrDestroy, Jt = ["error", "close", "destroy", "pause", "resume"];
    function us(e, t, r) {
      if (typeof e.prependListener == "function")
        return e.prependListener(t, r);
      !e._events || !e._events[t] ? e.on(t, r) : Array.isArray(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [r, e._events[t]];
    }
    function Dn2(e, t, r) {
      xe2 = xe2 || ue(), e = e || {}, typeof r != "boolean" && (r = t instanceof xe2), this.objectMode = !!e.objectMode, r && (this.objectMode = this.objectMode || !!e.readableObjectMode), this.highWaterMark = is(this, e, "readableHighWaterMark", r), this.buffer = new rs, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = e.emitClose !== false, this.autoDestroy = !!e.autoDestroy, this.destroyed = false, this.defaultEncoding = e.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e.encoding && (Re || (Re = (Vt(), dt2(Kt)).StringDecoder), this.decoder = new Re(e.encoding), this.encoding = e.encoding);
    }
    function _4(e) {
      if (xe2 = xe2 || ue(), !(this instanceof _4))
        return new _4(e);
      var t = this instanceof xe2;
      this._readableState = new Dn2(e, this, t), this.readable = true, e && (typeof e.read == "function" && (this._read = e.read), typeof e.destroy == "function" && (this._destroy = e.destroy)), Ue.call(this);
    }
    Object.defineProperty(_4.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined ? false : this._readableState.destroyed;
    }, set: function(t) {
      !this._readableState || (this._readableState.destroyed = t);
    } });
    _4.prototype.destroy = rr2.destroy;
    _4.prototype._undestroy = rr2.undestroy;
    _4.prototype._destroy = function(e, t) {
      t(e);
    };
    _4.prototype.push = function(e, t) {
      var r = this._readableState, n;
      return r.objectMode ? n = true : typeof e == "string" && (t = t || r.defaultEncoding, t !== r.encoding && (e = nt3.from(e, t), t = ""), n = true), kn(this, e, t, false, n);
    };
    _4.prototype.unshift = function(e) {
      return kn(this, e, null, true, false);
    };
    function kn(e, t, r, n, i) {
      w3("readableAddChunk", t);
      var o2 = e._readableState;
      if (t === null)
        o2.reading = false, cs(e, o2);
      else {
        var a3;
        if (i || (a3 = ls(o2, t)), a3)
          Ne(e, a3);
        else if (o2.objectMode || t && t.length > 0)
          if (typeof t != "string" && !o2.objectMode && Object.getPrototypeOf(t) !== nt3.prototype && (t = es(t)), n)
            o2.endEmitted ? Ne(e, new fs) : Qt(e, o2, t, true);
          else if (o2.ended)
            Ne(e, new as);
          else {
            if (o2.destroyed)
              return false;
            o2.reading = false, o2.decoder && !r ? (t = o2.decoder.write(t), o2.objectMode || t.length !== 0 ? Qt(e, o2, t, false) : tr(e, o2)) : Qt(e, o2, t, false);
          }
        else
          n || (o2.reading = false, tr(e, o2));
      }
      return !o2.ended && (o2.length < o2.highWaterMark || o2.length === 0);
    }
    function Qt(e, t, r, n) {
      t.flowing && t.length === 0 && !t.sync ? (t.awaitDrain = 0, e.emit("data", r)) : (t.length += t.objectMode ? 1 : r.length, n ? t.buffer.unshift(r) : t.buffer.push(r), t.needReadable && ot3(e)), tr(e, t);
    }
    function ls(e, t) {
      var r;
      return !ts(t) && typeof t != "string" && t !== undefined && !e.objectMode && (r = new os("chunk", ["string", "Buffer", "Uint8Array"], t)), r;
    }
    _4.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    _4.prototype.setEncoding = function(e) {
      Re || (Re = (Vt(), dt2(Kt)).StringDecoder);
      var t = new Re(e);
      this._readableState.decoder = t, this._readableState.encoding = this._readableState.decoder.encoding;
      for (var r = this._readableState.buffer.head, n = "";r !== null; )
        n += t.write(r.data), r = r.next;
      return this._readableState.buffer.clear(), n !== "" && this._readableState.buffer.push(n), this._readableState.length = n.length, this;
    };
    var Un = 1073741824;
    function hs(e) {
      return e >= Un ? e = Un : (e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++), e;
    }
    function Pn(e, t) {
      return e <= 0 || t.length === 0 && t.ended ? 0 : t.objectMode ? 1 : e !== e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = hs(e)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = true, 0));
    }
    _4.prototype.read = function(e) {
      w3("read", e), e = parseInt(e, 10);
      var t = this._readableState, r = e;
      if (e !== 0 && (t.emittedReadable = false), e === 0 && t.needReadable && ((t.highWaterMark !== 0 ? t.length >= t.highWaterMark : t.length > 0) || t.ended))
        return w3("read: emitReadable", t.length, t.ended), t.length === 0 && t.ended ? er(this) : ot3(this), null;
      if (e = Pn(e, t), e === 0 && t.ended)
        return t.length === 0 && er(this), null;
      var n = t.needReadable;
      w3("need readable", n), (t.length === 0 || t.length - e < t.highWaterMark) && (n = true, w3("length less than watermark", n)), t.ended || t.reading ? (n = false, w3("reading or ended", n)) : n && (w3("do read"), t.reading = true, t.sync = true, t.length === 0 && (t.needReadable = true), this._read(t.highWaterMark), t.sync = false, t.reading || (e = Pn(r, t)));
      var i;
      return e > 0 ? i = Wn(e, t) : i = null, i === null ? (t.needReadable = t.length <= t.highWaterMark, e = 0) : (t.length -= e, t.awaitDrain = 0), t.length === 0 && (t.ended || (t.needReadable = true), r !== e && t.ended && er(this)), i !== null && this.emit("data", i), i;
    };
    function cs(e, t) {
      if (w3("onEofChunk"), !t.ended) {
        if (t.decoder) {
          var r = t.decoder.end();
          r && r.length && (t.buffer.push(r), t.length += t.objectMode ? 1 : r.length);
        }
        t.ended = true, t.sync ? ot3(e) : (t.needReadable = false, t.emittedReadable || (t.emittedReadable = true, jn(e)));
      }
    }
    function ot3(e) {
      var t = e._readableState;
      w3("emitReadable", t.needReadable, t.emittedReadable), t.needReadable = false, t.emittedReadable || (w3("emitReadable", t.flowing), t.emittedReadable = true, process.nextTick(jn, e));
    }
    function jn(e) {
      var t = e._readableState;
      w3("emitReadable_", t.destroyed, t.length, t.ended), !t.destroyed && (t.length || t.ended) && (e.emit("readable"), t.emittedReadable = false), t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark, nr(e);
    }
    function tr(e, t) {
      t.readingMore || (t.readingMore = true, process.nextTick(ds, e, t));
    }
    function ds(e, t) {
      for (;!t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && t.length === 0); ) {
        var r = t.length;
        if (w3("maybeReadMore read 0"), e.read(0), r === t.length)
          break;
      }
      t.readingMore = false;
    }
    _4.prototype._read = function(e) {
      Ne(this, new ss("_read()"));
    };
    _4.prototype.pipe = function(e, t) {
      var r = this, n = this._readableState;
      switch (n.pipesCount) {
        case 0:
          n.pipes = e;
          break;
        case 1:
          n.pipes = [n.pipes, e];
          break;
        default:
          n.pipes.push(e);
          break;
      }
      n.pipesCount += 1, w3("pipe count=%d opts=%j", n.pipesCount, t);
      var i = (!t || t.end !== false) && e !== process.stdout && e !== process.stderr, o2 = i ? s2 : E5;
      n.endEmitted ? process.nextTick(o2) : r.once("end", o2), e.on("unpipe", a3);
      function a3(v3, m3) {
        w3("onunpipe"), v3 === r && m3 && m3.hasUnpiped === false && (m3.hasUnpiped = true, h4());
      }
      function s2() {
        w3("onend"), e.end();
      }
      var u3 = ps(r);
      e.on("drain", u3);
      var l3 = false;
      function h4() {
        w3("cleanup"), e.removeListener("close", p3), e.removeListener("finish", g5), e.removeListener("drain", u3), e.removeListener("error", d3), e.removeListener("unpipe", a3), r.removeListener("end", s2), r.removeListener("end", E5), r.removeListener("data", c2), l3 = true, n.awaitDrain && (!e._writableState || e._writableState.needDrain) && u3();
      }
      r.on("data", c2);
      function c2(v3) {
        w3("ondata");
        var m3 = e.write(v3);
        w3("dest.write", m3), m3 === false && ((n.pipesCount === 1 && n.pipes === e || n.pipesCount > 1 && $n(n.pipes, e) !== -1) && !l3 && (w3("false write response, pause", n.awaitDrain), n.awaitDrain++), r.pause());
      }
      function d3(v3) {
        w3("onerror", v3), E5(), e.removeListener("error", d3), qn2(e, "error") === 0 && Ne(e, v3);
      }
      us(e, "error", d3);
      function p3() {
        e.removeListener("finish", g5), E5();
      }
      e.once("close", p3);
      function g5() {
        w3("onfinish"), e.removeListener("close", p3), E5();
      }
      e.once("finish", g5);
      function E5() {
        w3("unpipe"), r.unpipe(e);
      }
      return e.emit("pipe", r), n.flowing || (w3("pipe resume"), r.resume()), e;
    };
    function ps(e) {
      return function() {
        var r = e._readableState;
        w3("pipeOnDrain", r.awaitDrain), r.awaitDrain && r.awaitDrain--, r.awaitDrain === 0 && qn2(e, "data") && (r.flowing = true, nr(e));
      };
    }
    _4.prototype.unpipe = function(e) {
      var t = this._readableState, r = { hasUnpiped: false };
      if (t.pipesCount === 0)
        return this;
      if (t.pipesCount === 1)
        return e && e !== t.pipes ? this : (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = false, e && e.emit("unpipe", this, r), this);
      if (!e) {
        var { pipes: n, pipesCount: i } = t;
        t.pipes = null, t.pipesCount = 0, t.flowing = false;
        for (var o2 = 0;o2 < i; o2++)
          n[o2].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      var a3 = $n(t.pipes, e);
      return a3 === -1 ? this : (t.pipes.splice(a3, 1), t.pipesCount -= 1, t.pipesCount === 1 && (t.pipes = t.pipes[0]), e.emit("unpipe", this, r), this);
    };
    _4.prototype.on = function(e, t) {
      var r = Ue.prototype.on.call(this, e, t), n = this._readableState;
      return e === "data" ? (n.readableListening = this.listenerCount("readable") > 0, n.flowing !== false && this.resume()) : e === "readable" && !n.endEmitted && !n.readableListening && (n.readableListening = n.needReadable = true, n.flowing = false, n.emittedReadable = false, w3("on readable", n.length, n.reading), n.length ? ot3(this) : n.reading || process.nextTick(ys, this)), r;
    };
    _4.prototype.addListener = _4.prototype.on;
    _4.prototype.removeListener = function(e, t) {
      var r = Ue.prototype.removeListener.call(this, e, t);
      return e === "readable" && process.nextTick(Hn, this), r;
    };
    _4.prototype.removeAllListeners = function(e) {
      var t = Ue.prototype.removeAllListeners.apply(this, arguments);
      return (e === "readable" || e === undefined) && process.nextTick(Hn, this), t;
    };
    function Hn(e) {
      var t = e._readableState;
      t.readableListening = e.listenerCount("readable") > 0, t.resumeScheduled && !t.paused ? t.flowing = true : e.listenerCount("data") > 0 && e.resume();
    }
    function ys(e) {
      w3("readable nexttick read 0"), e.read(0);
    }
    _4.prototype.resume = function() {
      var e = this._readableState;
      return e.flowing || (w3("resume"), e.flowing = !e.readableListening, gs(this, e)), e.paused = false, this;
    };
    function gs(e, t) {
      t.resumeScheduled || (t.resumeScheduled = true, process.nextTick(ws, e, t));
    }
    function ws(e, t) {
      w3("resume", t.reading), t.reading || e.read(0), t.resumeScheduled = false, e.emit("resume"), nr(e), t.flowing && !t.reading && e.read(0);
    }
    _4.prototype.pause = function() {
      return w3("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (w3("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
    };
    function nr(e) {
      var t = e._readableState;
      for (w3("flow", t.flowing);t.flowing && e.read() !== null; )
        ;
    }
    _4.prototype.wrap = function(e) {
      var t = this, r = this._readableState, n = false;
      e.on("end", function() {
        if (w3("wrapped end"), r.decoder && !r.ended) {
          var a3 = r.decoder.end();
          a3 && a3.length && t.push(a3);
        }
        t.push(null);
      }), e.on("data", function(a3) {
        if (w3("wrapped data"), r.decoder && (a3 = r.decoder.write(a3)), !(r.objectMode && a3 == null) && !(!r.objectMode && (!a3 || !a3.length))) {
          var s2 = t.push(a3);
          s2 || (n = true, e.pause());
        }
      });
      for (var i in e)
        this[i] === undefined && typeof e[i] == "function" && (this[i] = function(s2) {
          return function() {
            return e[s2].apply(e, arguments);
          };
        }(i));
      for (var o2 = 0;o2 < Jt.length; o2++)
        e.on(Jt[o2], this.emit.bind(this, Jt[o2]));
      return this._read = function(a3) {
        w3("wrapped _read", a3), n && (n = false, e.resume());
      }, this;
    };
    typeof Symbol == "function" && (_4.prototype[Symbol.asyncIterator] = function() {
      return zt === undefined && (zt = On()), zt(this);
    });
    Object.defineProperty(_4.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } });
    Object.defineProperty(_4.prototype, "readableBuffer", { enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } });
    Object.defineProperty(_4.prototype, "readableFlowing", { enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(t) {
      this._readableState && (this._readableState.flowing = t);
    } });
    _4._fromList = Wn;
    Object.defineProperty(_4.prototype, "readableLength", { enumerable: false, get: function() {
      return this._readableState.length;
    } });
    function Wn(e, t) {
      if (t.length === 0)
        return null;
      var r;
      return t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (t.decoder ? r = t.buffer.join("") : t.buffer.length === 1 ? r = t.buffer.first() : r = t.buffer.concat(t.length), t.buffer.clear()) : r = t.buffer.consume(e, t.decoder), r;
    }
    function er(e) {
      var t = e._readableState;
      w3("endReadable", t.endEmitted), t.endEmitted || (t.ended = true, process.nextTick(ms, t, e));
    }
    function ms(e, t) {
      if (w3("endReadableNT", e.endEmitted, e.length), !e.endEmitted && e.length === 0 && (e.endEmitted = true, t.readable = false, t.emit("end"), e.autoDestroy)) {
        var r = t._writableState;
        (!r || r.autoDestroy && r.finished) && t.destroy();
      }
    }
    typeof Symbol == "function" && (_4.from = function(e, t) {
      return Zt === undefined && (Zt = Nn()), Zt(_4, e, t);
    });
    function $n(e, t) {
      for (var r = 0, n = e.length;r < n; r++)
        if (e[r] === t)
          return r;
      return -1;
    }
  });
  ir = b4((Kf, Vn) => {
    Vn.exports = z;
    var at3 = fe().codes, bs = at3.ERR_METHOD_NOT_IMPLEMENTED, _s = at3.ERR_MULTIPLE_CALLBACK, vs = at3.ERR_TRANSFORM_ALREADY_TRANSFORMING, Es = at3.ERR_TRANSFORM_WITH_LENGTH_0, st3 = ue();
    Q2()(z, st3);
    function xs(e, t) {
      var r = this._transformState;
      r.transforming = false;
      var n = r.writecb;
      if (n === null)
        return this.emit("error", new _s);
      r.writechunk = null, r.writecb = null, t != null && this.push(t), n(e);
      var i = this._readableState;
      i.reading = false, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
    }
    function z(e) {
      if (!(this instanceof z))
        return new z(e);
      st3.call(this, e), this._transformState = { afterTransform: xs.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e && (typeof e.transform == "function" && (this._transform = e.transform), typeof e.flush == "function" && (this._flush = e.flush)), this.on("prefinish", Rs);
    }
    function Rs() {
      var e = this;
      typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(t, r) {
        Kn(e, t, r);
      }) : Kn(this, null, null);
    }
    z.prototype.push = function(e, t) {
      return this._transformState.needTransform = false, st3.prototype.push.call(this, e, t);
    };
    z.prototype._transform = function(e, t, r) {
      r(new bs("_transform()"));
    };
    z.prototype._write = function(e, t, r) {
      var n = this._transformState;
      if (n.writecb = r, n.writechunk = e, n.writeencoding = t, !n.transforming) {
        var i = this._readableState;
        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
      }
    };
    z.prototype._read = function(e) {
      var t = this._transformState;
      t.writechunk !== null && !t.transforming ? (t.transforming = true, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = true;
    };
    z.prototype._destroy = function(e, t) {
      st3.prototype._destroy.call(this, e, function(r) {
        t(r);
      });
    };
    function Kn(e, t, r) {
      if (t)
        return e.emit("error", t);
      if (r != null && e.push(r), e._writableState.length)
        throw new Es;
      if (e._transformState.transforming)
        throw new vs;
      return e.push(null);
    }
  });
  zn = b4((Vf, Xn) => {
    Xn.exports = Pe3;
    var Yn = ir();
    Q2()(Pe3, Yn);
    function Pe3(e) {
      if (!(this instanceof Pe3))
        return new Pe3(e);
      Yn.call(this, e);
    }
    Pe3.prototype._transform = function(e, t, r) {
      r(null, e);
    };
  });
  ti = b4((Yf, ei) => {
    var or;
    function Ss(e) {
      var t = false;
      return function() {
        t || (t = true, e.apply(undefined, arguments));
      };
    }
    var Qn2 = fe().codes, Ts = Qn2.ERR_MISSING_ARGS, As = Qn2.ERR_STREAM_DESTROYED;
    function Zn(e) {
      if (e)
        throw e;
    }
    function Bs(e) {
      return e.setHeader && typeof e.abort == "function";
    }
    function Cs(e, t, r, n) {
      n = Ss(n);
      var i = false;
      e.on("close", function() {
        i = true;
      }), or === undefined && (or = et()), or(e, { readable: t, writable: r }, function(a3) {
        if (a3)
          return n(a3);
        i = true, n();
      });
      var o2 = false;
      return function(a3) {
        if (!i && !o2) {
          if (o2 = true, Bs(e))
            return e.abort();
          if (typeof e.destroy == "function")
            return e.destroy();
          n(a3 || new As("pipe"));
        }
      };
    }
    function Jn(e) {
      e();
    }
    function Is(e, t) {
      return e.pipe(t);
    }
    function Ls(e) {
      return !e.length || typeof e[e.length - 1] != "function" ? Zn : e.pop();
    }
    function Ms() {
      for (var e = arguments.length, t = new Array(e), r = 0;r < e; r++)
        t[r] = arguments[r];
      var n = Ls(t);
      if (Array.isArray(t[0]) && (t = t[0]), t.length < 2)
        throw new Ts("streams");
      var i, o2 = t.map(function(a3, s2) {
        var u3 = s2 < t.length - 1, l3 = s2 > 0;
        return Cs(a3, u3, l3, function(h4) {
          i || (i = h4), h4 && o2.forEach(Jn), !u3 && (o2.forEach(Jn), n(i));
        });
      });
      return t.reduce(Is);
    }
    ei.exports = Ms;
  });
  ar = b4((q2, ri2) => {
    q2 = ri2.exports = Ht();
    q2.Stream = q2;
    q2.Readable = q2;
    q2.Writable = Dt();
    q2.Duplex = ue();
    q2.Transform = ir();
    q2.PassThrough = zn();
    q2.finished = et();
    q2.pipeline = ti();
  });
  ur = b4((fr) => {
    var ni = gt2(), Os = Q2(), ii2 = ar(), ft2 = fr.readyStates = { UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, DONE: 4 }, sr = fr.IncomingMessage = function(e, t, r, n) {
      var i = this;
      if (ii2.Readable.call(i), i._mode = r, i.headers = {}, i.rawHeaders = [], i.trailers = {}, i.rawTrailers = [], i.on("end", function() {
        process.nextTick(function() {
          i.emit("close");
        });
      }), r === "fetch") {
        let c2 = function() {
          a3.read().then(function(d3) {
            if (!i._destroyed) {
              if (n(d3.done), d3.done) {
                i.push(null);
                return;
              }
              i.push(Buffer.from(d3.value)), c2();
            }
          }).catch(function(d3) {
            n(true), i._destroyed || i.emit("error", d3);
          });
        };
        var h4 = c2;
        if (i._fetchResponse = t, i.url = t.url, i.statusCode = t.status, i.statusMessage = t.statusText, t.headers.forEach(function(d3, p3) {
          i.headers[p3.toLowerCase()] = d3, i.rawHeaders.push(p3, d3);
        }), ni.writableStream) {
          var o2 = new WritableStream({ write: function(d3) {
            return n(false), new Promise(function(p3, g5) {
              i._destroyed ? g5() : i.push(Buffer.from(d3)) ? p3() : i._resumeFetch = p3;
            });
          }, close: function() {
            n(true), i._destroyed || i.push(null);
          }, abort: function(d3) {
            n(true), i._destroyed || i.emit("error", d3);
          } });
          try {
            t.body.pipeTo(o2).catch(function(d3) {
              n(true), i._destroyed || i.emit("error", d3);
            });
            return;
          } catch {
          }
        }
        var a3 = t.body.getReader();
        c2();
      } else {
        i._xhr = e, i._pos = 0, i.url = e.responseURL, i.statusCode = e.status, i.statusMessage = e.statusText;
        var s2 = e.getAllResponseHeaders().split(/\r?\n/);
        if (s2.forEach(function(c2) {
          var d3 = c2.match(/^([^:]+):\s*(.*)/);
          if (d3) {
            var p3 = d3[1].toLowerCase();
            p3 === "set-cookie" ? (i.headers[p3] === undefined && (i.headers[p3] = []), i.headers[p3].push(d3[2])) : i.headers[p3] !== undefined ? i.headers[p3] += ", " + d3[2] : i.headers[p3] = d3[2], i.rawHeaders.push(d3[1], d3[2]);
          }
        }), i._charset = "x-user-defined", !ni.overrideMimeType) {
          var u3 = i.rawHeaders["mime-type"];
          if (u3) {
            var l3 = u3.match(/;\s*charset=([^;])(;|$)/);
            l3 && (i._charset = l3[1].toLowerCase());
          }
          i._charset || (i._charset = "utf-8");
        }
      }
    };
    Os(sr, ii2.Readable);
    sr.prototype._read = function() {
      var e = this, t = e._resumeFetch;
      t && (e._resumeFetch = null, t());
    };
    sr.prototype._onXHRProgress = function(e) {
      var t = this, r = t._xhr, n = null;
      switch (t._mode) {
        case "text":
          if (n = r.responseText, n.length > t._pos) {
            var i = n.substr(t._pos);
            if (t._charset === "x-user-defined") {
              for (var o2 = Buffer.alloc(i.length), a3 = 0;a3 < i.length; a3++)
                o2[a3] = i.charCodeAt(a3) & 255;
              t.push(o2);
            } else
              t.push(i, t._charset);
            t._pos = n.length;
          }
          break;
        case "arraybuffer":
          if (r.readyState !== ft2.DONE || !r.response)
            break;
          n = r.response, t.push(Buffer.from(new Uint8Array(n)));
          break;
        case "moz-chunked-arraybuffer":
          if (n = r.response, r.readyState !== ft2.LOADING || !n)
            break;
          t.push(Buffer.from(new Uint8Array(n)));
          break;
        case "ms-stream":
          if (n = r.response, r.readyState !== ft2.LOADING)
            break;
          var s2 = new global.MSStreamReader;
          s2.onprogress = function() {
            s2.result.byteLength > t._pos && (t.push(Buffer.from(new Uint8Array(s2.result.slice(t._pos)))), t._pos = s2.result.byteLength);
          }, s2.onload = function() {
            e(true), t.push(null);
          }, s2.readAsArrayBuffer(n);
          break;
      }
      t._xhr.readyState === ft2.DONE && t._mode !== "ms-stream" && (e(true), t.push(null));
    };
  });
  fi = b4((zf2, si) => {
    var pe = gt2(), Fs = Q2(), ai2 = ur(), lr = ar(), Ns = ai2.IncomingMessage, oi = ai2.readyStates;
    function Us2(e, t) {
      return pe.fetch && t ? "fetch" : pe.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : pe.msstream ? "ms-stream" : pe.arraybuffer && e ? "arraybuffer" : "text";
    }
    var M3 = si.exports = function(e) {
      var t = this;
      lr.Writable.call(t), t._opts = e, t._body = [], t._headers = {}, e.auth && t.setHeader("Authorization", "Basic " + Buffer.from(e.auth).toString("base64")), Object.keys(e.headers).forEach(function(i) {
        t.setHeader(i, e.headers[i]);
      });
      var r, n = true;
      if (e.mode === "disable-fetch" || "requestTimeout" in e && !pe.abortController)
        n = false, r = true;
      else if (e.mode === "prefer-streaming")
        r = false;
      else if (e.mode === "allow-wrong-content-type")
        r = !pe.overrideMimeType;
      else if (!e.mode || e.mode === "default" || e.mode === "prefer-fast")
        r = true;
      else
        throw new Error("Invalid value for opts.mode");
      t._mode = Us2(r, n), t._fetchTimer = null, t._socketTimeout = null, t._socketTimer = null, t.on("finish", function() {
        t._onFinish();
      });
    };
    Fs(M3, lr.Writable);
    M3.prototype.setHeader = function(e, t) {
      var r = this, n = e.toLowerCase();
      qs.indexOf(n) === -1 && (r._headers[n] = { name: e, value: t });
    };
    M3.prototype.getHeader = function(e) {
      var t = this._headers[e.toLowerCase()];
      return t ? t.value : null;
    };
    M3.prototype.removeHeader = function(e) {
      var t = this;
      delete t._headers[e.toLowerCase()];
    };
    M3.prototype._onFinish = function() {
      var e = this;
      if (!e._destroyed) {
        var t = e._opts;
        "timeout" in t && t.timeout !== 0 && e.setTimeout(t.timeout);
        var r = e._headers, n = null;
        t.method !== "GET" && t.method !== "HEAD" && (n = new Blob(e._body, { type: (r["content-type"] || {}).value || "" }));
        var i = [];
        if (Object.keys(r).forEach(function(u3) {
          var l3 = r[u3].name, h4 = r[u3].value;
          Array.isArray(h4) ? h4.forEach(function(c2) {
            i.push([l3, c2]);
          }) : i.push([l3, h4]);
        }), e._mode === "fetch") {
          var o2 = null;
          if (pe.abortController) {
            var a3 = new AbortController;
            o2 = a3.signal, e._fetchAbortController = a3, "requestTimeout" in t && t.requestTimeout !== 0 && (e._fetchTimer = global.setTimeout(function() {
              e.emit("requestTimeout"), e._fetchAbortController && e._fetchAbortController.abort();
            }, t.requestTimeout));
          }
          global.fetch(e._opts.url, { method: e._opts.method, headers: i, body: n || undefined, mode: "cors", credentials: t.withCredentials ? "include" : "same-origin", signal: o2 }).then(function(u3) {
            e._fetchResponse = u3, e._resetTimers(false), e._connect();
          }, function(u3) {
            e._resetTimers(true), e._destroyed || e.emit("error", u3);
          });
        } else {
          var s2 = e._xhr = new global.XMLHttpRequest;
          try {
            s2.open(e._opts.method, e._opts.url, true);
          } catch (u3) {
            process.nextTick(function() {
              e.emit("error", u3);
            });
            return;
          }
          "responseType" in s2 && (s2.responseType = e._mode), "withCredentials" in s2 && (s2.withCredentials = !!t.withCredentials), e._mode === "text" && "overrideMimeType" in s2 && s2.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in t && (s2.timeout = t.requestTimeout, s2.ontimeout = function() {
            e.emit("requestTimeout");
          }), i.forEach(function(u3) {
            s2.setRequestHeader(u3[0], u3[1]);
          }), e._response = null, s2.onreadystatechange = function() {
            switch (s2.readyState) {
              case oi.LOADING:
              case oi.DONE:
                e._onXHRProgress();
                break;
            }
          }, e._mode === "moz-chunked-arraybuffer" && (s2.onprogress = function() {
            e._onXHRProgress();
          }), s2.onerror = function() {
            e._destroyed || (e._resetTimers(true), e.emit("error", new Error("XHR error")));
          };
          try {
            s2.send(n);
          } catch (u3) {
            process.nextTick(function() {
              e.emit("error", u3);
            });
            return;
          }
        }
      }
    };
    function Ps(e) {
      try {
        var t = e.status;
        return t !== null && t !== 0;
      } catch {
        return false;
      }
    }
    M3.prototype._onXHRProgress = function() {
      var e = this;
      e._resetTimers(false), !(!Ps(e._xhr) || e._destroyed) && (e._response || e._connect(), e._response._onXHRProgress(e._resetTimers.bind(e)));
    };
    M3.prototype._connect = function() {
      var e = this;
      e._destroyed || (e._response = new Ns(e._xhr, e._fetchResponse, e._mode, e._resetTimers.bind(e)), e._response.on("error", function(t) {
        e.emit("error", t);
      }), e.emit("response", e._response));
    };
    M3.prototype._write = function(e, t, r) {
      var n = this;
      n._body.push(e), r();
    };
    M3.prototype._resetTimers = function(e) {
      var t = this;
      global.clearTimeout(t._socketTimer), t._socketTimer = null, e ? (global.clearTimeout(t._fetchTimer), t._fetchTimer = null) : t._socketTimeout && (t._socketTimer = global.setTimeout(function() {
        t.emit("timeout");
      }, t._socketTimeout));
    };
    M3.prototype.abort = M3.prototype.destroy = function(e) {
      var t = this;
      t._destroyed = true, t._resetTimers(true), t._response && (t._response._destroyed = true), t._xhr ? t._xhr.abort() : t._fetchAbortController && t._fetchAbortController.abort(), e && t.emit("error", e);
    };
    M3.prototype.end = function(e, t, r) {
      var n = this;
      typeof e == "function" && (r = e, e = undefined), lr.Writable.prototype.end.call(n, e, t, r);
    };
    M3.prototype.setTimeout = function(e, t) {
      var r = this;
      t && r.once("timeout", t), r._socketTimeout = e, r._resetTimers(false);
    };
    M3.prototype.flushHeaders = function() {
    };
    M3.prototype.setNoDelay = function() {
    };
    M3.prototype.setSocketKeepAlive = function() {
    };
    var qs = ["accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "via"];
  });
  li = b4((Zf, ui) => {
    ui.exports = ks;
    var Ds = Object.prototype.hasOwnProperty;
    function ks() {
      for (var e = {}, t = 0;t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r)
          Ds.call(r, n) && (e[n] = r[n]);
      }
      return e;
    }
  });
  ci = b4((Jf, hi) => {
    hi.exports = { 100: "Continue", 101: "Switching Protocols", 102: "Processing", 200: "OK", 201: "Created", 202: "Accepted", 203: "Non-Authoritative Information", 204: "No Content", 205: "Reset Content", 206: "Partial Content", 207: "Multi-Status", 208: "Already Reported", 226: "IM Used", 300: "Multiple Choices", 301: "Moved Permanently", 302: "Found", 303: "See Other", 304: "Not Modified", 305: "Use Proxy", 307: "Temporary Redirect", 308: "Permanent Redirect", 400: "Bad Request", 401: "Unauthorized", 402: "Payment Required", 403: "Forbidden", 404: "Not Found", 405: "Method Not Allowed", 406: "Not Acceptable", 407: "Proxy Authentication Required", 408: "Request Timeout", 409: "Conflict", 410: "Gone", 411: "Length Required", 412: "Precondition Failed", 413: "Payload Too Large", 414: "URI Too Long", 415: "Unsupported Media Type", 416: "Range Not Satisfiable", 417: "Expectation Failed", 418: "I'm a teapot", 421: "Misdirected Request", 422: "Unprocessable Entity", 423: "Locked", 424: "Failed Dependency", 425: "Unordered Collection", 426: "Upgrade Required", 428: "Precondition Required", 429: "Too Many Requests", 431: "Request Header Fields Too Large", 451: "Unavailable For Legal Reasons", 500: "Internal Server Error", 501: "Not Implemented", 502: "Bad Gateway", 503: "Service Unavailable", 504: "Gateway Timeout", 505: "HTTP Version Not Supported", 506: "Variant Also Negotiates", 507: "Insufficient Storage", 508: "Loop Detected", 509: "Bandwidth Limit Exceeded", 510: "Not Extended", 511: "Network Authentication Required" };
  });
  _i = {};
  Er2(_i, { decode: () => pr, default: () => Ys, encode: () => yr, toASCII: () => bi, toUnicode: () => mi, ucs2decode: () => dr2, ucs2encode: () => gi2 });
  vi = vr(() => {
    pi = "-", js = /^xn--/, Hs = /[^\0-\x7F]/, Ws = /[\x2E\u3002\uFF0E\uFF61]/g, $s = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, hr = 36 - 1, K3 = Math.floor, cr = String.fromCharCode;
    gi2 = (e) => String.fromCodePoint(...e), Ks = function(e) {
      return e >= 48 && e < 58 ? 26 + (e - 48) : e >= 65 && e < 91 ? e - 65 : e >= 97 && e < 123 ? e - 97 : 36;
    }, di = function(e, t) {
      return e + 22 + 75 * (e < 26) - ((t != 0) << 5);
    }, wi2 = function(e, t, r) {
      let n = 0;
      for (e = r ? K3(e / 700) : e >> 1, e += K3(e / t);e > hr * 26 >> 1; n += 36)
        e = K3(e / hr);
      return K3(n + (hr + 1) * e / (e + 38));
    }, pr = function(e) {
      let t = [], r = e.length, n = 0, i = 128, o2 = 72, a3 = e.lastIndexOf(pi);
      a3 < 0 && (a3 = 0);
      for (let s2 = 0;s2 < a3; ++s2)
        e.charCodeAt(s2) >= 128 && oe("not-basic"), t.push(e.charCodeAt(s2));
      for (let s2 = a3 > 0 ? a3 + 1 : 0;s2 < r; ) {
        let u3 = n;
        for (let h4 = 1, c2 = 36;; c2 += 36) {
          s2 >= r && oe("invalid-input");
          let d3 = Ks(e.charCodeAt(s2++));
          d3 >= 36 && oe("invalid-input"), d3 > K3((2147483647 - n) / h4) && oe("overflow"), n += d3 * h4;
          let p3 = c2 <= o2 ? 1 : c2 >= o2 + 26 ? 26 : c2 - o2;
          if (d3 < p3)
            break;
          let g5 = 36 - p3;
          h4 > K3(2147483647 / g5) && oe("overflow"), h4 *= g5;
        }
        let l3 = t.length + 1;
        o2 = wi2(n - u3, l3, u3 == 0), K3(n / l3) > 2147483647 - i && oe("overflow"), i += K3(n / l3), n %= l3, t.splice(n++, 0, i);
      }
      return String.fromCodePoint(...t);
    }, yr = function(e) {
      let t = [];
      e = dr2(e);
      let r = e.length, n = 128, i = 0, o2 = 72;
      for (let u3 of e)
        u3 < 128 && t.push(cr(u3));
      let a3 = t.length, s2 = a3;
      for (a3 && t.push(pi);s2 < r; ) {
        let u3 = 2147483647;
        for (let h4 of e)
          h4 >= n && h4 < u3 && (u3 = h4);
        let l3 = s2 + 1;
        u3 - n > K3((2147483647 - i) / l3) && oe("overflow"), i += (u3 - n) * l3, n = u3;
        for (let h4 of e)
          if (h4 < n && ++i > 2147483647 && oe("overflow"), h4 === n) {
            let c2 = i;
            for (let d3 = 36;; d3 += 36) {
              let p3 = d3 <= o2 ? 1 : d3 >= o2 + 26 ? 26 : d3 - o2;
              if (c2 < p3)
                break;
              let g5 = c2 - p3, E5 = 36 - p3;
              t.push(cr(di(p3 + g5 % E5, 0))), c2 = K3(g5 / E5);
            }
            t.push(cr(di(c2, 0))), o2 = wi2(i, l3, s2 === a3), i = 0, ++s2;
          }
        ++i, ++n;
      }
      return t.join("");
    }, mi = function(e) {
      return yi(e, function(t) {
        return js.test(t) ? pr(t.slice(4).toLowerCase()) : t;
      });
    }, bi = function(e) {
      return yi(e, function(t) {
        return Hs.test(t) ? "xn--" + yr(t) : t;
      });
    }, Vs = { version: "2.1.0", ucs2: { decode: dr2, encode: gi2 }, decode: pr, encode: yr, toASCII: bi, toUnicode: mi }, Ys = Vs;
  });
  xi = b4((Qf, Ei) => {
    Ei.exports = { isString: function(e) {
      return typeof e == "string";
    }, isObject: function(e) {
      return typeof e == "object" && e !== null;
    }, isNull: function(e) {
      return e === null;
    }, isNullOrUndefined: function(e) {
      return e == null;
    } };
  });
  Si2 = b4((eu, Ri) => {
    var Xs = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
      return typeof e;
    } : function(e) {
      return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
    }, zs = Object.keys || function() {
      var e = Object.prototype.hasOwnProperty, t = !{ toString: null }.propertyIsEnumerable("toString"), r = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], n = r.length;
      return function(i) {
        if (typeof i != "function" && ((typeof i > "u" ? "undefined" : Xs(i)) !== "object" || i === null))
          throw new TypeError("Object.keys called on non-object");
        var o2 = [], a3, s2;
        for (a3 in i)
          e.call(i, a3) && o2.push(a3);
        if (t)
          for (s2 = 0;s2 < n; s2++)
            e.call(i, r[s2]) && o2.push(r[s2]);
        return o2;
      };
    }();
    Ri.exports = zs;
  });
  Ni = b4((tu, Fi) => {
    var Li = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
      return typeof e;
    } : function(e) {
      return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
    }, lt3 = Fi.exports = { unescapeBuffer: ef, unescape: Oi, escape: rf, stringify: Bi, encode: Bi, parse: Ii, decode: Ii }, Zs = _e().Buffer, Js = Si2(), Qs = function(t) {
      return Object.prototype.toString.call(t) === "[object Array]";
    }, Ti = function(t, r, n) {
      var i;
      if (t == null)
        throw new TypeError('"arr" is null or not defined');
      var o2 = Object(t), a3 = o2.length >>> 0;
      if (a3 === 0)
        return -1;
      var s2 = n | 0;
      if (s2 >= a3)
        return -1;
      for (i = Math.max(s2 >= 0 ? s2 : a3 - Math.abs(s2), 0);i < a3; ) {
        if (i in o2 && o2[i] === r)
          return i;
        i++;
      }
      return -1;
    };
    function Mi() {
    }
    Mi.prototype = Object.create ? Object.create(null) : {};
    var Ai2 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
    function ef(e, t) {
      for (var r = Zs.allocUnsafe(e.length), n = 0, i, o2, a3, s2, u3 = 0, l3 = 0;; u3++) {
        if (u3 < e.length)
          s2 = e.charCodeAt(u3);
        else {
          n > 0 && (r[l3++] = 37, n === 2 && (r[l3++] = a3));
          break;
        }
        switch (n) {
          case 0:
            switch (s2) {
              case 37:
                i = 0, o2 = 0, n = 1;
                break;
              case 43:
                t && (s2 = 32);
              default:
                r[l3++] = s2;
                break;
            }
            break;
          case 1:
            if (a3 = s2, i = Ai2[s2], !(i >= 0)) {
              r[l3++] = 37, r[l3++] = s2, n = 0;
              break;
            }
            n = 2;
            break;
          case 2:
            if (n = 0, o2 = Ai2[s2], !(o2 >= 0)) {
              r[l3++] = 37, r[l3++] = a3, r[l3++] = s2;
              break;
            }
            r[l3++] = 16 * i + o2;
            break;
        }
      }
      return r.slice(0, l3);
    }
    function Oi(e, t) {
      try {
        return decodeURIComponent(e);
      } catch {
        return lt3.unescapeBuffer(e, t).toString();
      }
    }
    var k3 = [];
    for (Se2 = 0;Se2 < 256; ++Se2)
      k3[Se2] = "%" + ((Se2 < 16 ? "0" : "") + Se2.toString(16)).toUpperCase();
    var Se2, tf = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0];
    function rf(e) {
      typeof e != "string" && ((typeof e > "u" ? "undefined" : Li(e)) === "object" ? e = String(e) : e += "");
      for (var t = "", r = 0, n = 0;n < e.length; ++n) {
        var i = e.charCodeAt(n);
        if (i < 128) {
          if (tf[i] === 1)
            continue;
          r < n && (t += e.slice(r, n)), r = n + 1, t += k3[i];
          continue;
        }
        if (r < n && (t += e.slice(r, n)), i < 2048) {
          r = n + 1, t += k3[192 | i >> 6] + k3[128 | i & 63];
          continue;
        }
        if (i < 55296 || i >= 57344) {
          r = n + 1, t += k3[224 | i >> 12] + k3[128 | i >> 6 & 63] + k3[128 | i & 63];
          continue;
        }
        ++n;
        var o2;
        if (n < e.length)
          o2 = e.charCodeAt(n) & 1023;
        else
          throw new URIError("URI malformed");
        r = n + 1, i = 65536 + ((i & 1023) << 10 | o2), t += k3[240 | i >> 18] + k3[128 | i >> 12 & 63] + k3[128 | i >> 6 & 63] + k3[128 | i & 63];
      }
      return r === 0 ? e : r < e.length ? t + e.slice(r) : t;
    }
    function gr3(e) {
      return typeof e == "string" ? e : typeof e == "number" && isFinite(e) ? "" + e : typeof e == "boolean" ? e ? "true" : "false" : "";
    }
    function Bi(e, t, r, n) {
      t = t || "&", r = r || "=";
      var i = lt3.escape;
      if (n && typeof n.encodeURIComponent == "function" && (i = n.encodeURIComponent), e !== null && (typeof e > "u" ? "undefined" : Li(e)) === "object") {
        for (var o2 = Js(e), a3 = o2.length, s2 = a3 - 1, u3 = "", l3 = 0;l3 < a3; ++l3) {
          var h4 = o2[l3], c2 = e[h4], d3 = i(gr3(h4)) + r;
          if (Qs(c2)) {
            for (var p3 = c2.length, g5 = p3 - 1, E5 = 0;E5 < p3; ++E5)
              u3 += d3 + i(gr3(c2[E5])), E5 < g5 && (u3 += t);
            p3 && l3 < s2 && (u3 += t);
          } else
            u3 += d3 + i(gr3(c2)), l3 < s2 && (u3 += t);
        }
        return u3;
      }
      return "";
    }
    function Ci(e) {
      if (e.length === 0)
        return [];
      if (e.length === 1)
        return [e.charCodeAt(0)];
      for (var t = [], r = 0;r < e.length; ++r)
        t[t.length] = e.charCodeAt(r);
      return t;
    }
    var nf = [38], of = [61];
    function Ii(e, t, r, n) {
      var i = new Mi;
      if (typeof e != "string" || e.length === 0)
        return i;
      var o2 = t ? Ci(t + "") : nf, a3 = r ? Ci(r + "") : of, s2 = o2.length, u3 = a3.length, l3 = 1000;
      n && typeof n.maxKeys == "number" && (l3 = n.maxKeys > 0 ? n.maxKeys : -1);
      var h4 = lt3.unescape;
      n && typeof n.decodeURIComponent == "function" && (h4 = n.decodeURIComponent);
      for (var c2 = h4 !== Oi, d3 = [], p3 = 0, g5 = 0, E5 = 0, v3 = 0, m3 = "", y4 = "", R4 = c2, I3 = c2, T2 = 0, S2 = 0;S2 < e.length; ++S2) {
        var B3 = e.charCodeAt(S2);
        if (B3 === o2[E5]) {
          if (++E5 === s2) {
            var F2 = S2 - E5 + 1;
            if (v3 < u3 ? g5 < F2 && (m3 += e.slice(g5, F2)) : g5 < F2 && (y4 += e.slice(g5, F2)), R4 && (m3 = ut2(m3, h4)), I3 && (y4 = ut2(y4, h4)), m3 || y4 || g5 - p3 > s2 || S2 === 0)
              if (Ti(d3, m3) === -1)
                i[m3] = y4, d3[d3.length] = m3;
              else {
                var L4 = i[m3] || "";
                L4.pop ? L4[L4.length] = y4 : L4 && (i[m3] = [L4, y4]);
              }
            else
              S2 === 1 && delete i[m3];
            if (--l3 === 0)
              break;
            R4 = I3 = c2, T2 = 0, m3 = y4 = "", p3 = g5, g5 = S2 + 1, E5 = v3 = 0;
          }
          continue;
        } else
          E5 = 0, I3 || (B3 === 37 ? T2 = 1 : T2 > 0 && (B3 >= 48 && B3 <= 57 || B3 >= 65 && B3 <= 70 || B3 >= 97 && B3 <= 102) ? ++T2 === 3 && (I3 = true) : T2 = 0);
        if (v3 < u3)
          if (B3 === a3[v3]) {
            if (++v3 === u3) {
              var Y3 = S2 - v3 + 1;
              g5 < Y3 && (m3 += e.slice(g5, Y3)), T2 = 0, g5 = S2 + 1;
            }
            continue;
          } else
            v3 = 0, R4 || (B3 === 37 ? T2 = 1 : T2 > 0 && (B3 >= 48 && B3 <= 57 || B3 >= 65 && B3 <= 70 || B3 >= 97 && B3 <= 102) ? ++T2 === 3 && (R4 = true) : T2 = 0);
        B3 === 43 && (v3 < u3 ? (g5 < S2 && (m3 += e.slice(g5, S2)), m3 += "%20", R4 = true) : (g5 < S2 && (y4 += e.slice(g5, S2)), y4 += "%20", I3 = true), g5 = S2 + 1);
      }
      if (l3 !== 0 && (g5 < e.length || v3 > 0))
        if (g5 < e.length && (v3 < u3 ? m3 += e.slice(g5) : E5 < s2 && (y4 += e.slice(g5))), R4 && (m3 = ut2(m3, h4)), I3 && (y4 = ut2(y4, h4)), Ti(d3, m3) === -1)
          i[m3] = y4, d3[d3.length] = m3;
        else {
          var Z3 = i[m3];
          Z3.pop ? Z3[Z3.length] = y4 : i[m3] = [Z3, y4];
        }
      return i;
    }
    function ut2(e, t) {
      try {
        return t(e);
      } catch {
        return lt3.unescape(e, true);
      }
    }
  });
  Di = b4((Ae2) => {
    var af = (vi(), dt2(_i)), V5 = xi();
    Ae2.parse = qe2;
    Ae2.resolve = gf;
    Ae2.resolveObject = wf;
    Ae2.format = yf2;
    Ae2.Url = D3;
    function D3() {
      this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
    }
    var sf = /^([a-z0-9.+-]+:)/i, ff2 = /:[0-9]*$/, uf = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, lf = ["<", ">", '"', "`", " ", "\r", `
`, "\t"], hf = ["{", "}", "|", "\\", "^", "`"].concat(lf), wr = ["'"].concat(hf), Ui = ["%", "/", "?", ";", "#"].concat(wr), Pi = ["/", "?", "#"], cf2 = 255, qi = /^[+a-z0-9A-Z_-]{0,63}$/, df = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, pf = { javascript: true, "javascript:": true }, mr2 = { javascript: true, "javascript:": true }, Te = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, br3 = Ni();
    function qe2(e, t, r) {
      if (e && V5.isObject(e) && e instanceof D3)
        return e;
      var n = new D3;
      return n.parse(e, t, r), n;
    }
    D3.prototype.parse = function(e, t, r) {
      if (!V5.isString(e))
        throw new TypeError("Parameter 'url' must be a string, not " + typeof e);
      var n = e.indexOf("?"), i = n !== -1 && n < e.indexOf("#") ? "?" : "#", o2 = e.split(i), a3 = /\\/g;
      o2[0] = o2[0].replace(a3, "/"), e = o2.join(i);
      var s2 = e;
      if (s2 = s2.trim(), !r && e.split("#").length === 1) {
        var u3 = uf.exec(s2);
        if (u3)
          return this.path = s2, this.href = s2, this.pathname = u3[1], u3[2] ? (this.search = u3[2], t ? this.query = br3.parse(this.search.substr(1)) : this.query = this.search.substr(1)) : t && (this.search = "", this.query = {}), this;
      }
      var l3 = sf.exec(s2);
      if (l3) {
        l3 = l3[0];
        var h4 = l3.toLowerCase();
        this.protocol = h4, s2 = s2.substr(l3.length);
      }
      if (r || l3 || s2.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        var c2 = s2.substr(0, 2) === "//";
        c2 && !(l3 && mr2[l3]) && (s2 = s2.substr(2), this.slashes = true);
      }
      if (!mr2[l3] && (c2 || l3 && !Te[l3])) {
        for (var d3 = -1, p3 = 0;p3 < Pi.length; p3++) {
          var g5 = s2.indexOf(Pi[p3]);
          g5 !== -1 && (d3 === -1 || g5 < d3) && (d3 = g5);
        }
        var E5, v3;
        d3 === -1 ? v3 = s2.lastIndexOf("@") : v3 = s2.lastIndexOf("@", d3), v3 !== -1 && (E5 = s2.slice(0, v3), s2 = s2.slice(v3 + 1), this.auth = decodeURIComponent(E5)), d3 = -1;
        for (var p3 = 0;p3 < Ui.length; p3++) {
          var g5 = s2.indexOf(Ui[p3]);
          g5 !== -1 && (d3 === -1 || g5 < d3) && (d3 = g5);
        }
        d3 === -1 && (d3 = s2.length), this.host = s2.slice(0, d3), s2 = s2.slice(d3), this.parseHost(), this.hostname = this.hostname || "";
        var m3 = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
        if (!m3)
          for (var y4 = this.hostname.split(/\./), p3 = 0, R4 = y4.length;p3 < R4; p3++) {
            var I3 = y4[p3];
            if (!!I3 && !I3.match(qi)) {
              for (var T2 = "", S2 = 0, B3 = I3.length;S2 < B3; S2++)
                I3.charCodeAt(S2) > 127 ? T2 += "x" : T2 += I3[S2];
              if (!T2.match(qi)) {
                var F2 = y4.slice(0, p3), L4 = y4.slice(p3 + 1), Y3 = I3.match(df);
                Y3 && (F2.push(Y3[1]), L4.unshift(Y3[2])), L4.length && (s2 = "/" + L4.join(".") + s2), this.hostname = F2.join(".");
                break;
              }
            }
          }
        this.hostname.length > cf2 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), m3 || (this.hostname = af.toASCII(this.hostname));
        var Z3 = this.port ? ":" + this.port : "", Wi = this.hostname || "";
        this.host = Wi + Z3, this.href += this.host, m3 && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), s2[0] !== "/" && (s2 = "/" + s2));
      }
      if (!pf[h4])
        for (var p3 = 0, R4 = wr.length;p3 < R4; p3++) {
          var Be = wr[p3];
          if (s2.indexOf(Be) !== -1) {
            var ht2 = encodeURIComponent(Be);
            ht2 === Be && (ht2 = escape(Be)), s2 = s2.split(Be).join(ht2);
          }
        }
      var ct3 = s2.indexOf("#");
      ct3 !== -1 && (this.hash = s2.substr(ct3), s2 = s2.slice(0, ct3));
      var De = s2.indexOf("?");
      if (De !== -1 ? (this.search = s2.substr(De), this.query = s2.substr(De + 1), t && (this.query = br3.parse(this.query)), s2 = s2.slice(0, De)) : t && (this.search = "", this.query = {}), s2 && (this.pathname = s2), Te[h4] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
        var Z3 = this.pathname || "", $i = this.search || "";
        this.path = Z3 + $i;
      }
      return this.href = this.format(), this;
    };
    function yf2(e) {
      return V5.isString(e) && (e = qe2(e)), e instanceof D3 ? e.format() : D3.prototype.format.call(e);
    }
    D3.prototype.format = function() {
      var e = this.auth || "";
      e && (e = encodeURIComponent(e), e = e.replace(/%3A/i, ":"), e += "@");
      var t = this.protocol || "", r = this.pathname || "", n = this.hash || "", i = false, o2 = "";
      this.host ? i = e + this.host : this.hostname && (i = e + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (i += ":" + this.port)), this.query && V5.isObject(this.query) && Object.keys(this.query).length && (o2 = br3.stringify(this.query));
      var a3 = this.search || o2 && "?" + o2 || "";
      return t && t.substr(-1) !== ":" && (t += ":"), this.slashes || (!t || Te[t]) && i !== false ? (i = "//" + (i || ""), r && r.charAt(0) !== "/" && (r = "/" + r)) : i || (i = ""), n && n.charAt(0) !== "#" && (n = "#" + n), a3 && a3.charAt(0) !== "?" && (a3 = "?" + a3), r = r.replace(/[?#]/g, function(s2) {
        return encodeURIComponent(s2);
      }), a3 = a3.replace("#", "%23"), t + i + r + a3 + n;
    };
    function gf(e, t) {
      return qe2(e, false, true).resolve(t);
    }
    D3.prototype.resolve = function(e) {
      return this.resolveObject(qe2(e, false, true)).format();
    };
    function wf(e, t) {
      return e ? qe2(e, false, true).resolveObject(t) : t;
    }
    D3.prototype.resolveObject = function(e) {
      if (V5.isString(e)) {
        var t = new D3;
        t.parse(e, false, true), e = t;
      }
      for (var r = new D3, n = Object.keys(this), i = 0;i < n.length; i++) {
        var o2 = n[i];
        r[o2] = this[o2];
      }
      if (r.hash = e.hash, e.href === "")
        return r.href = r.format(), r;
      if (e.slashes && !e.protocol) {
        for (var a3 = Object.keys(e), s2 = 0;s2 < a3.length; s2++) {
          var u3 = a3[s2];
          u3 !== "protocol" && (r[u3] = e[u3]);
        }
        return Te[r.protocol] && r.hostname && !r.pathname && (r.path = r.pathname = "/"), r.href = r.format(), r;
      }
      if (e.protocol && e.protocol !== r.protocol) {
        if (!Te[e.protocol]) {
          for (var l3 = Object.keys(e), h4 = 0;h4 < l3.length; h4++) {
            var c2 = l3[h4];
            r[c2] = e[c2];
          }
          return r.href = r.format(), r;
        }
        if (r.protocol = e.protocol, !e.host && !mr2[e.protocol]) {
          for (var R4 = (e.pathname || "").split("/");R4.length && !(e.host = R4.shift()); )
            ;
          e.host || (e.host = ""), e.hostname || (e.hostname = ""), R4[0] !== "" && R4.unshift(""), R4.length < 2 && R4.unshift(""), r.pathname = R4.join("/");
        } else
          r.pathname = e.pathname;
        if (r.search = e.search, r.query = e.query, r.host = e.host || "", r.auth = e.auth, r.hostname = e.hostname || e.host, r.port = e.port, r.pathname || r.search) {
          var d3 = r.pathname || "", p3 = r.search || "";
          r.path = d3 + p3;
        }
        return r.slashes = r.slashes || e.slashes, r.href = r.format(), r;
      }
      var g5 = r.pathname && r.pathname.charAt(0) === "/", E5 = e.host || e.pathname && e.pathname.charAt(0) === "/", v3 = E5 || g5 || r.host && e.pathname, m3 = v3, y4 = r.pathname && r.pathname.split("/") || [], R4 = e.pathname && e.pathname.split("/") || [], I3 = r.protocol && !Te[r.protocol];
      if (I3 && (r.hostname = "", r.port = null, r.host && (y4[0] === "" ? y4[0] = r.host : y4.unshift(r.host)), r.host = "", e.protocol && (e.hostname = null, e.port = null, e.host && (R4[0] === "" ? R4[0] = e.host : R4.unshift(e.host)), e.host = null), v3 = v3 && (R4[0] === "" || y4[0] === "")), E5)
        r.host = e.host || e.host === "" ? e.host : r.host, r.hostname = e.hostname || e.hostname === "" ? e.hostname : r.hostname, r.search = e.search, r.query = e.query, y4 = R4;
      else if (R4.length)
        y4 || (y4 = []), y4.pop(), y4 = y4.concat(R4), r.search = e.search, r.query = e.query;
      else if (!V5.isNullOrUndefined(e.search)) {
        if (I3) {
          r.hostname = r.host = y4.shift();
          var T2 = r.host && r.host.indexOf("@") > 0 ? r.host.split("@") : false;
          T2 && (r.auth = T2.shift(), r.host = r.hostname = T2.shift());
        }
        return r.search = e.search, r.query = e.query, (!V5.isNull(r.pathname) || !V5.isNull(r.search)) && (r.path = (r.pathname ? r.pathname : "") + (r.search ? r.search : "")), r.href = r.format(), r;
      }
      if (!y4.length)
        return r.pathname = null, r.search ? r.path = "/" + r.search : r.path = null, r.href = r.format(), r;
      for (var S2 = y4.slice(-1)[0], B3 = (r.host || e.host || y4.length > 1) && (S2 === "." || S2 === "..") || S2 === "", F2 = 0, L4 = y4.length;L4 >= 0; L4--)
        S2 = y4[L4], S2 === "." ? y4.splice(L4, 1) : S2 === ".." ? (y4.splice(L4, 1), F2++) : F2 && (y4.splice(L4, 1), F2--);
      if (!v3 && !m3)
        for (;F2--; F2)
          y4.unshift("..");
      v3 && y4[0] !== "" && (!y4[0] || y4[0].charAt(0) !== "/") && y4.unshift(""), B3 && y4.join("/").substr(-1) !== "/" && y4.push("");
      var Y3 = y4[0] === "" || y4[0] && y4[0].charAt(0) === "/";
      if (I3) {
        r.hostname = r.host = Y3 ? "" : y4.length ? y4.shift() : "";
        var T2 = r.host && r.host.indexOf("@") > 0 ? r.host.split("@") : false;
        T2 && (r.auth = T2.shift(), r.host = r.hostname = T2.shift());
      }
      return v3 = v3 || r.host && y4.length, v3 && !Y3 && y4.unshift(""), y4.length ? r.pathname = y4.join("/") : (r.pathname = null, r.path = null), (!V5.isNull(r.pathname) || !V5.isNull(r.search)) && (r.path = (r.pathname ? r.pathname : "") + (r.search ? r.search : "")), r.auth = e.auth || r.auth, r.slashes = r.slashes || e.slashes, r.href = r.format(), r;
    };
    D3.prototype.parseHost = function() {
      var e = this.host, t = ff2.exec(e);
      t && (t = t[0], t !== ":" && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e);
    };
  });
  Hi = b4((ji) => {
    var ki = fi(), mf2 = ur(), bf = li(), _f = ci(), vf2 = Di(), j4 = ji;
    j4.request = function(e, t) {
      typeof e == "string" ? e = vf2.parse(e) : e = bf(e);
      var r = global.location.protocol.search(/^https?:$/) === -1 ? "http:" : "", n = e.protocol || r, i = e.hostname || e.host, o2 = e.port, a3 = e.path || "/";
      i && i.indexOf(":") !== -1 && (i = "[" + i + "]"), e.url = (i ? n + "//" + i : "") + (o2 ? ":" + o2 : "") + a3, e.method = (e.method || "GET").toUpperCase(), e.headers = e.headers || {};
      var s2 = new ki(e);
      return t && s2.on("response", t), s2;
    };
    j4.get = function(t, r) {
      var n = j4.request(t, r);
      return n.end(), n;
    };
    j4.ClientRequest = ki;
    j4.IncomingMessage = mf2.IncomingMessage;
    j4.Agent = function() {
    };
    j4.Agent.defaultMaxSockets = 4;
    j4.globalAgent = new j4.Agent;
    j4.STATUS_CODES = _f;
    j4.METHODS = ["CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE"];
  });
  _r = Rr2(Hi());
  iu = _r.default;
  ({ request: ou, get: au, ClientRequest: su, IncomingMessage: fu, Agent: uu, globalAgent: lu, STATUS_CODES: hu, METHODS: cu } = _r.default);
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
});

// node:https
var exports_https = {};
__export(exports_https, {
  default: () => Cf2
});
function oe2(e) {
  throw new RangeError(Zs[e]);
}
function Js(e, t) {
  let r = [], n = e.length;
  for (;n--; )
    r[n] = t(e[n]);
  return r;
}
function vi2(e, t) {
  let r = e.split("@"), n = "";
  r.length > 1 && (n = r[0] + "@", e = r[1]), e = e.replace(zs, ".");
  let i = e.split("."), o2 = Js(i, t).join(".");
  return n + o2;
}
function _r2(e) {
  let t = [], r = 0, n = e.length;
  for (;r < n; ) {
    let i = e.charCodeAt(r++);
    if (i >= 55296 && i <= 56319 && r < n) {
      let o2 = e.charCodeAt(r++);
      (o2 & 64512) == 56320 ? t.push(((i & 1023) << 10) + (o2 & 1023) + 65536) : (t.push(i), r--);
    } else
      t.push(i);
  }
  return t;
}
var Ji, He, Qi, eo, to, ro, Cr = (e, t) => () => (e && (t = e(e = 0)), t), b5 = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), mt3 = (e, t) => {
  for (var r in t)
    He(e, r, { get: t[r], enumerable: true });
}, We = (e, t, r, n) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let i of eo(t))
      !ro.call(e, i) && i !== r && He(e, i, { get: () => t[i], enumerable: !(n = Qi(t, i)) || n.enumerable });
  return e;
}, $e = (e, t, r) => (We(e, t, "default"), r && We(r, t, "default")), bt3 = (e, t, r) => (r = e != null ? Ji(to(e)) : {}, We(t || !e || !e.__esModule ? He(r, "default", { value: e, enumerable: true }) : r, e)), _t3 = (e) => We(He({}, "__esModule", { value: true }), e), xt, Q3, Tt3, At3, $r, Gr, _e2, qt, cn, jt, fe2, Wt, _n, Kt2, ue2, Ln2, Fn, Qt, nt3, er, it2, Dn2, jn, Xt, hr2, ri2, si, dr3, gr3, pi2, gi3, mi2, Ti, _i2, Ys2, Xs, zs, Zs, mr2, K4, br3, Ei, Qs, bi2, xi2, vr2, Er3, Ri, Si3, ef, tf, Ai2, Ii, Li, ji, Ar2, Vi2, Ir3, ke2, Cf2;
var init_https = __esm(() => {
  Ji = Object.create;
  He = Object.defineProperty;
  Qi = Object.getOwnPropertyDescriptor;
  eo = Object.getOwnPropertyNames;
  to = Object.getPrototypeOf;
  ro = Object.prototype.hasOwnProperty;
  xt = b5((N5) => {
    N5.fetch = Ie(global.fetch) && Ie(global.ReadableStream);
    N5.writableStream = Ie(global.WritableStream);
    N5.abortController = Ie(global.AbortController);
    var J2;
    function vt2() {
      if (J2 !== undefined)
        return J2;
      if (global.XMLHttpRequest) {
        J2 = new global.XMLHttpRequest;
        try {
          J2.open("GET", global.XDomainRequest ? "/" : "https://example.com");
        } catch {
          J2 = null;
        }
      } else
        J2 = null;
      return J2;
    }
    function Et(e) {
      var t = vt2();
      if (!t)
        return false;
      try {
        return t.responseType = e, t.responseType === e;
      } catch {
      }
      return false;
    }
    N5.arraybuffer = N5.fetch || Et("arraybuffer");
    N5.msstream = !N5.fetch && Et("ms-stream");
    N5.mozchunkedarraybuffer = !N5.fetch && Et("moz-chunked-arraybuffer");
    N5.overrideMimeType = N5.fetch || (vt2() ? Ie(vt2().overrideMimeType) : false);
    function Ie(e) {
      return typeof e == "function";
    }
    J2 = null;
  });
  Q3 = b5((Of, Rt2) => {
    typeof Object.create == "function" ? Rt2.exports = function(t, r) {
      r && (t.super_ = r, t.prototype = Object.create(r.prototype, { constructor: { value: t, enumerable: false, writable: true, configurable: true } }));
    } : Rt2.exports = function(t, r) {
      if (r) {
        t.super_ = r;
        var n = function() {
        };
        n.prototype = r.prototype, t.prototype = new n, t.prototype.constructor = t;
      }
    };
  });
  Tt3 = b5((Ff, St2) => {
    var ye2 = typeof Reflect == "object" ? Reflect : null, Lr = ye2 && typeof ye2.apply == "function" ? ye2.apply : function(t, r, n) {
      return Function.prototype.apply.call(t, r, n);
    }, Ge;
    ye2 && typeof ye2.ownKeys == "function" ? Ge = ye2.ownKeys : Object.getOwnPropertySymbols ? Ge = function(t) {
      return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
    } : Ge = function(t) {
      return Object.getOwnPropertyNames(t);
    };
    function no(e) {
      console && console.warn && console.warn(e);
    }
    var Or = Number.isNaN || function(t) {
      return t !== t;
    };
    function x5() {
      x5.init.call(this);
    }
    St2.exports = x5;
    St2.exports.once = so2;
    x5.EventEmitter = x5;
    x5.prototype._events = undefined;
    x5.prototype._eventsCount = 0;
    x5.prototype._maxListeners = undefined;
    var Mr = 10;
    function Ke(e) {
      if (typeof e != "function")
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e);
    }
    Object.defineProperty(x5, "defaultMaxListeners", { enumerable: true, get: function() {
      return Mr;
    }, set: function(e) {
      if (typeof e != "number" || e < 0 || Or(e))
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
      Mr = e;
    } });
    x5.init = function() {
      (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
    };
    x5.prototype.setMaxListeners = function(t) {
      if (typeof t != "number" || t < 0 || Or(t))
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
      return this._maxListeners = t, this;
    };
    function Fr3(e) {
      return e._maxListeners === undefined ? x5.defaultMaxListeners : e._maxListeners;
    }
    x5.prototype.getMaxListeners = function() {
      return Fr3(this);
    };
    x5.prototype.emit = function(t) {
      for (var r = [], n = 1;n < arguments.length; n++)
        r.push(arguments[n]);
      var i = t === "error", o2 = this._events;
      if (o2 !== undefined)
        i = i && o2.error === undefined;
      else if (!i)
        return false;
      if (i) {
        var a3;
        if (r.length > 0 && (a3 = r[0]), a3 instanceof Error)
          throw a3;
        var s2 = new Error("Unhandled error." + (a3 ? " (" + a3.message + ")" : ""));
        throw s2.context = a3, s2;
      }
      var u3 = o2[t];
      if (u3 === undefined)
        return false;
      if (typeof u3 == "function")
        Lr(u3, this, r);
      else
        for (var l3 = u3.length, h4 = Dr2(u3, l3), n = 0;n < l3; ++n)
          Lr(h4[n], this, r);
      return true;
    };
    function Nr(e, t, r, n) {
      var i, o2, a3;
      if (Ke(r), o2 = e._events, o2 === undefined ? (o2 = e._events = Object.create(null), e._eventsCount = 0) : (o2.newListener !== undefined && (e.emit("newListener", t, r.listener ? r.listener : r), o2 = e._events), a3 = o2[t]), a3 === undefined)
        a3 = o2[t] = r, ++e._eventsCount;
      else if (typeof a3 == "function" ? a3 = o2[t] = n ? [r, a3] : [a3, r] : n ? a3.unshift(r) : a3.push(r), i = Fr3(e), i > 0 && a3.length > i && !a3.warned) {
        a3.warned = true;
        var s2 = new Error("Possible EventEmitter memory leak detected. " + a3.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        s2.name = "MaxListenersExceededWarning", s2.emitter = e, s2.type = t, s2.count = a3.length, no(s2);
      }
      return e;
    }
    x5.prototype.addListener = function(t, r) {
      return Nr(this, t, r, false);
    };
    x5.prototype.on = x5.prototype.addListener;
    x5.prototype.prependListener = function(t, r) {
      return Nr(this, t, r, true);
    };
    function io() {
      if (!this.fired)
        return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
    }
    function Ur4(e, t, r) {
      var n = { fired: false, wrapFn: undefined, target: e, type: t, listener: r }, i = io.bind(n);
      return i.listener = r, n.wrapFn = i, i;
    }
    x5.prototype.once = function(t, r) {
      return Ke(r), this.on(t, Ur4(this, t, r)), this;
    };
    x5.prototype.prependOnceListener = function(t, r) {
      return Ke(r), this.prependListener(t, Ur4(this, t, r)), this;
    };
    x5.prototype.removeListener = function(t, r) {
      var n, i, o2, a3, s2;
      if (Ke(r), i = this._events, i === undefined)
        return this;
      if (n = i[t], n === undefined)
        return this;
      if (n === r || n.listener === r)
        --this._eventsCount === 0 ? this._events = Object.create(null) : (delete i[t], i.removeListener && this.emit("removeListener", t, n.listener || r));
      else if (typeof n != "function") {
        for (o2 = -1, a3 = n.length - 1;a3 >= 0; a3--)
          if (n[a3] === r || n[a3].listener === r) {
            s2 = n[a3].listener, o2 = a3;
            break;
          }
        if (o2 < 0)
          return this;
        o2 === 0 ? n.shift() : oo(n, o2), n.length === 1 && (i[t] = n[0]), i.removeListener !== undefined && this.emit("removeListener", t, s2 || r);
      }
      return this;
    };
    x5.prototype.off = x5.prototype.removeListener;
    x5.prototype.removeAllListeners = function(t) {
      var r, n, i;
      if (n = this._events, n === undefined)
        return this;
      if (n.removeListener === undefined)
        return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : n[t] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete n[t]), this;
      if (arguments.length === 0) {
        var o2 = Object.keys(n), a3;
        for (i = 0;i < o2.length; ++i)
          a3 = o2[i], a3 !== "removeListener" && this.removeAllListeners(a3);
        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
      }
      if (r = n[t], typeof r == "function")
        this.removeListener(t, r);
      else if (r !== undefined)
        for (i = r.length - 1;i >= 0; i--)
          this.removeListener(t, r[i]);
      return this;
    };
    function Pr(e, t, r) {
      var n = e._events;
      if (n === undefined)
        return [];
      var i = n[t];
      return i === undefined ? [] : typeof i == "function" ? r ? [i.listener || i] : [i] : r ? ao(i) : Dr2(i, i.length);
    }
    x5.prototype.listeners = function(t) {
      return Pr(this, t, true);
    };
    x5.prototype.rawListeners = function(t) {
      return Pr(this, t, false);
    };
    x5.listenerCount = function(e, t) {
      return typeof e.listenerCount == "function" ? e.listenerCount(t) : qr2.call(e, t);
    };
    x5.prototype.listenerCount = qr2;
    function qr2(e) {
      var t = this._events;
      if (t !== undefined) {
        var r = t[e];
        if (typeof r == "function")
          return 1;
        if (r !== undefined)
          return r.length;
      }
      return 0;
    }
    x5.prototype.eventNames = function() {
      return this._eventsCount > 0 ? Ge(this._events) : [];
    };
    function Dr2(e, t) {
      for (var r = new Array(t), n = 0;n < t; ++n)
        r[n] = e[n];
      return r;
    }
    function oo(e, t) {
      for (;t + 1 < e.length; t++)
        e[t] = e[t + 1];
      e.pop();
    }
    function ao(e) {
      for (var t = new Array(e.length), r = 0;r < t.length; ++r)
        t[r] = e[r].listener || e[r];
      return t;
    }
    function so2(e, t) {
      return new Promise(function(r, n) {
        function i(a3) {
          e.removeListener(t, o2), n(a3);
        }
        function o2() {
          typeof e.removeListener == "function" && e.removeListener("error", i), r([].slice.call(arguments));
        }
        kr(e, t, o2, { once: true }), t !== "error" && fo(e, i, { once: true });
      });
    }
    function fo(e, t, r) {
      typeof e.on == "function" && kr(e, "error", t, r);
    }
    function kr(e, t, r, n) {
      if (typeof e.on == "function")
        n.once ? e.once(t, r) : e.on(t, r);
      else if (typeof e.addEventListener == "function")
        e.addEventListener(t, function i(o2) {
          n.once && e.removeEventListener(t, i), r(o2);
        });
      else
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
    }
  });
  At3 = b5((Nf, jr) => {
    jr.exports = Tt3().EventEmitter;
  });
  $r = b5((Ve) => {
    Ve.byteLength = lo;
    Ve.toByteArray = co;
    Ve.fromByteArray = go;
    var W = [], U3 = [], uo = typeof Uint8Array < "u" ? Uint8Array : Array, Bt2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (ae = 0, Wr = Bt2.length;ae < Wr; ++ae)
      W[ae] = Bt2[ae], U3[Bt2.charCodeAt(ae)] = ae;
    var ae, Wr;
    U3[45] = 62;
    U3[95] = 63;
    function Hr2(e) {
      var t = e.length;
      if (t % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var r = e.indexOf("=");
      r === -1 && (r = t);
      var n = r === t ? 0 : 4 - r % 4;
      return [r, n];
    }
    function lo(e) {
      var t = Hr2(e), r = t[0], n = t[1];
      return (r + n) * 3 / 4 - n;
    }
    function ho(e, t, r) {
      return (t + r) * 3 / 4 - r;
    }
    function co(e) {
      var t, r = Hr2(e), n = r[0], i = r[1], o2 = new uo(ho(e, n, i)), a3 = 0, s2 = i > 0 ? n - 4 : n, u3;
      for (u3 = 0;u3 < s2; u3 += 4)
        t = U3[e.charCodeAt(u3)] << 18 | U3[e.charCodeAt(u3 + 1)] << 12 | U3[e.charCodeAt(u3 + 2)] << 6 | U3[e.charCodeAt(u3 + 3)], o2[a3++] = t >> 16 & 255, o2[a3++] = t >> 8 & 255, o2[a3++] = t & 255;
      return i === 2 && (t = U3[e.charCodeAt(u3)] << 2 | U3[e.charCodeAt(u3 + 1)] >> 4, o2[a3++] = t & 255), i === 1 && (t = U3[e.charCodeAt(u3)] << 10 | U3[e.charCodeAt(u3 + 1)] << 4 | U3[e.charCodeAt(u3 + 2)] >> 2, o2[a3++] = t >> 8 & 255, o2[a3++] = t & 255), o2;
    }
    function po(e) {
      return W[e >> 18 & 63] + W[e >> 12 & 63] + W[e >> 6 & 63] + W[e & 63];
    }
    function yo(e, t, r) {
      for (var n, i = [], o2 = t;o2 < r; o2 += 3)
        n = (e[o2] << 16 & 16711680) + (e[o2 + 1] << 8 & 65280) + (e[o2 + 2] & 255), i.push(po(n));
      return i.join("");
    }
    function go(e) {
      for (var t, r = e.length, n = r % 3, i = [], o2 = 16383, a3 = 0, s2 = r - n;a3 < s2; a3 += o2)
        i.push(yo(e, a3, a3 + o2 > s2 ? s2 : a3 + o2));
      return n === 1 ? (t = e[r - 1], i.push(W[t >> 2] + W[t << 4 & 63] + "==")) : n === 2 && (t = (e[r - 2] << 8) + e[r - 1], i.push(W[t >> 10] + W[t >> 4 & 63] + W[t << 2 & 63] + "=")), i.join("");
    }
  });
  Gr = b5((It) => {
    It.read = function(e, t, r, n, i) {
      var o2, a3, s2 = i * 8 - n - 1, u3 = (1 << s2) - 1, l3 = u3 >> 1, h4 = -7, c2 = r ? i - 1 : 0, d3 = r ? -1 : 1, p3 = e[t + c2];
      for (c2 += d3, o2 = p3 & (1 << -h4) - 1, p3 >>= -h4, h4 += s2;h4 > 0; o2 = o2 * 256 + e[t + c2], c2 += d3, h4 -= 8)
        ;
      for (a3 = o2 & (1 << -h4) - 1, o2 >>= -h4, h4 += n;h4 > 0; a3 = a3 * 256 + e[t + c2], c2 += d3, h4 -= 8)
        ;
      if (o2 === 0)
        o2 = 1 - l3;
      else {
        if (o2 === u3)
          return a3 ? NaN : (p3 ? -1 : 1) * (1 / 0);
        a3 = a3 + Math.pow(2, n), o2 = o2 - l3;
      }
      return (p3 ? -1 : 1) * a3 * Math.pow(2, o2 - n);
    };
    It.write = function(e, t, r, n, i, o2) {
      var a3, s2, u3, l3 = o2 * 8 - i - 1, h4 = (1 << l3) - 1, c2 = h4 >> 1, d3 = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p3 = n ? 0 : o2 - 1, g5 = n ? 1 : -1, E5 = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0;
      for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s2 = isNaN(t) ? 1 : 0, a3 = h4) : (a3 = Math.floor(Math.log(t) / Math.LN2), t * (u3 = Math.pow(2, -a3)) < 1 && (a3--, u3 *= 2), a3 + c2 >= 1 ? t += d3 / u3 : t += d3 * Math.pow(2, 1 - c2), t * u3 >= 2 && (a3++, u3 /= 2), a3 + c2 >= h4 ? (s2 = 0, a3 = h4) : a3 + c2 >= 1 ? (s2 = (t * u3 - 1) * Math.pow(2, i), a3 = a3 + c2) : (s2 = t * Math.pow(2, c2 - 1) * Math.pow(2, i), a3 = 0));i >= 8; e[r + p3] = s2 & 255, p3 += g5, s2 /= 256, i -= 8)
        ;
      for (a3 = a3 << i | s2, l3 += i;l3 > 0; e[r + p3] = a3 & 255, p3 += g5, a3 /= 256, l3 -= 8)
        ;
      e[r + p3 - g5] |= E5 * 128;
    };
  });
  _e2 = b5((be2) => {
    var Ct = $r(), we = Gr(), Kr2 = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    be2.Buffer = f2;
    be2.SlowBuffer = Eo;
    be2.INSPECT_MAX_BYTES = 50;
    var Ye = 2147483647;
    be2.kMaxLength = Ye;
    f2.TYPED_ARRAY_SUPPORT = wo2();
    !f2.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function wo2() {
      try {
        let e = new Uint8Array(1), t = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), e.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(f2.prototype, "parent", { enumerable: true, get: function() {
      if (!!f2.isBuffer(this))
        return this.buffer;
    } });
    Object.defineProperty(f2.prototype, "offset", { enumerable: true, get: function() {
      if (!!f2.isBuffer(this))
        return this.byteOffset;
    } });
    function X4(e) {
      if (e > Ye)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
      let t = new Uint8Array(e);
      return Object.setPrototypeOf(t, f2.prototype), t;
    }
    function f2(e, t, r) {
      if (typeof e == "number") {
        if (typeof t == "string")
          throw new TypeError('The "string" argument must be of type string. Received type number');
        return Ft2(e);
      }
      return zr2(e, t, r);
    }
    f2.poolSize = 8192;
    function zr2(e, t, r) {
      if (typeof e == "string")
        return bo(e, t);
      if (ArrayBuffer.isView(e))
        return _o(e);
      if (e == null)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
      if (H3(e, ArrayBuffer) || e && H3(e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (H3(e, SharedArrayBuffer) || e && H3(e.buffer, SharedArrayBuffer)))
        return Mt(e, t, r);
      if (typeof e == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      let n = e.valueOf && e.valueOf();
      if (n != null && n !== e)
        return f2.from(n, t, r);
      let i = vo(e);
      if (i)
        return i;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] == "function")
        return f2.from(e[Symbol.toPrimitive]("string"), t, r);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
    }
    f2.from = function(e, t, r) {
      return zr2(e, t, r);
    };
    Object.setPrototypeOf(f2.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(f2, Uint8Array);
    function Zr2(e) {
      if (typeof e != "number")
        throw new TypeError('"size" argument must be of type number');
      if (e < 0)
        throw new RangeError('The value "' + e + '" is invalid for option "size"');
    }
    function mo(e, t, r) {
      return Zr2(e), e <= 0 ? X4(e) : t !== undefined ? typeof r == "string" ? X4(e).fill(t, r) : X4(e).fill(t) : X4(e);
    }
    f2.alloc = function(e, t, r) {
      return mo(e, t, r);
    };
    function Ft2(e) {
      return Zr2(e), X4(e < 0 ? 0 : Nt3(e) | 0);
    }
    f2.allocUnsafe = function(e) {
      return Ft2(e);
    };
    f2.allocUnsafeSlow = function(e) {
      return Ft2(e);
    };
    function bo(e, t) {
      if ((typeof t != "string" || t === "") && (t = "utf8"), !f2.isEncoding(t))
        throw new TypeError("Unknown encoding: " + t);
      let r = Jr(e, t) | 0, n = X4(r), i = n.write(e, t);
      return i !== r && (n = n.slice(0, i)), n;
    }
    function Lt3(e) {
      let t = e.length < 0 ? 0 : Nt3(e.length) | 0, r = X4(t);
      for (let n = 0;n < t; n += 1)
        r[n] = e[n] & 255;
      return r;
    }
    function _o(e) {
      if (H3(e, Uint8Array)) {
        let t = new Uint8Array(e);
        return Mt(t.buffer, t.byteOffset, t.byteLength);
      }
      return Lt3(e);
    }
    function Mt(e, t, r) {
      if (t < 0 || e.byteLength < t)
        throw new RangeError('"offset" is outside of buffer bounds');
      if (e.byteLength < t + (r || 0))
        throw new RangeError('"length" is outside of buffer bounds');
      let n;
      return t === undefined && r === undefined ? n = new Uint8Array(e) : r === undefined ? n = new Uint8Array(e, t) : n = new Uint8Array(e, t, r), Object.setPrototypeOf(n, f2.prototype), n;
    }
    function vo(e) {
      if (f2.isBuffer(e)) {
        let t = Nt3(e.length) | 0, r = X4(t);
        return r.length === 0 || e.copy(r, 0, 0, t), r;
      }
      if (e.length !== undefined)
        return typeof e.length != "number" || Pt(e.length) ? X4(0) : Lt3(e);
      if (e.type === "Buffer" && Array.isArray(e.data))
        return Lt3(e.data);
    }
    function Nt3(e) {
      if (e >= Ye)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + Ye.toString(16) + " bytes");
      return e | 0;
    }
    function Eo(e) {
      return +e != e && (e = 0), f2.alloc(+e);
    }
    f2.isBuffer = function(t) {
      return t != null && t._isBuffer === true && t !== f2.prototype;
    };
    f2.compare = function(t, r) {
      if (H3(t, Uint8Array) && (t = f2.from(t, t.offset, t.byteLength)), H3(r, Uint8Array) && (r = f2.from(r, r.offset, r.byteLength)), !f2.isBuffer(t) || !f2.isBuffer(r))
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (t === r)
        return 0;
      let n = t.length, i = r.length;
      for (let o2 = 0, a3 = Math.min(n, i);o2 < a3; ++o2)
        if (t[o2] !== r[o2]) {
          n = t[o2], i = r[o2];
          break;
        }
      return n < i ? -1 : i < n ? 1 : 0;
    };
    f2.isEncoding = function(t) {
      switch (String(t).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    f2.concat = function(t, r) {
      if (!Array.isArray(t))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (t.length === 0)
        return f2.alloc(0);
      let n;
      if (r === undefined)
        for (r = 0, n = 0;n < t.length; ++n)
          r += t[n].length;
      let i = f2.allocUnsafe(r), o2 = 0;
      for (n = 0;n < t.length; ++n) {
        let a3 = t[n];
        if (H3(a3, Uint8Array))
          o2 + a3.length > i.length ? (f2.isBuffer(a3) || (a3 = f2.from(a3)), a3.copy(i, o2)) : Uint8Array.prototype.set.call(i, a3, o2);
        else if (f2.isBuffer(a3))
          a3.copy(i, o2);
        else
          throw new TypeError('"list" argument must be an Array of Buffers');
        o2 += a3.length;
      }
      return i;
    };
    function Jr(e, t) {
      if (f2.isBuffer(e))
        return e.length;
      if (ArrayBuffer.isView(e) || H3(e, ArrayBuffer))
        return e.byteLength;
      if (typeof e != "string")
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
      let r = e.length, n = arguments.length > 2 && arguments[2] === true;
      if (!n && r === 0)
        return 0;
      let i = false;
      for (;; )
        switch (t) {
          case "ascii":
          case "latin1":
          case "binary":
            return r;
          case "utf8":
          case "utf-8":
            return Ot(e).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return r * 2;
          case "hex":
            return r >>> 1;
          case "base64":
            return fn(e).length;
          default:
            if (i)
              return n ? -1 : Ot(e).length;
            t = ("" + t).toLowerCase(), i = true;
        }
    }
    f2.byteLength = Jr;
    function xo(e, t, r) {
      let n = false;
      if ((t === undefined || t < 0) && (t = 0), t > this.length || ((r === undefined || r > this.length) && (r = this.length), r <= 0) || (r >>>= 0, t >>>= 0, r <= t))
        return "";
      for (e || (e = "utf8");; )
        switch (e) {
          case "hex":
            return Oo(this, t, r);
          case "utf8":
          case "utf-8":
            return en(this, t, r);
          case "ascii":
            return Lo(this, t, r);
          case "latin1":
          case "binary":
            return Mo2(this, t, r);
          case "base64":
            return Io(this, t, r);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Fo(this, t, r);
          default:
            if (n)
              throw new TypeError("Unknown encoding: " + e);
            e = (e + "").toLowerCase(), n = true;
        }
    }
    f2.prototype._isBuffer = true;
    function se2(e, t, r) {
      let n = e[t];
      e[t] = e[r], e[r] = n;
    }
    f2.prototype.swap16 = function() {
      let t = this.length;
      if (t % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let r = 0;r < t; r += 2)
        se2(this, r, r + 1);
      return this;
    };
    f2.prototype.swap32 = function() {
      let t = this.length;
      if (t % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let r = 0;r < t; r += 4)
        se2(this, r, r + 3), se2(this, r + 1, r + 2);
      return this;
    };
    f2.prototype.swap64 = function() {
      let t = this.length;
      if (t % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let r = 0;r < t; r += 8)
        se2(this, r, r + 7), se2(this, r + 1, r + 6), se2(this, r + 2, r + 5), se2(this, r + 3, r + 4);
      return this;
    };
    f2.prototype.toString = function() {
      let t = this.length;
      return t === 0 ? "" : arguments.length === 0 ? en(this, 0, t) : xo.apply(this, arguments);
    };
    f2.prototype.toLocaleString = f2.prototype.toString;
    f2.prototype.equals = function(t) {
      if (!f2.isBuffer(t))
        throw new TypeError("Argument must be a Buffer");
      return this === t ? true : f2.compare(this, t) === 0;
    };
    f2.prototype.inspect = function() {
      let t = "", r = be2.INSPECT_MAX_BYTES;
      return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
    };
    Kr2 && (f2.prototype[Kr2] = f2.prototype.inspect);
    f2.prototype.compare = function(t, r, n, i, o2) {
      if (H3(t, Uint8Array) && (t = f2.from(t, t.offset, t.byteLength)), !f2.isBuffer(t))
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);
      if (r === undefined && (r = 0), n === undefined && (n = t ? t.length : 0), i === undefined && (i = 0), o2 === undefined && (o2 = this.length), r < 0 || n > t.length || i < 0 || o2 > this.length)
        throw new RangeError("out of range index");
      if (i >= o2 && r >= n)
        return 0;
      if (i >= o2)
        return -1;
      if (r >= n)
        return 1;
      if (r >>>= 0, n >>>= 0, i >>>= 0, o2 >>>= 0, this === t)
        return 0;
      let a3 = o2 - i, s2 = n - r, u3 = Math.min(a3, s2), l3 = this.slice(i, o2), h4 = t.slice(r, n);
      for (let c2 = 0;c2 < u3; ++c2)
        if (l3[c2] !== h4[c2]) {
          a3 = l3[c2], s2 = h4[c2];
          break;
        }
      return a3 < s2 ? -1 : s2 < a3 ? 1 : 0;
    };
    function Qr(e, t, r, n, i) {
      if (e.length === 0)
        return -1;
      if (typeof r == "string" ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, Pt(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
        if (i)
          return -1;
        r = e.length - 1;
      } else if (r < 0)
        if (i)
          r = 0;
        else
          return -1;
      if (typeof t == "string" && (t = f2.from(t, n)), f2.isBuffer(t))
        return t.length === 0 ? -1 : Vr(e, t, r, n, i);
      if (typeof t == "number")
        return t = t & 255, typeof Uint8Array.prototype.indexOf == "function" ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : Vr(e, [t], r, n, i);
      throw new TypeError("val must be string, number or Buffer");
    }
    function Vr(e, t, r, n, i) {
      let o2 = 1, a3 = e.length, s2 = t.length;
      if (n !== undefined && (n = String(n).toLowerCase(), n === "ucs2" || n === "ucs-2" || n === "utf16le" || n === "utf-16le")) {
        if (e.length < 2 || t.length < 2)
          return -1;
        o2 = 2, a3 /= 2, s2 /= 2, r /= 2;
      }
      function u3(h4, c2) {
        return o2 === 1 ? h4[c2] : h4.readUInt16BE(c2 * o2);
      }
      let l3;
      if (i) {
        let h4 = -1;
        for (l3 = r;l3 < a3; l3++)
          if (u3(e, l3) === u3(t, h4 === -1 ? 0 : l3 - h4)) {
            if (h4 === -1 && (h4 = l3), l3 - h4 + 1 === s2)
              return h4 * o2;
          } else
            h4 !== -1 && (l3 -= l3 - h4), h4 = -1;
      } else
        for (r + s2 > a3 && (r = a3 - s2), l3 = r;l3 >= 0; l3--) {
          let h4 = true;
          for (let c2 = 0;c2 < s2; c2++)
            if (u3(e, l3 + c2) !== u3(t, c2)) {
              h4 = false;
              break;
            }
          if (h4)
            return l3;
        }
      return -1;
    }
    f2.prototype.includes = function(t, r, n) {
      return this.indexOf(t, r, n) !== -1;
    };
    f2.prototype.indexOf = function(t, r, n) {
      return Qr(this, t, r, n, true);
    };
    f2.prototype.lastIndexOf = function(t, r, n) {
      return Qr(this, t, r, n, false);
    };
    function Ro(e, t, r, n) {
      r = Number(r) || 0;
      let i = e.length - r;
      n ? (n = Number(n), n > i && (n = i)) : n = i;
      let o2 = t.length;
      n > o2 / 2 && (n = o2 / 2);
      let a3;
      for (a3 = 0;a3 < n; ++a3) {
        let s2 = parseInt(t.substr(a3 * 2, 2), 16);
        if (Pt(s2))
          return a3;
        e[r + a3] = s2;
      }
      return a3;
    }
    function So(e, t, r, n) {
      return Xe(Ot(t, e.length - r), e, r, n);
    }
    function To(e, t, r, n) {
      return Xe(qo(t), e, r, n);
    }
    function Ao(e, t, r, n) {
      return Xe(fn(t), e, r, n);
    }
    function Bo(e, t, r, n) {
      return Xe(Do(t, e.length - r), e, r, n);
    }
    f2.prototype.write = function(t, r, n, i) {
      if (r === undefined)
        i = "utf8", n = this.length, r = 0;
      else if (n === undefined && typeof r == "string")
        i = r, n = this.length, r = 0;
      else if (isFinite(r))
        r = r >>> 0, isFinite(n) ? (n = n >>> 0, i === undefined && (i = "utf8")) : (i = n, n = undefined);
      else
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      let o2 = this.length - r;
      if ((n === undefined || n > o2) && (n = o2), t.length > 0 && (n < 0 || r < 0) || r > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      i || (i = "utf8");
      let a3 = false;
      for (;; )
        switch (i) {
          case "hex":
            return Ro(this, t, r, n);
          case "utf8":
          case "utf-8":
            return So(this, t, r, n);
          case "ascii":
          case "latin1":
          case "binary":
            return To(this, t, r, n);
          case "base64":
            return Ao(this, t, r, n);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Bo(this, t, r, n);
          default:
            if (a3)
              throw new TypeError("Unknown encoding: " + i);
            i = ("" + i).toLowerCase(), a3 = true;
        }
    };
    f2.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function Io(e, t, r) {
      return t === 0 && r === e.length ? Ct.fromByteArray(e) : Ct.fromByteArray(e.slice(t, r));
    }
    function en(e, t, r) {
      r = Math.min(e.length, r);
      let n = [], i = t;
      for (;i < r; ) {
        let o2 = e[i], a3 = null, s2 = o2 > 239 ? 4 : o2 > 223 ? 3 : o2 > 191 ? 2 : 1;
        if (i + s2 <= r) {
          let u3, l3, h4, c2;
          switch (s2) {
            case 1:
              o2 < 128 && (a3 = o2);
              break;
            case 2:
              u3 = e[i + 1], (u3 & 192) === 128 && (c2 = (o2 & 31) << 6 | u3 & 63, c2 > 127 && (a3 = c2));
              break;
            case 3:
              u3 = e[i + 1], l3 = e[i + 2], (u3 & 192) === 128 && (l3 & 192) === 128 && (c2 = (o2 & 15) << 12 | (u3 & 63) << 6 | l3 & 63, c2 > 2047 && (c2 < 55296 || c2 > 57343) && (a3 = c2));
              break;
            case 4:
              u3 = e[i + 1], l3 = e[i + 2], h4 = e[i + 3], (u3 & 192) === 128 && (l3 & 192) === 128 && (h4 & 192) === 128 && (c2 = (o2 & 15) << 18 | (u3 & 63) << 12 | (l3 & 63) << 6 | h4 & 63, c2 > 65535 && c2 < 1114112 && (a3 = c2));
          }
        }
        a3 === null ? (a3 = 65533, s2 = 1) : a3 > 65535 && (a3 -= 65536, n.push(a3 >>> 10 & 1023 | 55296), a3 = 56320 | a3 & 1023), n.push(a3), i += s2;
      }
      return Co(n);
    }
    var Yr2 = 4096;
    function Co(e) {
      let t = e.length;
      if (t <= Yr2)
        return String.fromCharCode.apply(String, e);
      let r = "", n = 0;
      for (;n < t; )
        r += String.fromCharCode.apply(String, e.slice(n, n += Yr2));
      return r;
    }
    function Lo(e, t, r) {
      let n = "";
      r = Math.min(e.length, r);
      for (let i = t;i < r; ++i)
        n += String.fromCharCode(e[i] & 127);
      return n;
    }
    function Mo2(e, t, r) {
      let n = "";
      r = Math.min(e.length, r);
      for (let i = t;i < r; ++i)
        n += String.fromCharCode(e[i]);
      return n;
    }
    function Oo(e, t, r) {
      let n = e.length;
      (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
      let i = "";
      for (let o2 = t;o2 < r; ++o2)
        i += ko[e[o2]];
      return i;
    }
    function Fo(e, t, r) {
      let n = e.slice(t, r), i = "";
      for (let o2 = 0;o2 < n.length - 1; o2 += 2)
        i += String.fromCharCode(n[o2] + n[o2 + 1] * 256);
      return i;
    }
    f2.prototype.slice = function(t, r) {
      let n = this.length;
      t = ~~t, r = r === undefined ? n : ~~r, t < 0 ? (t += n, t < 0 && (t = 0)) : t > n && (t = n), r < 0 ? (r += n, r < 0 && (r = 0)) : r > n && (r = n), r < t && (r = t);
      let i = this.subarray(t, r);
      return Object.setPrototypeOf(i, f2.prototype), i;
    };
    function I3(e, t, r) {
      if (e % 1 !== 0 || e < 0)
        throw new RangeError("offset is not uint");
      if (e + t > r)
        throw new RangeError("Trying to access beyond buffer length");
    }
    f2.prototype.readUintLE = f2.prototype.readUIntLE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || I3(t, r, this.length);
      let i = this[t], o2 = 1, a3 = 0;
      for (;++a3 < r && (o2 *= 256); )
        i += this[t + a3] * o2;
      return i;
    };
    f2.prototype.readUintBE = f2.prototype.readUIntBE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || I3(t, r, this.length);
      let i = this[t + --r], o2 = 1;
      for (;r > 0 && (o2 *= 256); )
        i += this[t + --r] * o2;
      return i;
    };
    f2.prototype.readUint8 = f2.prototype.readUInt8 = function(t, r) {
      return t = t >>> 0, r || I3(t, 1, this.length), this[t];
    };
    f2.prototype.readUint16LE = f2.prototype.readUInt16LE = function(t, r) {
      return t = t >>> 0, r || I3(t, 2, this.length), this[t] | this[t + 1] << 8;
    };
    f2.prototype.readUint16BE = f2.prototype.readUInt16BE = function(t, r) {
      return t = t >>> 0, r || I3(t, 2, this.length), this[t] << 8 | this[t + 1];
    };
    f2.prototype.readUint32LE = f2.prototype.readUInt32LE = function(t, r) {
      return t = t >>> 0, r || I3(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + this[t + 3] * 16777216;
    };
    f2.prototype.readUint32BE = f2.prototype.readUInt32BE = function(t, r) {
      return t = t >>> 0, r || I3(t, 4, this.length), this[t] * 16777216 + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
    };
    f2.prototype.readBigUInt64LE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ce2(t, this.length - 8);
      let i = r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24, o2 = this[++t] + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + n * 2 ** 24;
      return BigInt(i) + (BigInt(o2) << BigInt(32));
    });
    f2.prototype.readBigUInt64BE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ce2(t, this.length - 8);
      let i = r * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t], o2 = this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + n;
      return (BigInt(i) << BigInt(32)) + BigInt(o2);
    });
    f2.prototype.readIntLE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || I3(t, r, this.length);
      let i = this[t], o2 = 1, a3 = 0;
      for (;++a3 < r && (o2 *= 256); )
        i += this[t + a3] * o2;
      return o2 *= 128, i >= o2 && (i -= Math.pow(2, 8 * r)), i;
    };
    f2.prototype.readIntBE = function(t, r, n) {
      t = t >>> 0, r = r >>> 0, n || I3(t, r, this.length);
      let i = r, o2 = 1, a3 = this[t + --i];
      for (;i > 0 && (o2 *= 256); )
        a3 += this[t + --i] * o2;
      return o2 *= 128, a3 >= o2 && (a3 -= Math.pow(2, 8 * r)), a3;
    };
    f2.prototype.readInt8 = function(t, r) {
      return t = t >>> 0, r || I3(t, 1, this.length), this[t] & 128 ? (255 - this[t] + 1) * -1 : this[t];
    };
    f2.prototype.readInt16LE = function(t, r) {
      t = t >>> 0, r || I3(t, 2, this.length);
      let n = this[t] | this[t + 1] << 8;
      return n & 32768 ? n | 4294901760 : n;
    };
    f2.prototype.readInt16BE = function(t, r) {
      t = t >>> 0, r || I3(t, 2, this.length);
      let n = this[t + 1] | this[t] << 8;
      return n & 32768 ? n | 4294901760 : n;
    };
    f2.prototype.readInt32LE = function(t, r) {
      return t = t >>> 0, r || I3(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
    };
    f2.prototype.readInt32BE = function(t, r) {
      return t = t >>> 0, r || I3(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
    };
    f2.prototype.readBigInt64LE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ce2(t, this.length - 8);
      let i = this[t + 4] + this[t + 5] * 2 ** 8 + this[t + 6] * 2 ** 16 + (n << 24);
      return (BigInt(i) << BigInt(32)) + BigInt(r + this[++t] * 2 ** 8 + this[++t] * 2 ** 16 + this[++t] * 2 ** 24);
    });
    f2.prototype.readBigInt64BE = ee(function(t) {
      t = t >>> 0, me(t, "offset");
      let r = this[t], n = this[t + 7];
      (r === undefined || n === undefined) && Ce2(t, this.length - 8);
      let i = (r << 24) + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + this[++t];
      return (BigInt(i) << BigInt(32)) + BigInt(this[++t] * 2 ** 24 + this[++t] * 2 ** 16 + this[++t] * 2 ** 8 + n);
    });
    f2.prototype.readFloatLE = function(t, r) {
      return t = t >>> 0, r || I3(t, 4, this.length), we.read(this, t, true, 23, 4);
    };
    f2.prototype.readFloatBE = function(t, r) {
      return t = t >>> 0, r || I3(t, 4, this.length), we.read(this, t, false, 23, 4);
    };
    f2.prototype.readDoubleLE = function(t, r) {
      return t = t >>> 0, r || I3(t, 8, this.length), we.read(this, t, true, 52, 8);
    };
    f2.prototype.readDoubleBE = function(t, r) {
      return t = t >>> 0, r || I3(t, 8, this.length), we.read(this, t, false, 52, 8);
    };
    function O4(e, t, r, n, i, o2) {
      if (!f2.isBuffer(e))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (t > i || t < o2)
        throw new RangeError('"value" argument is out of bounds');
      if (r + n > e.length)
        throw new RangeError("Index out of range");
    }
    f2.prototype.writeUintLE = f2.prototype.writeUIntLE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, n = n >>> 0, !i) {
        let s2 = Math.pow(2, 8 * n) - 1;
        O4(this, t, r, n, s2, 0);
      }
      let o2 = 1, a3 = 0;
      for (this[r] = t & 255;++a3 < n && (o2 *= 256); )
        this[r + a3] = t / o2 & 255;
      return r + n;
    };
    f2.prototype.writeUintBE = f2.prototype.writeUIntBE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, n = n >>> 0, !i) {
        let s2 = Math.pow(2, 8 * n) - 1;
        O4(this, t, r, n, s2, 0);
      }
      let o2 = n - 1, a3 = 1;
      for (this[r + o2] = t & 255;--o2 >= 0 && (a3 *= 256); )
        this[r + o2] = t / a3 & 255;
      return r + n;
    };
    f2.prototype.writeUint8 = f2.prototype.writeUInt8 = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 1, 255, 0), this[r] = t & 255, r + 1;
    };
    f2.prototype.writeUint16LE = f2.prototype.writeUInt16LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 65535, 0), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    f2.prototype.writeUint16BE = f2.prototype.writeUInt16BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 65535, 0), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    f2.prototype.writeUint32LE = f2.prototype.writeUInt32LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 4294967295, 0), this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = t & 255, r + 4;
    };
    f2.prototype.writeUint32BE = f2.prototype.writeUInt32BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 4294967295, 0), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    function tn2(e, t, r, n, i) {
      sn(t, n, i, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2, o2 = o2 >> 8, e[r++] = o2;
      let a3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, a3 = a3 >> 8, e[r++] = a3, r;
    }
    function rn(e, t, r, n, i) {
      sn(t, n, i, e, r, 7);
      let o2 = Number(t & BigInt(4294967295));
      e[r + 7] = o2, o2 = o2 >> 8, e[r + 6] = o2, o2 = o2 >> 8, e[r + 5] = o2, o2 = o2 >> 8, e[r + 4] = o2;
      let a3 = Number(t >> BigInt(32) & BigInt(4294967295));
      return e[r + 3] = a3, a3 = a3 >> 8, e[r + 2] = a3, a3 = a3 >> 8, e[r + 1] = a3, a3 = a3 >> 8, e[r] = a3, r + 8;
    }
    f2.prototype.writeBigUInt64LE = ee(function(t, r = 0) {
      return tn2(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    f2.prototype.writeBigUInt64BE = ee(function(t, r = 0) {
      return rn(this, t, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    f2.prototype.writeIntLE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, !i) {
        let u3 = Math.pow(2, 8 * n - 1);
        O4(this, t, r, n, u3 - 1, -u3);
      }
      let o2 = 0, a3 = 1, s2 = 0;
      for (this[r] = t & 255;++o2 < n && (a3 *= 256); )
        t < 0 && s2 === 0 && this[r + o2 - 1] !== 0 && (s2 = 1), this[r + o2] = (t / a3 >> 0) - s2 & 255;
      return r + n;
    };
    f2.prototype.writeIntBE = function(t, r, n, i) {
      if (t = +t, r = r >>> 0, !i) {
        let u3 = Math.pow(2, 8 * n - 1);
        O4(this, t, r, n, u3 - 1, -u3);
      }
      let o2 = n - 1, a3 = 1, s2 = 0;
      for (this[r + o2] = t & 255;--o2 >= 0 && (a3 *= 256); )
        t < 0 && s2 === 0 && this[r + o2 + 1] !== 0 && (s2 = 1), this[r + o2] = (t / a3 >> 0) - s2 & 255;
      return r + n;
    };
    f2.prototype.writeInt8 = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[r] = t & 255, r + 1;
    };
    f2.prototype.writeInt16LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 32767, -32768), this[r] = t & 255, this[r + 1] = t >>> 8, r + 2;
    };
    f2.prototype.writeInt16BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 2, 32767, -32768), this[r] = t >>> 8, this[r + 1] = t & 255, r + 2;
    };
    f2.prototype.writeInt32LE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 2147483647, -2147483648), this[r] = t & 255, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24, r + 4;
    };
    f2.prototype.writeInt32BE = function(t, r, n) {
      return t = +t, r = r >>> 0, n || O4(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = t & 255, r + 4;
    };
    f2.prototype.writeBigInt64LE = ee(function(t, r = 0) {
      return tn2(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    f2.prototype.writeBigInt64BE = ee(function(t, r = 0) {
      return rn(this, t, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function nn(e, t, r, n, i, o2) {
      if (r + n > e.length)
        throw new RangeError("Index out of range");
      if (r < 0)
        throw new RangeError("Index out of range");
    }
    function on(e, t, r, n, i) {
      return t = +t, r = r >>> 0, i || nn(e, t, r, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), we.write(e, t, r, n, 23, 4), r + 4;
    }
    f2.prototype.writeFloatLE = function(t, r, n) {
      return on(this, t, r, true, n);
    };
    f2.prototype.writeFloatBE = function(t, r, n) {
      return on(this, t, r, false, n);
    };
    function an2(e, t, r, n, i) {
      return t = +t, r = r >>> 0, i || nn(e, t, rwe.write(e, t, r, n, 52, 8), r + 8;
    }
    f2.prototype.writeDoubleLE = function(t, r, n) {
      return an2(this, t, r, true, n);
    };
    f2.prototype.writeDoubleBE = function(t, r, n) {
      return an2(this, t, r, false, n);
    };
    f2.prototype.copy = function(t, r, n, i) {
      if (!f2.isBuffer(t))
        throw new TypeError("argument should be a Buffer");
      if (n || (n = 0), !i && i !== 0 && (i = this.length), r >= t.length && (r = t.length), r || (r = 0), i > 0 && i < n && (i = n), i === n || t.length === 0 || this.length === 0)
        return 0;
      if (r < 0)
        throw new RangeError("targetStart out of bounds");
      if (n < 0 || n >= this.length)
        throw new RangeError("Index out of range");
      if (i < 0)
        throw new RangeError("sourceEnd out of bounds");
      i > this.length && (i = this.length), t.length - r < i - n && (i = t.length - r + n);
      let o2 = i - n;
      return this === t && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(r, n, i) : Uint8Array.prototype.set.call(t, this.subarray(n, i), r), o2;
    };
    f2.prototype.fill = function(t, r, n, i) {
      if (typeof t == "string") {
        if (typeof r == "string" ? (i = r, r = 0, n = this.length) : typeof n == "string" && (i = n, n = this.length), i !== undefined && typeof i != "string")
          throw new TypeError("encoding must be a string");
        if (typeof i == "string" && !f2.isEncoding(i))
          throw new TypeError("Unknown encoding: " + i);
        if (t.length === 1) {
          let a3 = t.charCodeAt(0);
          (i === "utf8" && a3 < 128 || i === "latin1") && (t = a3);
        }
      } else
        typeof t == "number" ? t = t & 255 : typeof t == "boolean" && (t = Number(t));
      if (r < 0 || this.length < r || this.length < n)
        throw new RangeError("Out of range index");
      if (n <= r)
        return this;
      r = r >>> 0, n = n === undefined ? this.length : n >>> 0, t || (t = 0);
      let o2;
      if (typeof t == "number")
        for (o2 = r;o2 < n; ++o2)
          this[o2] = t;
      else {
        let a3 = f2.isBuffer(t) ? t : f2.from(t, i), s2 = a3.length;
        if (s2 === 0)
          throw new TypeError('The value "' + t + '" is invalid for argument "value"');
        for (o2 = 0;o2 < n - r; ++o2)
          this[o2 + r] = a3[o2 % s2];
      }
      return this;
    };
    var ge = {};
    function Ut2(e, t, r) {
      ge[e] = class extends r {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: t.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e}]`, this.stack, delete this.name;
        }
        get code() {
          return e;
        }
        set code(i) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: i, writable: true });
        }
        toString() {
          return `${this.name} [${e}]: ${this.message}`;
        }
      };
    }
    Ut2("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
      return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError);
    Ut2("ERR_INVALID_ARG_TYPE", function(e, t) {
      return `The "${e}" argument must be of type number. Received type ${typeof t}`;
    }, TypeError);
    Ut2("ERR_OUT_OF_RANGE", function(e, t, r) {
      let n = `The value of "${e}" is out of range.`, i = r;
      return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? i = Xr(String(r)) : typeof r == "bigint" && (i = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = Xr(i)), i += "n"), n += ` It must be ${t}. Received ${i}`, n;
    }, RangeError);
    function Xr(e) {
      let t = "", r = e.length, n = e[0] === "-" ? 1 : 0;
      for (;r >= n + 4; r -= 3)
        t = `_${e.slice(r - 3, r)}${t}`;
      return `${e.slice(0, r)}${t}`;
    }
    function No(e, t, r) {
      me(t, "offset"), (e[t] === undefined || e[t + r] === undefined) && Ce2(t, e.length - (r + 1));
    }
    function sn(e, t, r, n, i, o2) {
      if (e > r || e < t) {
        let a3 = typeof t == "bigint" ? "n" : "", s2;
        throw o2 > 3 ? t === 0 || t === BigInt(0) ? s2 = `>= 0${a3} and < 2${a3} ** ${(o2 + 1) * 8}${a3}` : s2 = `>= -(2${a3} ** ${(o2 + 1) * 8 - 1}${a3}) and < 2 ** ${(o2 + 1) * 8 - 1}${a3}` : s2 = `>= ${t}${a3} and <= ${r}${a3}`, new ge.ERR_OUT_OF_RANGE("value", s2, e);
      }
      No(n, i, o2);
    }
    function me(e, t) {
      if (typeof e != "number")
        throw new ge.ERR_INVALID_ARG_TYPE(t, "number", e);
    }
    function Ce2(e, t, r) {
      throw Math.floor(e) !== e ? (me(e, r), new ge.ERR_OUT_OF_RANGE(r || "offset", "an integer", e)) : t < 0 ? new ge.ERR_BUFFER_OUT_OF_BOUNDS : new ge.ERR_OUT_OF_RANGE(r || "offset", `>= ${r ? 1 : 0} and <= ${t}`, e);
    }
    var Uo = /[^+/0-9A-Za-z-_]/g;
    function Po(e) {
      if (e = e.split("=")[0], e = e.trim().replace(Uo, ""), e.length < 2)
        return "";
      for (;e.length % 4 !== 0; )
        e = e + "=";
      return e;
    }
    function Ot(e, t) {
      t = t || 1 / 0;
      let r, n = e.length, i = null, o2 = [];
      for (let a3 = 0;a3 < n; ++a3) {
        if (r = e.charCodeAt(a3), r > 55295 && r < 57344) {
          if (!i) {
            if (r > 56319) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            } else if (a3 + 1 === n) {
              (t -= 3) > -1 && o2.push(239, 191, 189);
              continue;
            }
            i = r;
            continue;
          }
          if (r < 56320) {
            (t -= 3) > -1 && o2.push(239, 191, 189), i = r;
            continue;
          }
          r = (i - 55296 << 10 | r - 56320) + 65536;
        } else
          i && (t -= 3) > -1 && o2.push(239, 191, 189);
        if (i = null, r < 128) {
          if ((t -= 1) < 0)
            break;
          o2.push(r);
        } else if (r < 2048) {
          if ((t -= 2) < 0)
            break;
          o2.push(r >> 6 | 192, r & 63 | 128);
        } else if (r < 65536) {
          if ((t -= 3) < 0)
            break;
          o2.push(r >> 12 | 224, r >> 6 & 63 | 128, r & 63 | 128);
        } else if (r < 1114112) {
          if ((t -= 4) < 0)
            break;
          o2.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, r & 63 | 128);
        } else
          throw new Error("Invalid code point");
      }
      return o2;
    }
    function qo(e) {
      let t = [];
      for (let r = 0;r < e.length; ++r)
        t.push(e.charCodeAt(r) & 255);
      return t;
    }
    function Do(e, t) {
      let r, n, i, o2 = [];
      for (let a3 = 0;a3 < e.length && !((t -= 2) < 0); ++a3)
        r = e.charCodeAt(a3), n = r >> 8, i = r % 256, o2.push(i), o2.push(n);
      return o2;
    }
    function fn(e) {
      return Ct.toByteArray(Po(e));
    }
    function Xe(e, t, r, n) {
      let i;
      for (i = 0;i < n && !(i + r >= t.length || i >= e.length); ++i)
        t[i + r] = e[i];
      return i;
    }
    function H3(e, t) {
      return e instanceof t || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === t.name;
    }
    function Pt(e) {
      return e !== e;
    }
    var ko = function() {
      let e = "0123456789abcdef", t = new Array(256);
      for (let r = 0;r < 16; ++r) {
        let n = r * 16;
        for (let i = 0;i < 16; ++i)
          t[n + i] = e[r] + e[i];
      }
      return t;
    }();
    function ee(e) {
      return typeof BigInt > "u" ? jo : e;
    }
    function jo() {
      throw new Error("BigInt not supported");
    }
  });
  qt = b5(() => {
  });
  cn = b5((Wf, hn) => {
    function un2(e, t) {
      var r = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e);
        t && (n = n.filter(function(i) {
          return Object.getOwnPropertyDescriptor(e, i).enumerable;
        })), r.push.apply(r, n);
      }
      return r;
    }
    function Wo(e) {
      for (var t = 1;t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {};
        t % 2 ? un2(Object(r), true).forEach(function(n) {
          Ho(e, n, r[n]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : un2(Object(r)).forEach(function(n) {
          Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
        });
      }
      return e;
    }
    function Ho(e, t, r) {
      return t in e ? Object.defineProperty(e, t, { value: r, enumerable: true, configurable: true, writable: true }) : e[t] = r, e;
    }
    function $o(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function ln(e, t) {
      for (var r = 0;r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, n.key, n);
      }
    }
    function Go(e, t, r) {
      return t && ln(e.prototype, t), r && ln(e, r), e;
    }
    var Ko = _e2(), ze = Ko.Buffer, Vo = qt(), Dt2 = Vo.inspect, Yo = Dt2 && Dt2.custom || "inspect";
    function Xo(e, t, r) {
      ze.prototype.copy.call(e, t, r);
    }
    hn.exports = function() {
      function e() {
        $o(this, e), this.head = null, this.tail = null, this.length = 0;
      }
      return Go(e, [{ key: "push", value: function(r) {
        var n = { data: r, next: null };
        this.length > 0 ? this.tail.next = n : this.head = n, this.tail = n, ++this.length;
      } }, { key: "unshift", value: function(r) {
        var n = { data: r, next: this.head };
        this.length === 0 && (this.tail = n), this.head = n, ++this.length;
      } }, { key: "shift", value: function() {
        if (this.length !== 0) {
          var r = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r;
        }
      } }, { key: "clear", value: function() {
        this.head = this.tail = null, this.length = 0;
      } }, { key: "join", value: function(r) {
        if (this.length === 0)
          return "";
        for (var n = this.head, i = "" + n.data;n = n.next; )
          i += r + n.data;
        return i;
      } }, { key: "concat", value: function(r) {
        if (this.length === 0)
          return ze.alloc(0);
        for (var n = ze.allocUnsafe(r >>> 0), i = this.head, o2 = 0;i; )
          Xo(i.data, n, o2), o2 += i.data.length, i = i.next;
        return n;
      } }, { key: "consume", value: function(r, n) {
        var i;
        return r < this.head.data.length ? (i = this.head.data.slice(0, r), this.head.data = this.head.data.slice(r)) : r === this.head.data.length ? i = this.shift() : i = n ? this._getString(r) : this._getBuffer(r), i;
      } }, { key: "first", value: function() {
        return this.head.data;
      } }, { key: "_getString", value: function(r) {
        var n = this.head, i = 1, o2 = n.data;
        for (r -= o2.length;n = n.next; ) {
          var a3 = n.data, s2 = r > a3.length ? a3.length : r;
          if (s2 === a3.length ? o2 += a3 : o2 += a3.slice(0, r), r -= s2, r === 0) {
            s2 === a3.length ? (++i, n.next ? this.head = n.next : this.head = this.tail = null) : (this.head = n, n.data = a3.slice(s2));
            break;
          }
          ++i;
        }
        return this.length -= i, o2;
      } }, { key: "_getBuffer", value: function(r) {
        var n = ze.allocUnsafe(r), i = this.head, o2 = 1;
        for (i.data.copy(n), r -= i.data.length;i = i.next; ) {
          var a3 = i.data, s2 = r > a3.length ? a3.length : r;
          if (a3.copy(n, n.length - r, 0, s2), r -= s2, r === 0) {
            s2 === a3.length ? (++o2, i.next ? this.head = i.next : this.head = this.tail = null) : (this.head = i, i.data = a3.slice(s2));
            break;
          }
          ++o2;
        }
        return this.length -= o2, n;
      } }, { key: Yo, value: function(r, n) {
        return Dt2(this, Wo({}, n, { depth: 0, customInspect: false }));
      } }]), e;
    }();
  });
  jt = b5((Hf, pn2) => {
    function zo(e, t) {
      var r = this, n = this._readableState && this._readableState.destroyed, i = this._writableState && this._writableState.destroyed;
      return n || i ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(kt2, this, e)) : process.nextTick(kt2, this, e)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e || null, function(o2) {
        !t && o2 ? r._writableState ? r._writableState.errorEmitted ? process.nextTick(Ze, r) : (r._writableState.errorEmitted = true, process.nextTick(dn, r, o2)) : process.nextTick(dn, r, o2) : t ? (process.nextTick(Ze, r), t(o2)) : process.nextTick(Ze, r);
      }), this);
    }
    function dn(e, t) {
      kt2(e, t), Ze(e);
    }
    function Ze(e) {
      e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close");
    }
    function Zo() {
      this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
    }
    function kt2(e, t) {
      e.emit("error", t);
    }
    function Jo(e, t) {
      var { _readableState: r, _writableState: n } = e;
      r && r.autoDestroy || n && n.autoDestroy ? e.destroy(t) : e.emit("error", t);
    }
    pn2.exports = { destroy: zo, undestroy: Zo, errorOrDestroy: Jo };
  });
  fe2 = b5(($f, wn) => {
    function Qo2(e, t) {
      e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t;
    }
    var gn = {};
    function P4(e, t, r) {
      r || (r = Error);
      function n(o2, a3, s2) {
        return typeof t == "string" ? t : t(o2, a3, s2);
      }
      var i = function(o2) {
        Qo2(a3, o2);
        function a3(s2, u3, l3) {
          return o2.call(this, n(s2, u3, l3)) || this;
        }
        return a3;
      }(r);
      i.prototype.name = r.name, i.prototype.code = e, gn[e] = i;
    }
    function yn2(e, t) {
      if (Array.isArray(e)) {
        var r = e.length;
        return e = e.map(function(n) {
          return String(n);
        }), r > 2 ? "one of ".concat(t, " ").concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1] : r === 2 ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0]);
      } else
        return "of ".concat(t, " ").concat(String(e));
    }
    function ea(e, t, r) {
      return e.substr(!r || r < 0 ? 0 : +r, t.length) === t;
    }
    function ta(e, t, r) {
      return (r === undefined || r > e.length) && (r = e.length), e.substring(r - t.length, r) === t;
    }
    function ra(e, t, r) {
      return typeof r != "number" && (r = 0), r + t.length > e.length ? false : e.indexOf(t, r) !== -1;
    }
    P4("ERR_INVALID_OPT_VALUE", function(e, t) {
      return 'The value "' + t + '" is invalid for option "' + e + '"';
    }, TypeError);
    P4("ERR_INVALID_ARG_TYPE", function(e, t, r) {
      var n;
      typeof t == "string" && ea(t, "not ") ? (n = "must not be", t = t.replace(/^not /, "")) : n = "must be";
      var i;
      if (ta(e, " argument"))
        i = "The ".concat(e, " ").concat(n, " ").concat(yn2(t, "type"));
      else {
        var o2 = ra(e, ".") ? "property" : "argument";
        i = 'The "'.concat(e, '" ').concat(o2, " ").concat(n, " ").concat(yn2(t, "type"));
      }
      return i += ". Received type ".concat(typeof r), i;
    }, TypeError);
    P4("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    P4("ERR_METHOD_NOT_IMPLEMENTED", function(e) {
      return "The " + e + " method is not implemented";
    });
    P4("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    P4("ERR_STREAM_DESTROYED", function(e) {
      return "Cannot call " + e + " after a stream was destroyed";
    });
    P4("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    P4("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    P4("ERR_STREAM_WRITE_AFTER_END", "write after end");
    P4("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    P4("ERR_UNKNOWN_ENCODING", function(e) {
      return "Unknown encoding: " + e;
    }, TypeError);
    P4("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    wn.exports.codes = gn;
  });
  Wt = b5((Gf, mn) => {
    var na = fe2().codes.ERR_INVALID_OPT_VALUE;
    function ia(e, t, r) {
      return e.highWaterMark != null ? e.highWaterMark : t ? e[r] : null;
    }
    function oa(e, t, r, n) {
      var i = ia(t, n, r);
      if (i != null) {
        if (!(isFinite(i) && Math.floor(i) === i) || i < 0) {
          var o2 = n ? r : "highWaterMark";
          throw new na(o2, i);
        }
        return Math.floor(i);
      }
      return e.objectMode ? 16 : 16 * 1024;
    }
    mn.exports = { getHighWaterMark: oa };
  });
  _n = b5((Kf, bn) => {
    bn.exports = aa;
    function aa(e, t) {
      if (Ht2("noDeprecation"))
        return e;
      var r = false;
      function n() {
        if (!r) {
          if (Ht2("throwDeprecation"))
            throw new Error(t);
          Ht2("traceDeprecation") ? console.trace(t) : console.warn(t), r = true;
        }
        return e.apply(this, arguments);
      }
      return n;
    }
    function Ht2(e) {
      try {
        if (!global.localStorage)
          return false;
      } catch {
        return false;
      }
      var t = global.localStorage[e];
      return t == null ? false : String(t).toLowerCase() === "true";
    }
  });
  Kt2 = b5((Vf, Tn2) => {
    Tn2.exports = A3;
    function En(e) {
      var t = this;
      this.next = null, this.entry = null, this.finish = function() {
        Oa(t, e);
      };
    }
    var ve;
    A3.WritableState = Me;
    var sa = { deprecate: _n() }, xn = At3(), Qe2 = _e2().Buffer, fa = global.Uint8Array || function() {
    };
    function ua(e) {
      return Qe2.from(e);
    }
    function la(e) {
      return Qe2.isBuffer(e) || e instanceof fa;
    }
    var Gt = jt(), ha = Wt(), ca = ha.getHighWaterMark, te = fe2().codes, da2 = te.ERR_INVALID_ARG_TYPE, pa = te.ERR_METHOD_NOT_IMPLEMENTED, ya = te.ERR_MULTIPLE_CALLBACK, ga = te.ERR_STREAM_CANNOT_PIPE, wa2 = te.ERR_STREAM_DESTROYED, ma = te.ERR_STREAM_NULL_VALUES, ba = te.ERR_STREAM_WRITE_AFTER_END, _a = te.ERR_UNKNOWN_ENCODING, Ee = Gt.errorOrDestroy;
    Q3()(A3, xn);
    function va2() {
    }
    function Me(e, t, r) {
      ve = ve || ue2(), e = e || {}, typeof r != "boolean" && (r = t instanceof ve), this.objectMode = !!e.objectMode, r && (this.objectMode = this.objectMode || !!e.writableObjectMode), this.highWaterMark = ca(this, e, "writableHighWaterMark", r), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      var n = e.decodeStrings === false;
      this.decodeStrings = !n, this.defaultEncoding = e.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(i) {
        Ba(t, i);
      }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = e.emitClose !== false, this.autoDestroy = !!e.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new En(this);
    }
    Me.prototype.getBuffer = function() {
      for (var t = this.bufferedRequest, r = [];t; )
        r.push(t), t = t.next;
      return r;
    };
    (function() {
      try {
        Object.defineProperty(Me.prototype, "buffer", { get: sa.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
      } catch {
      }
    })();
    var Je;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (Je = Function.prototype[Symbol.hasInstance], Object.defineProperty(A3, Symbol.hasInstance, { value: function(t) {
      return Je.call(this, t) ? true : this !== A3 ? false : t && t._writableState instanceof Me;
    } })) : Je = function(t) {
      return t instanceof this;
    };
    function A3(e) {
      ve = ve || ue2();
      var t = this instanceof ve;
      if (!t && !Je.call(A3, this))
        return new A3(e);
      this._writableState = new Me(e, this, t), this.writable = true, e && (typeof e.write == "function" && (this._write = e.write), typeof e.writev == "function" && (this._writev = e.writev), typeof e.destroy == "function" && (this._destroy = e.destroy), typeof e.final == "function" && (this._final = e.final)), xn.call(this);
    }
    A3.prototype.pipe = function() {
      Ee(this, new ga);
    };
    function Ea(e, t) {
      var r = new ba;
      Ee(e, r), process.nextTick(t, r);
    }
    function xa(e, t, r, n) {
      var i;
      return r === null ? i = new ma : typeof r != "string" && !t.objectMode && (i = new da2("chunk", ["string", "Buffer"], r)), i ? (Ee(e, i), process.nextTick(n, i), false) : true;
    }
    A3.prototype.write = function(e, t, r) {
      var n = this._writableState, i = false, o2 = !n.objectMode && la(e);
      return o2 && !Qe2.isBuffer(e) && (e = ua(e)), typeof t == "function" && (r = t, t = null), o2 ? t = "buffer" : t || (t = n.defaultEncoding), typeof r != "function" && (r = va2), n.ending ? Ea(this, r) : (o2 || xa(this, n, e, r)) && (n.pendingcb++, i = Sa(this, n, o2, e, t, r)), i;
    };
    A3.prototype.cork = function() {
      this._writableState.corked++;
    };
    A3.prototype.uncork = function() {
      var e = this._writableState;
      e.corked && (e.corked--, !e.writing && !e.corked && !e.bufferProcessing && e.bufferedRequest && Rn(this, e));
    };
    A3.prototype.setDefaultEncoding = function(t) {
      if (typeof t == "string" && (t = t.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1))
        throw new _a(t);
      return this._writableState.defaultEncoding = t, this;
    };
    Object.defineProperty(A3.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    function Ra(e, t, r) {
      return !e.objectMode && e.decodeStrings !== false && typeof t == "string" && (t = Qe2.from(t, r)), t;
    }
    Object.defineProperty(A3.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    function Sa(e, t, r, n, i, o2) {
      if (!r) {
        var a3 = Ra(t, n, i);
        n !== a3 && (r = true, i = "buffer", n = a3);
      }
      var s2 = t.objectMode ? 1 : n.length;
      t.length += s2;
      var u3 = t.length < t.highWaterMark;
      if (u3 || (t.needDrain = true), t.writing || t.corked) {
        var l3 = t.lastBufferedRequest;
        t.lastBufferedRequest = { chunk: n, encoding: i, isBuf: r, callback: o2, next: null }, l3 ? l3.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1;
      } else
        $t(e, t, false, s2, n, i, o2);
      return u3;
    }
    function $t(e, t, r, n, i, o2, a3) {
      t.writelen = n, t.writecb = a3, t.writing = true, t.sync = true, t.destroyed ? t.onwrite(new wa2("write")) : r ? e._writev(i, t.onwrite) : e._write(i, o2, t.onwrite), t.sync = false;
    }
    function Ta(e, t, r, n, i) {
      --t.pendingcb, r ? (process.nextTick(i, n), process.nextTick(Le, e, t), e._writableState.errorEmitted = true, Ee(e, n)) : (i(n), e._writableState.errorEmitted = true, Ee(e, n), Le(e, t));
    }
    function Aa(e) {
      e.writing = false, e.writecb = null, e.length -= e.writelen, e.writelen = 0;
    }
    function Ba(e, t) {
      var r = e._writableState, n = r.sync, i = r.writecb;
      if (typeof i != "function")
        throw new ya;
      if (Aa(r), t)
        Ta(e, r, n, t, i);
      else {
        var o2 = Sn2(r) || e.destroyed;
        !o2 && !r.corked && !r.bufferProcessing && r.bufferedRequest && Rn(e, r), n ? process.nextTick(vn, e, r, o2, i) : vn(e, r, o2, i);
      }
    }
    function vn(e, t, r, n) {
      r || Ia2(e, t), t.pendingcb--, n(), Le(e, t);
    }
    function Ia2(e, t) {
      t.length === 0 && t.needDrain && (t.needDrain = false, e.emit("drain"));
    }
    function Rn(e, t) {
      t.bufferProcessing = true;
      var r = t.bufferedRequest;
      if (e._writev && r && r.next) {
        var n = t.bufferedRequestCount, i = new Array(n), o2 = t.corkedRequestsFree;
        o2.entry = r;
        for (var a3 = 0, s2 = true;r; )
          i[a3] = r, r.isBuf || (s2 = false), r = r.next, a3 += 1;
        i.allBuffers = s2, $t(e, t, true, t.length, i, "", o2.finish), t.pendingcb++, t.lastBufferedRequest = null, o2.next ? (t.corkedRequestsFree = o2.next, o2.next = null) : t.corkedRequestsFree = new En(t), t.bufferedRequestCount = 0;
      } else {
        for (;r; ) {
          var { chunk: u3, encoding: l3, callback: h4 } = r, c2 = t.objectMode ? 1 : u3.length;
          if ($t(e, t, false, c2, u3, l3, h4), r = r.next, t.bufferedRequestCount--, t.writing)
            break;
        }
        r === null && (t.lastBufferedRequest = null);
      }
      t.bufferedRequest = r, t.bufferProcessing = false;
    }
    A3.prototype._write = function(e, t, r) {
      r(new pa("_write()"));
    };
    A3.prototype._writev = null;
    A3.prototype.end = function(e, t, r) {
      var n = this._writableState;
      return typeof e == "function" ? (r = e, e = null, t = null) : typeof t == "function" && (r = t, t = null), e != null && this.write(e, t), n.corked && (n.corked = 1, this.uncork()), n.ending || Ma(this, n, r), this;
    };
    Object.defineProperty(A3.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function Sn2(e) {
      return e.ending && e.length === 0 && e.bufferedRequest === null && !e.finished && !e.writing;
    }
    function Ca(e, t) {
      e._final(function(r) {
        t.pendingcb--, r && Ee(e, r), t.prefinished = true, e.emit("prefinish"), Le(e, t);
      });
    }
    function La(e, t) {
      !t.prefinished && !t.finalCalled && (typeof e._final == "function" && !t.destroyed ? (t.pendingcb++, t.finalCalled = true, process.nextTick(Ca, e, t)) : (t.prefinished = true, e.emit("prefinish")));
    }
    function Le(e, t) {
      var r = Sn2(t);
      if (r && (La(e, t), t.pendingcb === 0 && (t.finished = true, e.emit("finish"), t.autoDestroy))) {
        var n = e._readableState;
        (!n || n.autoDestroy && n.endEmitted) && e.destroy();
      }
      return r;
    }
    function Ma(e, t, r) {
      t.ending = true, Le(e, t), r && (t.finished ? process.nextTick(r) : e.once("finish", r)), t.ended = true, e.writable = false;
    }
    function Oa(e, t, r) {
      var n = e.entry;
      for (e.entry = null;n; ) {
        var i = n.callback;
        t.pendingcb--, i(r), n = n.next;
      }
      t.corkedRequestsFree.next = e;
    }
    Object.defineProperty(A3.prototype, "destroyed", { enumerable: false, get: function() {
      return this._writableState === undefined ? false : this._writableState.destroyed;
    }, set: function(t) {
      !this._writableState || (this._writableState.destroyed = t);
    } });
    A3.prototype.destroy = Gt.destroy;
    A3.prototype._undestroy = Gt.undestroy;
    A3.prototype._destroy = function(e, t) {
      t(e);
    };
  });
  ue2 = b5((Yf, Bn3) => {
    var Fa = Object.keys || function(e) {
      var t = [];
      for (var r in e)
        t.push(r);
      return t;
    };
    Bn3.exports = $3;
    var An = Xt(), Yt = Kt2();
    Q3()($3, An);
    for (Vt2 = Fa(Yt.prototype), et2 = 0;et2 < Vt2.length; et2++)
      tt3 = Vt2[et2], $3.prototype[tt3] || ($3.prototype[tt3] = Yt.prototype[tt3]);
    var Vt2, tt3, et2;
    function $3(e) {
      if (!(this instanceof $3))
        return new $3(e);
      An.call(this, e), Yt.call(this, e), this.allowHalfOpen = true, e && (e.readable === false && (this.readable = false), e.writable === false && (this.writable = false), e.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", Na2)));
    }
    Object.defineProperty($3.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    Object.defineProperty($3.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    Object.defineProperty($3.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function Na2() {
      this._writableState.ended || process.nextTick(Ua, this);
    }
    function Ua(e) {
      e.end();
    }
    Object.defineProperty($3.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set: function(t) {
      this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = t, this._writableState.destroyed = t);
    } });
  });
  Ln2 = b5((zt, Cn) => {
    var rt3 = _e2(), G2 = rt3.Buffer;
    function In(e, t) {
      for (var r in e)
        t[r] = e[r];
    }
    G2.from && G2.alloc && G2.allocUnsafe && G2.allocUnsafeSlow ? Cn.exports = rt3 : (In(rt3, zt), zt.Buffer = le);
    function le(e, t, r) {
      return G2(e, t, r);
    }
    le.prototype = Object.create(G2.prototype);
    In(G2, le);
    le.from = function(e, t, r) {
      if (typeof e == "number")
        throw new TypeError("Argument must not be a number");
      return G2(e, t, r);
    };
    le.alloc = function(e, t, r) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      var n = G2(e);
      return t !== undefined ? typeof r == "string" ? n.fill(t, r) : n.fill(t) : n.fill(0), n;
    };
    le.allocUnsafe = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return G2(e);
    };
    le.allocUnsafeSlow = function(e) {
      if (typeof e != "number")
        throw new TypeError("Argument must be a number");
      return rt3.SlowBuffer(e);
    };
  });
  Fn = b5((On2) => {
    var Jt = Ln2().Buffer, Mn = Jt.isEncoding || function(e) {
      switch (e = "" + e, e && e.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return true;
        default:
          return false;
      }
    };
    function Pa(e) {
      if (!e)
        return "utf8";
      for (var t;; )
        switch (e) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return e;
          default:
            if (t)
              return;
            e = ("" + e).toLowerCase(), t = true;
        }
    }
    function qa(e) {
      var t = Pa(e);
      if (typeof t != "string" && (Jt.isEncoding === Mn || !Mn(e)))
        throw new Error("Unknown encoding: " + e);
      return t || e;
    }
    On2.StringDecoder = Oe;
    function Oe(e) {
      this.encoding = qa(e);
      var t;
      switch (this.encoding) {
        case "utf16le":
          this.text = $a2, this.end = Ga2, t = 4;
          break;
        case "utf8":
          this.fillLast = ja, t = 4;
          break;
        case "base64":
          this.text = Ka, this.end = Va, t = 3;
          break;
        default:
          this.write = Ya2, this.end = Xa;
          return;
      }
      this.lastNeed = 0, this.lastTotal = 0, this.lastChar = Jt.allocUnsafe(t);
    }
    Oe.prototype.write = function(e) {
      if (e.length === 0)
        return "";
      var t, r;
      if (this.lastNeed) {
        if (t = this.fillLast(e), t === undefined)
          return "";
        r = this.lastNeed, this.lastNeed = 0;
      } else
        r = 0;
      return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || "";
    };
    Oe.prototype.end = Ha;
    Oe.prototype.text = Wa2;
    Oe.prototype.fillLast = function(e) {
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;
    };
    function Zt(e) {
      return e <= 127 ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : e >> 6 === 2 ? -1 : -2;
    }
    function Da(e, t, r) {
      var n = t.length - 1;
      if (n < r)
        return 0;
      var i = Zt(t[n]);
      return i >= 0 ? (i > 0 && (e.lastNeed = i - 1), i) : --n < r || i === -2 ? 0 : (i = Zt(t[n]), i >= 0 ? (i > 0 && (e.lastNeed = i - 2), i) : --n < r || i === -2 ? 0 : (i = Zt(t[n]), i >= 0 ? (i > 0 && (i === 2 ? i = 0 : e.lastNeed = i - 3), i) : 0));
    }
    function ka2(e, t, r) {
      if ((t[0] & 192) !== 128)
        return e.lastNeed = 0, "�";
      if (e.lastNeed > 1 && t.length > 1) {
        if ((t[1] & 192) !== 128)
          return e.lastNeed = 1, "�";
        if (e.lastNeed > 2 && t.length > 2 && (t[2] & 192) !== 128)
          return e.lastNeed = 2, "�";
      }
    }
    function ja(e) {
      var t = this.lastTotal - this.lastNeed, r = ka2(this, e, t);
      if (r !== undefined)
        return r;
      if (this.lastNeed <= e.length)
        return e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      e.copy(this.lastChar, t, 0, e.length), this.lastNeed -= e.length;
    }
    function Wa2(e, t) {
      var r = Da(this, e, t);
      if (!this.lastNeed)
        return e.toString("utf8", t);
      this.lastTotal = r;
      var n = e.length - (r - this.lastNeed);
      return e.copy(this.lastChar, 0, n), e.toString("utf8", t, n);
    }
    function Ha(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + "�" : t;
    }
    function $a2(e, t) {
      if ((e.length - t) % 2 === 0) {
        var r = e.toString("utf16le", t);
        if (r) {
          var n = r.charCodeAt(r.length - 1);
          if (n >= 55296 && n <= 56319)
            return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], r.slice(0, -1);
        }
        return r;
      }
      return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString("utf16le", t, e.length - 1);
    }
    function Ga2(e) {
      var t = e && e.length ? this.write(e) : "";
      if (this.lastNeed) {
        var r = this.lastTotal - this.lastNeed;
        return t + this.lastChar.toString("utf16le", 0, r);
      }
      return t;
    }
    function Ka(e, t) {
      var r = (e.length - t) % 3;
      return r === 0 ? e.toString("base64", t) : (this.lastNeed = 3 - r, this.lastTotal = 3, r === 1 ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString("base64", t, e.length - r));
    }
    function Va(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t;
    }
    function Ya2(e) {
      return e.toString(this.encoding);
    }
    function Xa(e) {
      return e && e.length ? this.write(e) : "";
    }
  });
  Qt = {};
  mt3(Qt, { StringDecoder: () => nt3.StringDecoder, default: () => nt3.StringDecoder });
  er = Cr(() => {
    nt3 = bt3(Fn());
  });
  it2 = b5((zf2, Pn) => {
    var Nn2 = fe2().codes.ERR_STREAM_PREMATURE_CLOSE;
    function za(e) {
      var t = false;
      return function() {
        if (!t) {
          t = true;
          for (var r = arguments.length, n = new Array(r), i = 0;i < r; i++)
            n[i] = arguments[i];
          e.apply(this, n);
        }
      };
    }
    function Za() {
    }
    function Ja(e) {
      return e.setHeader && typeof e.abort == "function";
    }
    function Un(e, t, r) {
      if (typeof t == "function")
        return Un(e, null, t);
      t || (t = {}), r = za(r || Za);
      var n = t.readable || t.readable !== false && e.readable, i = t.writable || t.writable !== false && e.writable, o2 = function() {
        e.writable || s2();
      }, a3 = e._writableState && e._writableState.finished, s2 = function() {
        i = false, a3 = true, n || r.call(e);
      }, u3 = e._readableState && e._readableState.endEmitted, l3 = function() {
        n = false, u3 = true, i || r.call(e);
      }, h4 = function(g5) {
        r.call(e, g5);
      }, c2 = function() {
        var g5;
        if (n && !u3)
          return (!e._readableState || !e._readableState.ended) && (g5 = new Nn2), r.call(e, g5);
        if (i && !a3)
          return (!e._writableState || !e._writableState.ended) && (g5 = new Nn2), r.call(e, g5);
      }, d3 = function() {
        e.req.on("finish", s2);
      };
      return Ja(e) ? (e.on("complete", s2), e.on("abort", c2), e.req ? d3() : e.on("request", d3)) : i && !e._writableState && (e.on("end", o2), e.on("close", o2)), e.on("end", l3), e.on("finish", s2), t.error !== false && e.on("error", h4), e.on("close", c2), function() {
        e.removeListener("complete", s2), e.removeListener("abort", c2), e.removeListener("request", d3), e.req && e.req.removeListener("finish", s2), e.removeListener("end", o2), e.removeListener("close", o2), e.removeListener("finish", s2), e.removeListener("end", l3), e.removeListener("error", h4), e.removeListener("close", c2);
      };
    }
    Pn.exports = Un;
  });
  Dn2 = b5((Zf, qn2) => {
    var ot3;
    function re2(e, t, r) {
      return t in e ? Object.defineProperty(e, t, { value: r, enumerable: true, configurable: true, writable: true }) : e[t] = r, e;
    }
    var Qa = it2(), ne2 = Symbol("lastResolve"), he = Symbol("lastReject"), Fe = Symbol("error"), at3 = Symbol("ended"), ce2 = Symbol("lastPromise"), tr = Symbol("handlePromise"), de = Symbol("stream");
    function ie(e, t) {
      return { value: e, done: t };
    }
    function es(e) {
      var t = e[ne2];
      if (t !== null) {
        var r = e[de].read();
        r !== null && (e[ce2] = null, e[ne2] = null, e[he] = null, t(ie(r, false)));
      }
    }
    function ts(e) {
      process.nextTick(es, e);
    }
    function rs(e, t) {
      return function(r, n) {
        e.then(function() {
          if (t[at3]) {
            r(ie(undefined, true));
            return;
          }
          t[tr](r, n);
        }, n);
      };
    }
    var ns = Object.getPrototypeOf(function() {
    }), is = Object.setPrototypeOf((ot3 = { get stream() {
      return this[de];
    }, next: function() {
      var t = this, r = this[Fe];
      if (r !== null)
        return Promise.reject(r);
      if (this[at3])
        return Promise.resolve(ie(undefined, true));
      if (this[de].destroyed)
        return new Promise(function(a3, s2) {
          process.nextTick(function() {
            t[Fe] ? s2(t[Fe]) : a3(ie(undefined, true));
          });
        });
      var n = this[ce2], i;
      if (n)
        i = new Promise(rs(n, this));
      else {
        var o2 = this[de].read();
        if (o2 !== null)
          return Promise.resolve(ie(o2, false));
        i = new Promise(this[tr]);
      }
      return this[ce2] = i, i;
    } }, re2(ot3, Symbol.asyncIterator, function() {
      return this;
    }), re2(ot3, "return", function() {
      var t = this;
      return new Promise(function(r, n) {
        t[de].destroy(null, function(i) {
          if (i) {
            n(i);
            return;
          }
          r(ie(undefined, true));
        });
      });
    }), ot3), ns), os = function(t) {
      var r, n = Object.create(is, (r = {}, re2(r, de, { value: t, writable: true }), re2(r, ne2, { value: null, writable: true }), re2(r, he, { value: null, writable: true }), re2(r, Fe, { value: null, writable: true }), re2(r, at3, { value: t._readableState.endEmitted, writable: true }), re2(r, tr, { value: function(o2, a3) {
        var s2 = n[de].read();
        s2 ? (n[ce2] = null, n[ne2] = null, n[he] = null, o2(ie(s2, false))) : (n[ne2] = o2, n[he] = a3);
      }, writable: true }), r));
      return n[ce2] = null, Qa(t, function(i) {
        if (i && i.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var o2 = n[he];
          o2 !== null && (n[ce2] = null, n[ne2] = null, n[he] = null, o2(i)), n[Fe] = i;
          return;
        }
        var a3 = n[ne2];
        a3 !== null && (n[ce2] = null, n[ne2] = null, n[he] = null, a3(ie(undefined, true))), n[at3] = true;
      }), t.on("readable", ts.bind(null, n)), n;
    };
    qn2.exports = os;
  });
  jn = b5((Jf, kn) => {
    kn.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  });
  Xt = b5((eu, Zn) => {
    Zn.exports = _4;
    var xe2;
    _4.ReadableState = Gn;
    var Qf = Tt3().EventEmitter, $n = function(t, r) {
      return t.listeners(r).length;
    }, Ue = At3(), st3 = _e2().Buffer, as = global.Uint8Array || function() {
    };
    function ss(e) {
      return st3.from(e);
    }
    function fs(e) {
      return st3.isBuffer(e) || e instanceof as;
    }
    var rr2 = qt(), w3;
    rr2 && rr2.debuglog ? w3 = rr2.debuglog("stream") : w3 = function() {
    };
    var us = cn(), ur2 = jt(), ls = Wt(), hs = ls.getHighWaterMark, ft2 = fe2().codes, cs = ft2.ERR_INVALID_ARG_TYPE, ds = ft2.ERR_STREAM_PUSH_AFTER_EOF, ps = ft2.ERR_METHOD_NOT_IMPLEMENTED, ys = ft2.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, Re, nr, ir2;
    Q3()(_4, Ue);
    var Ne = ur2.errorOrDestroy, or = ["error", "close", "destroy", "pause", "resume"];
    function gs(e, t, r) {
      if (typeof e.prependListener == "function")
        return e.prependListener(t, r);
      !e._events || !e._events[t] ? e.on(t, r) : Array.isArray(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [r, e._events[t]];
    }
    function Gn(e, t, r) {
      xe2 = xe2 || ue2(), e = e || {}, typeof r != "boolean" && (r = t instanceof xe2), this.objectMode = !!e.objectMode, r && (this.objectMode = this.objectMode || !!e.readableObjectMode), this.highWaterMark = hs(this, e, "readableHighWaterMark", r), this.buffer = new us, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = e.emitClose !== false, this.autoDestroy = !!e.autoDestroy, this.destroyed = false, this.defaultEncoding = e.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e.encoding && (Re || (Re = (er(), _t3(Qt)).StringDecoder), this.decoder = new Re(e.encoding), this.encoding = e.encoding);
    }
    function _4(e) {
      if (xe2 = xe2 || ue2(), !(this instanceof _4))
        return new _4(e);
      var t = this instanceof xe2;
      this._readableState = new Gn(e, this, t), this.readable = true, e && (typeof e.read == "function" && (this._read = e.read), typeof e.destroy == "function" && (this._destroy = e.destroy)), Ue.call(this);
    }
    Object.defineProperty(_4.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined ? false : this._readableState.destroyed;
    }, set: function(t) {
      !this._readableState || (this._readableState.destroyed = t);
    } });
    _4.prototype.destroy = ur2.destroy;
    _4.prototype._undestroy = ur2.undestroy;
    _4.prototype._destroy = function(e, t) {
      t(e);
    };
    _4.prototype.push = function(e, t) {
      var r = this._readableState, n;
      return r.objectMode ? n = true : typeof e == "string" && (t = t || r.defaultEncoding, t !== r.encoding && (e = st3.from(e, t), t = ""), n = true), Kn(this, e, t, false, n);
    };
    _4.prototype.unshift = function(e) {
      return Kn(this, e, null, true, false);
    };
    function Kn(e, t, r, n, i) {
      w3("readableAddChunk", t);
      var o2 = e._readableState;
      if (t === null)
        o2.reading = false, bs(e, o2);
      else {
        var a3;
        if (i || (a3 = ws(o2, t)), a3)
          Ne(e, a3);
        else if (o2.objectMode || t && t.length > 0)
          if (typeof t != "string" && !o2.objectMode && Object.getPrototypeOf(t) !== st3.prototype && (t = ss(t)), n)
            o2.endEmitted ? Ne(e, new ys) : ar2(e, o2, t, true);
          else if (o2.ended)
            Ne(e, new ds);
          else {
            if (o2.destroyed)
              return false;
            o2.reading = false, o2.decoder && !r ? (t = o2.decoder.write(t), o2.objectMode || t.length !== 0 ? ar2(e, o2, t, false) : fr(e, o2)) : ar2(e, o2, t, false);
          }
        else
          n || (o2.reading = false, fr(e, o2));
      }
      return !o2.ended && (o2.length < o2.highWaterMark || o2.length === 0);
    }
    function ar2(e, t, r, n) {
      t.flowing && t.length === 0 && !t.sync ? (t.awaitDrain = 0, e.emit("data", r)) : (t.length += t.objectMode ? 1 : r.length, n ? t.buffer.unshift(r) : t.buffer.push(r), t.needReadable && ut2(e)), fr(e, t);
    }
    function ws(e, t) {
      var r;
      return !fs(t) && typeof t != "string" && t !== undefined && !e.objectMode && (r = new cs("chunk", ["string", "Buffer", "Uint8Array"], t)), r;
    }
    _4.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    _4.prototype.setEncoding = function(e) {
      Re || (Re = (er(), _t3(Qt)).StringDecoder);
      var t = new Re(e);
      this._readableState.decoder = t, this._readableState.encoding = this._readableState.decoder.encoding;
      for (var r = this._readableState.buffer.head, n = "";r !== null; )
        n += t.write(r.data), r = r.next;
      return this._readableState.buffer.clear(), n !== "" && this._readableState.buffer.push(n), this._readableState.length = n.length, this;
    };
    var Wn = 1073741824;
    function ms(e) {
      return e >= Wn ? e = Wn : (e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++), e;
    }
    function Hn(e, t) {
      return e <= 0 || t.length === 0 && t.ended ? 0 : t.objectMode ? 1 : e !== e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = ms(e)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = true, 0));
    }
    _4.prototype.read = function(e) {
      w3("read", e), e = parseInt(e, 10);
      var t = this._readableState, r = e;
      if (e !== 0 && (t.emittedReadable = false), e === 0 && t.needReadable && ((t.highWaterMark !== 0 ? t.length >= t.highWaterMark : t.length > 0) || t.ended))
        return w3("read: emitReadable", t.length, t.ended), t.length === 0 && t.ended ? sr(this) : ut2(this), null;
      if (e = Hn(e, t), e === 0 && t.ended)
        return t.length === 0 && sr(this), null;
      var n = t.needReadable;
      w3("need readable", n), (t.length === 0 || t.length - e < t.highWaterMark) && (n = true, w3("length less than watermark", n)), t.ended || t.reading ? (n = false, w3("reading or ended", n)) : n && (w3("do read"), t.reading = true, t.sync = true, t.length === 0 && (t.needReadable = true), this._read(t.highWaterMark), t.sync = false, t.reading || (e = Hn(r, t)));
      var i;
      return e > 0 ? i = Xn(e, t) : i = null, i === null ? (t.needReadable = t.length <= t.highWaterMark, e = 0) : (t.length -= e, t.awaitDrain = 0), t.length === 0 && (t.ended || (t.needReadable = true), r !== e && t.ended && sr(this)), i !== null && this.emit("data", i), i;
    };
    function bs(e, t) {
      if (w3("onEofChunk"), !t.ended) {
        if (t.decoder) {
          var r = t.decoder.end();
          r && r.length && (t.buffer.push(r), t.length += t.objectMode ? 1 : r.length);
        }
        t.ended = true, t.sync ? ut2(e) : (t.needReadable = false, t.emittedReadable || (t.emittedReadable = true, Vn(e)));
      }
    }
    function ut2(e) {
      var t = e._readableState;
      w3("emitReadable", t.needReadable, t.emittedReadable), t.needReadable = false, t.emittedReadable || (w3("emitReadable", t.flowing), t.emittedReadable = true, process.nextTick(Vn, e));
    }
    function Vn(e) {
      var t = e._readableState;
      w3("emitReadable_", t.destroyed, t.length, t.ended), !t.destroyed && (t.length || t.ended) && (e.emit("readable"), t.emittedReadable = false), t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark, lr(e);
    }
    function fr(e, t) {
      t.readingMore || (t.readingMore = true, process.nextTick(_s, e, t));
    }
    function _s(e, t) {
      for (;!t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && t.length === 0); ) {
        var r = t.length;
        if (w3("maybeReadMore read 0"), e.read(0), r === t.length)
          break;
      }
      t.readingMore = false;
    }
    _4.prototype._read = function(e) {
      Ne(this, new ps("_read()"));
    };
    _4.prototype.pipe = function(e, t) {
      var r = this, n = this._readableState;
      switch (n.pipesCount) {
        case 0:
          n.pipes = e;
          break;
        case 1:
          n.pipes = [n.pipes, e];
          break;
        default:
          n.pipes.push(e);
          break;
      }
      n.pipesCount += 1, w3("pipe count=%d opts=%j", n.pipesCount, t);
      var i = (!t || t.end !== false) && e !== process.stdout && e !== process.stderr, o2 = i ? s2 : E5;
      n.endEmitted ? process.nextTick(o2) : r.once("end", o2), e.on("unpipe", a3);
      function a3(v3, m3) {
        w3("onunpipe"), v3 === r && m3 && m3.hasUnpiped === false && (m3.hasUnpiped = true, h4());
      }
      function s2() {
        w3("onend"), e.end();
      }
      var u3 = vs(r);
      e.on("drain", u3);
      var l3 = false;
      function h4() {
        w3("cleanup"), e.removeListener("close", p3), e.removeListener("finish", g5), e.removeListener("drain", u3), e.removeListener("error", d3), e.removeListener("unpipe", a3), r.removeListener("end", s2), r.removeListener("end", E5), r.removeListener("data", c2), l3 = true, n.awaitDrain && (!e._writableState || e._writableState.needDrain) && u3();
      }
      r.on("data", c2);
      function c2(v3) {
        w3("ondata");
        var m3 = e.write(v3);
        w3("dest.write", m3), m3 === false && ((n.pipesCount === 1 && n.pipes === e || n.pipesCount > 1 && zn2(n.pipes, e) !== -1) && !l3 && (w3("false write response, pause", n.awaitDrain), n.awaitDrain++), r.pause());
      }
      function d3(v3) {
        w3("onerror", v3), E5(), e.removeListener("error", d3), $n(e, "error") === 0 && Ne(e, v3);
      }
      gs(e, "error", d3);
      function p3() {
        e.removeListener("finish", g5), E5();
      }
      e.once("close", p3);
      function g5() {
        w3("onfinish"), e.removeListener("close", p3), E5();
      }
      e.once("finish", g5);
      function E5() {
        w3("unpipe"), r.unpipe(e);
      }
      return e.emit("pipe", r), n.flowing || (w3("pipe resume"), r.resume()), e;
    };
    function vs(e) {
      return function() {
        var r = e._readableState;
        w3("pipeOnDrain", r.awaitDrain), r.awaitDrain && r.awaitDrain--, r.awaitDrain === 0 && $n(e, "data") && (r.flowing = true, lr(e));
      };
    }
    _4.prototype.unpipe = function(e) {
      var t = this._readableState, r = { hasUnpiped: false };
      if (t.pipesCount === 0)
        return this;
      if (t.pipesCount === 1)
        return e && e !== t.pipes ? this : (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = false, e && e.emit("unpipe", this, r), this);
      if (!e) {
        var { pipes: n, pipesCount: i } = t;
        t.pipes = null, t.pipesCount = 0, t.flowing = false;
        for (var o2 = 0;o2 < i; o2++)
          n[o2].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      var a3 = zn2(t.pipes, e);
      return a3 === -1 ? this : (t.pipes.splice(a3, 1), t.pipesCount -= 1, t.pipesCount === 1 && (t.pipes = t.pipes[0]), e.emit("unpipe", this, r), this);
    };
    _4.prototype.on = function(e, t) {
      var r = Ue.prototype.on.call(this, e, t), n = this._readableState;
      return e === "data" ? (n.readableListening = this.listenerCount("readable") > 0, n.flowing !== false && this.resume()) : e === "readable" && !n.endEmitted && !n.readableListening && (n.readableListening = n.needReadable = true, n.flowing = false, n.emittedReadable = false, w3("on readable", n.length, n.reading), n.length ? ut2(this) : n.reading || process.nextTick(Es, this)), r;
    };
    _4.prototype.addListener = _4.prototype.on;
    _4.prototype.removeListener = function(e, t) {
      var r = Ue.prototype.removeListener.call(this, e, t);
      return e === "readable" && process.nextTick(Yn, this), r;
    };
    _4.prototype.removeAllListeners = function(e) {
      var t = Ue.prototype.removeAllListeners.apply(this, arguments);
      return (e === "readable" || e === undefined) && process.nextTick(Yn, this), t;
    };
    function Yn(e) {
      var t = e._readableState;
      t.readableListening = e.listenerCount("readable") > 0, t.resumeScheduled && !t.paused ? t.flowing = true : e.listenerCount("data") > 0 && e.resume();
    }
    function Es(e) {
      w3("readable nexttick read 0"), e.read(0);
    }
    _4.prototype.resume = function() {
      var e = this._readableState;
      return e.flowing || (w3("resume"), e.flowing = !e.readableListening, xs(this, e)), e.paused = false, this;
    };
    function xs(e, t) {
      t.resumeScheduled || (t.resumeScheduled = true, process.nextTick(Rs, e, t));
    }
    function Rs(e, t) {
      w3("resume", t.reading), t.reading || e.read(0), t.resumeScheduled = false, e.emit("resume"), lr(e), t.flowing && !t.reading && e.read(0);
    }
    _4.prototype.pause = function() {
      return w3("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (w3("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
    };
    function lr(e) {
      var t = e._readableState;
      for (w3("flow", t.flowing);t.flowing && e.read() !== null; )
        ;
    }
    _4.prototype.wrap = function(e) {
      var t = this, r = this._readableState, n = false;
      e.on("end", function() {
        if (w3("wrapped end"), r.decoder && !r.ended) {
          var a3 = r.decoder.end();
          a3 && a3.length && t.push(a3);
        }
        t.push(null);
      }), e.on("data", function(a3) {
        if (w3("wrapped data"), r.decoder && (a3 = r.decoder.write(a3)), !(r.objectMode && a3 == null) && !(!r.objectMode && (!a3 || !a3.length))) {
          var s2 = t.push(a3);
          s2 || (n = true, e.pause());
        }
      });
      for (var i in e)
        this[i] === undefined && typeof e[i] == "function" && (this[i] = function(s2) {
          return function() {
            return e[s2].apply(e, arguments);
          };
        }(i));
      for (var o2 = 0;o2 < or.length; o2++)
        e.on(or[o2], this.emit.bind(this, or[o2]));
      return this._read = function(a3) {
        w3("wrapped _read", a3), n && (n = false, e.resume());
      }, this;
    };
    typeof Symbol == "function" && (_4.prototype[Symbol.asyncIterator] = function() {
      return nr === undefined && (nr = Dn2()), nr(this);
    });
    Object.defineProperty(_4.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } });
    Object.defineProperty(_4.prototype, "readableBuffer", { enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } });
    Object.defineProperty(_4.prototype, "readableFlowing", { enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(t) {
      this._readableState && (this._readableState.flowing = t);
    } });
    _4._fromList = Xn;
    Object.defineProperty(_4.prototype, "readableLength", { enumerable: false, get: function() {
      return this._readableState.length;
    } });
    function Xn(e, t) {
      if (t.length === 0)
        return null;
      var r;
      return t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (t.decoder ? r = t.buffer.join("") : t.buffer.length === 1 ? r = t.buffer.first() : r = t.buffer.concat(t.length), t.buffer.clear()) : r = t.buffer.consume(e, t.decoder), r;
    }
    function sr(e) {
      var t = e._readableState;
      w3("endReadable", t.endEmitted), t.endEmitted || (t.ended = true, process.nextTick(Ss, t, e));
    }
    function Ss(e, t) {
      if (w3("endReadableNT", e.endEmitted, e.length), !e.endEmitted && e.length === 0 && (e.endEmitted = true, t.readable = false, t.emit("end"), e.autoDestroy)) {
        var r = t._writableState;
        (!r || r.autoDestroy && r.finished) && t.destroy();
      }
    }
    typeof Symbol == "function" && (_4.from = function(e, t) {
      return ir2 === undefined && (ir2 = jn()), ir2(_4, e, t);
    });
    function zn2(e, t) {
      for (var r = 0, n = e.length;r < n; r++)
        if (e[r] === t)
          return r;
      return -1;
    }
  });
  hr2 = b5((tu, Qn2) => {
    Qn2.exports = z;
    var lt3 = fe2().codes, Ts = lt3.ERR_METHOD_NOT_IMPLEMENTED, As = lt3.ERR_MULTIPLE_CALLBACK, Bs = lt3.ERR_TRANSFORM_ALREADY_TRANSFORMING, Is = lt3.ERR_TRANSFORM_WITH_LENGTH_0, ht2 = ue2();
    Q3()(z, ht2);
    function Cs(e, t) {
      var r = this._transformState;
      r.transforming = false;
      var n = r.writecb;
      if (n === null)
        return this.emit("error", new As);
      r.writechunk = null, r.writecb = null, t != null && this.push(t), n(e);
      var i = this._readableState;
      i.reading = false, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
    }
    function z(e) {
      if (!(this instanceof z))
        return new z(e);
      ht2.call(this, e), this._transformState = { afterTransform: Cs.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e && (typeof e.transform == "function" && (this._transform = e.transform), typeof e.flush == "function" && (this._flush = e.flush)), this.on("prefinish", Ls);
    }
    function Ls() {
      var e = this;
      typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(t, r) {
        Jn(e, t, r);
      }) : Jn(this, null, null);
    }
    z.prototype.push = function(e, t) {
      return this._transformState.needTransform = false, ht2.prototype.push.call(this, e, t);
    };
    z.prototype._transform = function(e, t, r) {
      r(new Ts("_transform()"));
    };
    z.prototype._write = function(e, t, r) {
      var n = this._transformState;
      if (n.writecb = r, n.writechunk = e, n.writeencoding = t, !n.transforming) {
        var i = this._readableState;
        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
      }
    };
    z.prototype._read = function(e) {
      var t = this._transformState;
      t.writechunk !== null && !t.transforming ? (t.transforming = true, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = true;
    };
    z.prototype._destroy = function(e, t) {
      ht2.prototype._destroy.call(this, e, function(r) {
        t(r);
      });
    };
    function Jn(e, t, r) {
      if (t)
        return e.emit("error", t);
      if (r != null && e.push(r), e._writableState.length)
        throw new Is;
      if (e._transformState.transforming)
        throw new Bs;
      return e.push(null);
    }
  });
  ri2 = b5((ru, ti2) => {
    ti2.exports = Pe3;
    var ei = hr2();
    Q3()(Pe3, ei);
    function Pe3(e) {
      if (!(this instanceof Pe3))
        return new Pe3(e);
      ei.call(this, e);
    }
    Pe3.prototype._transform = function(e, t, r) {
      r(null, e);
    };
  });
  si = b5((nu, ai2) => {
    var cr2;
    function Ms(e) {
      var t = false;
      return function() {
        t || (t = true, e.apply(undefined, arguments));
      };
    }
    var oi = fe2().codes, Os = oi.ERR_MISSING_ARGS, Fs = oi.ERR_STREAM_DESTROYED;
    function ni(e) {
      if (e)
        throw e;
    }
    function Ns(e) {
      return e.setHeader && typeof e.abort == "function";
    }
    function Us2(e, t, r, n) {
      n = Ms(n);
      var i = false;
      e.on("close", function() {
        i = true;
      }), cr2 === undefined && (cr2 = it2()), cr2(e, { readable: t, writable: r }, function(a3) {
        if (a3)
          return n(a3);
        i = true, n();
      });
      var o2 = false;
      return function(a3) {
        if (!i && !o2) {
          if (o2 = true, Ns(e))
            return e.abort();
          if (typeof e.destroy == "function")
            return e.destroy();
          n(a3 || new Fs("pipe"));
        }
      };
    }
    function ii2(e) {
      e();
    }
    function Ps(e, t) {
      return e.pipe(t);
    }
    function qs(e) {
      return !e.length || typeof e[e.length - 1] != "function" ? ni : e.pop();
    }
    function Ds() {
      for (var e = arguments.length, t = new Array(e), r = 0;r < e; r++)
        t[r] = arguments[r];
      var n = qs(t);
      if (Array.isArray(t[0]) && (t = t[0]), t.length < 2)
        throw new Os("streams");
      var i, o2 = t.map(function(a3, s2) {
        var u3 = s2 < t.length - 1, l3 = s2 > 0;
        return Us2(a3, u3, l3, function(h4) {
          i || (i = h4), h4 && o2.forEach(ii2), !u3 && (o2.forEach(ii2), n(i));
        });
      });
      return t.reduce(Ps);
    }
    ai2.exports = Ds;
  });
  dr3 = b5((q2, fi2) => {
    q2 = fi2.exports = Xt();
    q2.Stream = q2;
    q2.Readable = q2;
    q2.Writable = Kt2();
    q2.Duplex = ue2();
    q2.Transform = hr2();
    q2.PassThrough = ri2();
    q2.finished = it2();
    q2.pipeline = si();
  });
  gr3 = b5((yr2) => {
    var ui = xt(), ks = Q3(), li2 = dr3(), ct3 = yr2.readyStates = { UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, DONE: 4 }, pr2 = yr2.IncomingMessage = function(e, t, r, n) {
      var i = this;
      if (li2.Readable.call(i), i._mode = r, i.headers = {}, i.rawHeaders = [], i.trailers = {}, i.rawTrailers = [], i.on("end", function() {
        process.nextTick(function() {
          i.emit("close");
        });
      }), r === "fetch") {
        let c2 = function() {
          a3.read().then(function(d3) {
            if (!i._destroyed) {
              if (n(d3.done), d3.done) {
                i.push(null);
                return;
              }
              i.push(Buffer.from(d3.value)), c2();
            }
          }).catch(function(d3) {
            n(true), i._destroyed || i.emit("error", d3);
          });
        };
        var h4 = c2;
        if (i._fetchResponse = t, i.url = t.url, i.statusCode = t.status, i.statusMessage = t.statusText, t.headers.forEach(function(d3, p3) {
          i.headers[p3.toLowerCase()] = d3, i.rawHeaders.push(p3, d3);
        }), ui.writableStream) {
          var o2 = new WritableStream({ write: function(d3) {
            return n(false), new Promise(function(p3, g5) {
              i._destroyed ? g5() : i.push(Buffer.from(d3)) ? p3() : i._resumeFetch = p3;
            });
          }, close: function() {
            n(true), i._destroyed || i.push(null);
          }, abort: function(d3) {
            n(true), i._destroyed || i.emit("error", d3);
          } });
          try {
            t.body.pipeTo(o2).catch(function(d3) {
              n(true), i._destroyed || i.emit("error", d3);
            });
            return;
          } catch {
          }
        }
        var a3 = t.body.getReader();
        c2();
      } else {
        i._xhr = e, i._pos = 0, i.url = e.responseURL, i.statusCode = e.status, i.statusMessage = e.statusText;
        var s2 = e.getAllResponseHeaders().split(/\r?\n/);
        if (s2.forEach(function(c2) {
          var d3 = c2.match(/^([^:]+):\s*(.*)/);
          if (d3) {
            var p3 = d3[1].toLowerCase();
            p3 === "set-cookie" ? (i.headers[p3] === undefined && (i.headers[p3] = []), i.headers[p3].push(d3[2])) : i.headers[p3] !== undefined ? i.headers[p3] += ", " + d3[2] : i.headers[p3] = d3[2], i.rawHeaders.push(d3[1], d3[2]);
          }
        }), i._charset = "x-user-defined", !ui.overrideMimeType) {
          var u3 = i.rawHeaders["mime-type"];
          if (u3) {
            var l3 = u3.match(/;\s*charset=([^;])(;|$)/);
            l3 && (i._charset = l3[1].toLowerCase());
          }
          i._charset || (i._charset = "utf-8");
        }
      }
    };
    ks(pr2, li2.Readable);
    pr2.prototype._read = function() {
      var e = this, t = e._resumeFetch;
      t && (e._resumeFetch = null, t());
    };
    pr2.prototype._onXHRProgress = function(e) {
      var t = this, r = t._xhr, n = null;
      switch (t._mode) {
        case "text":
          if (n = r.responseText, n.length > t._pos) {
            var i = n.substr(t._pos);
            if (t._charset === "x-user-defined") {
              for (var o2 = Buffer.alloc(i.length), a3 = 0;a3 < i.length; a3++)
                o2[a3] = i.charCodeAt(a3) & 255;
              t.push(o2);
            } else
              t.push(i, t._charset);
            t._pos = n.length;
          }
          break;
        case "arraybuffer":
          if (r.readyState !== ct3.DONE || !r.response)
            break;
          n = r.response, t.push(Buffer.from(new Uint8Array(n)));
          break;
        case "moz-chunked-arraybuffer":
          if (n = r.response, r.readyState !== ct3.LOADING || !n)
            break;
          t.push(Buffer.from(new Uint8Array(n)));
          break;
        case "ms-stream":
          if (n = r.response, r.readyState !== ct3.LOADING)
            break;
          var s2 = new global.MSStreamReader;
          s2.onprogress = function() {
            s2.result.byteLength > t._pos && (t.push(Buffer.from(new Uint8Array(s2.result.slice(t._pos)))), t._pos = s2.result.byteLength);
          }, s2.onload = function() {
            e(true), t.push(null);
          }, s2.readAsArrayBuffer(n);
          break;
      }
      t._xhr.readyState === ct3.DONE && t._mode !== "ms-stream" && (e(true), t.push(null));
    };
  });
  pi2 = b5((ou2, di2) => {
    var pe = xt(), js2 = Q3(), ci2 = gr3(), wr = dr3(), Ws2 = ci2.IncomingMessage, hi = ci2.readyStates;
    function Hs2(e, t) {
      return pe.fetch && t ? "fetch" : pe.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : pe.msstream ? "ms-stream" : pe.arraybuffer && e ? "arraybuffer" : "text";
    }
    var M3 = di2.exports = function(e) {
      var t = this;
      wr.Writable.call(t), t._opts = e, t._body = [], t._headers = {}, e.auth && t.setHeader("Authorization", "Basic " + Buffer.from(e.auth).toString("base64")), Object.keys(e.headers).forEach(function(i) {
        t.setHeader(i, e.headers[i]);
      });
      var r, n = true;
      if (e.mode === "disable-fetch" || "requestTimeout" in e && !pe.abortController)
        n = false, r = true;
      else if (e.mode === "prefer-streaming")
        r = false;
      else if (e.mode === "allow-wrong-content-type")
        r = !pe.overrideMimeType;
      else if (!e.mode || e.mode === "default" || e.mode === "prefer-fast")
        r = true;
      else
        throw new Error("Invalid value for opts.mode");
      t._mode = Hs2(r, n), t._fetchTimer = null, t._socketTimeout = null, t._socketTimer = null, t.on("finish", function() {
        t._onFinish();
      });
    };
    js2(M3, wr.Writable);
    M3.prototype.setHeader = function(e, t) {
      var r = this, n = e.toLowerCase();
      Gs2.indexOf(n) === -1 && (r._headers[n] = { name: e, value: t });
    };
    M3.prototype.getHeader = function(e) {
      var t = this._headers[e.toLowerCase()];
      return t ? t.value : null;
    };
    M3.prototype.removeHeader = function(e) {
      var t = this;
      delete t._headers[e.toLowerCase()];
    };
    M3.prototype._onFinish = function() {
      var e = this;
      if (!e._destroyed) {
        var t = e._opts;
        "timeout" in t && t.timeout !== 0 && e.setTimeout(t.timeout);
        var r = e._headers, n = null;
        t.method !== "GET" && t.method !== "HEAD" && (n = new Blob(e._body, { type: (r["content-type"] || {}).value || "" }));
        var i = [];
        if (Object.keys(r).forEach(function(u3) {
          var l3 = r[u3].name, h4 = r[u3].value;
          Array.isArray(h4) ? h4.forEach(function(c2) {
            i.push([l3, c2]);
          }) : i.push([l3, h4]);
        }), e._mode === "fetch") {
          var o2 = null;
          if (pe.abortController) {
            var a3 = new AbortController;
            o2 = a3.signal, e._fetchAbortController = a3, "requestTimeout" in t && t.requestTimeout !== 0 && (e._fetchTimer = global.setTimeout(function() {
              e.emit("requestTimeout"), e._fetchAbortController && e._fetchAbortController.abort();
            }, t.requestTimeout));
          }
          global.fetch(e._opts.url, { method: e._opts.method, headers: i, body: n || undefined, mode: "cors", credentials: t.withCredentials ? "include" : "same-origin", signal: o2 }).then(function(u3) {
            e._fetchResponse = u3, e._resetTimers(false), e._connect();
          }, function(u3) {
            e._resetTimers(true), e._destroyed || e.emit("error", u3);
          });
        } else {
          var s2 = e._xhr = new global.XMLHttpRequest;
          try {
            s2.open(e._opts.method, e._opts.url, true);
          } catch (u3) {
            process.nextTick(function() {
              e.emit("error", u3);
            });
            return;
          }
          "responseType" in s2 && (s2.responseType = e._mode), "withCredentials" in s2 && (s2.withCredentials = !!t.withCredentials), e._mode === "text" && "overrideMimeType" in s2 && s2.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in t && (s2.timeout = t.requestTimeout, s2.ontimeout = function() {
            e.emit("requestTimeout");
          }), i.forEach(function(u3) {
            s2.setRequestHeader(u3[0], u3[1]);
          }), e._response = null, s2.onreadystatechange = function() {
            switch (s2.readyState) {
              case hi.LOADING:
              case hi.DONE:
                e._onXHRProgress();
                break;
            }
          }, e._mode === "moz-chunked-arraybuffer" && (s2.onprogress = function() {
            e._onXHRProgress();
          }), s2.onerror = function() {
            e._destroyed || (e._resetTimers(true), e.emit("error", new Error("XHR error")));
          };
          try {
            s2.send(n);
          } catch (u3) {
            process.nextTick(function() {
              e.emit("error", u3);
            });
            return;
          }
        }
      }
    };
    function $s2(e) {
      try {
        var t = e.status;
        return t !== null && t !== 0;
      } catch {
        return false;
      }
    }
    M3.prototype._onXHRProgress = function() {
      var e = this;
      e._resetTimers(false), !(!$s2(e._xhr) || e._destroyed) && (e._response || e._connect(), e._response._onXHRProgress(e._resetTimers.bind(e)));
    };
    M3.prototype._connect = function() {
      var e = this;
      e._destroyed || (e._response = new Ws2(e._xhr, e._fetchResponse, e._mode, e._resetTimers.bind(e)), e._response.on("error", function(t) {
        e.emit("error", t);
      }), e.emit("response", e._response));
    };
    M3.prototype._write = function(e, t, r) {
      var n = this;
      n._body.push(e), r();
    };
    M3.prototype._resetTimers = function(e) {
      var t = this;
      global.clearTimeout(t._socketTimer), t._socketTimer = null, e ? (global.clearTimeout(t._fetchTimer), t._fetchTimer = null) : t._socketTimeout && (t._socketTimer = global.setTimeout(function() {
        t.emit("timeout");
      }, t._socketTimeout));
    };
    M3.prototype.abort = M3.prototype.destroy = function(e) {
      var t = this;
      t._destroyed = true, t._resetTimers(true), t._response && (t._response._destroyed = true), t._xhr ? t._xhr.abort() : t._fetchAbortController && t._fetchAbortController.abort(), e && t.emit("error", e);
    };
    M3.prototype.end = function(e, t, r) {
      var n = this;
      typeof e == "function" && (r = e, e = undefined), wr.Writable.prototype.end.call(n, e, t, r);
    };
    M3.prototype.setTimeout = function(e, t) {
      var r = this;
      t && r.once("timeout", t), r._socketTimeout = e, r._resetTimers(false);
    };
    M3.prototype.flushHeaders = function() {
    };
    M3.prototype.setNoDelay = function() {
    };
    M3.prototype.setSocketKeepAlive = function() {
    };
    var Gs2 = ["accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "via"];
  });
  gi3 = b5((au2, yi2) => {
    yi2.exports = Vs2;
    var Ks2 = Object.prototype.hasOwnProperty;
    function Vs2() {
      for (var e = {}, t = 0;t < arguments.length; t++) {
        var r = arguments[t];
        for (var n in r)
          Ks2.call(r, n) && (e[n] = r[n]);
      }
      return e;
    }
  });
  mi2 = b5((su2, wi3) => {
    wi3.exports = { 100: "Continue", 101: "Switching Protocols", 102: "Processing", 200: "OK", 201: "Created", 202: "Accepted", 203: "Non-Authoritative Information", 204: "No Content", 205: "Reset Content", 206: "Partial Content", 207: "Multi-Status", 208: "Already Reported", 226: "IM Used", 300: "Multiple Choices", 301: "Moved Permanently", 302: "Found", 303: "See Other", 304: "Not Modified", 305: "Use Proxy", 307: "Temporary Redirect", 308: "Permanent Redirect", 400: "Bad Request", 401: "Unauthorized", 402: "Payment Required", 403: "Forbidden", 404: "Not Found", 405: "Method Not Allowed", 406: "Not Acceptable", 407: "Proxy Authentication Required", 408: "Request Timeout", 409: "Conflict", 410: "Gone", 411: "Length Required", 412: "Precondition Failed", 413: "Payload Too Large", 414: "URI Too Long", 415: "Unsupported Media Type", 416: "Range Not Satisfiable", 417: "Expectation Failed", 418: "I'm a teapot", 421: "Misdirected Request", 422: "Unprocessable Entity", 423: "Locked", 424: "Failed Dependency", 425: "Unordered Collection", 426: "Upgrade Required", 428: "Precondition Required", 429: "Too Many Requests", 431: "Request Header Fields Too Large", 451: "Unavailable For Legal Reasons", 500: "Internal Server Error", 501: "Not Implemented", 502: "Bad Gateway", 503: "Service Unavailable", 504: "Gateway Timeout", 505: "HTTP Version Not Supported", 506: "Variant Also Negotiates", 507: "Insufficient Storage", 508: "Loop Detected", 509: "Bandwidth Limit Exceeded", 510: "Not Extended", 511: "Network Authentication Required" };
  });
  Ti = {};
  mt3(Ti, { decode: () => vr2, default: () => tf, encode: () => Er3, toASCII: () => Si3, toUnicode: () => Ri, ucs2decode: () => _r2, ucs2encode: () => Ei });
  Ai2 = Cr(() => {
    _i2 = "-", Ys2 = /^xn--/, Xs = /[^\0-\x7F]/, zs = /[\x2E\u3002\uFF0E\uFF61]/g, Zs = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, mr2 = 36 - 1, K4 = Math.floor, br3 = String.fromCharCode;
    Ei = (e) => String.fromCodePoint(...e), Qs = function(e) {
      return e >= 48 && e < 58 ? 26 + (e - 48) : e >= 65 && e < 91 ? e - 65 : e >= 97 && e < 123 ? e - 97 : 36;
    }, bi2 = function(e, t) {
      return e + 22 + 75 * (e < 26) - ((t != 0) << 5);
    }, xi2 = function(e, t, r) {
      let n = 0;
      for (e = r ? K4(e / 700) : e >> 1, e += K4(e / t);e > mr2 * 26 >> 1; n += 36)
        e = K4(e / mr2);
      return K4(n + (mr2 + 1) * e / (e + 38));
    }, vr2 = function(e) {
      let t = [], r = e.length, n = 0, i = 128, o2 = 72, a3 = e.lastIndexOf(_i2);
      a3 < 0 && (a3 = 0);
      for (let s2 = 0;s2 < a3; ++s2)
        e.charCodeAt(s2) >= 128 && oe2("not-basic"), t.push(e.charCodeAt(s2));
      for (let s2 = a3 > 0 ? a3 + 1 : 0;s2 < r; ) {
        let u3 = n;
        for (let h4 = 1, c2 = 36;; c2 += 36) {
          s2 >= r && oe2("invalid-input");
          let d3 = Qs(e.charCodeAt(s2++));
          d3 >= 36 && oe2("invalid-input"), d3 > K4((2147483647 - n) / h4) && oe2("overflow"), n += d3 * h4;
          let p3 = c2 <= o2 ? 1 : c2 >= o2 + 26 ? 26 : c2 - o2;
          if (d3 < p3)
            break;
          let g5 = 36 - p3;
          h4 > K4(2147483647 / g5) && oe2("overflow"), h4 *= g5;
        }
        let l3 = t.length + 1;
        o2 = xi2(n - u3, l3, u3 == 0), K4(n / l3) > 2147483647 - i && oe2("overflow"), i += K4(n / l3), n %= l3, t.splice(n++, 0, i);
      }
      return String.fromCodePoint(...t);
    }, Er3 = function(e) {
      let t = [];
      e = _r2(e);
      let r = e.length, n = 128, i = 0, o2 = 72;
      for (let u3 of e)
        u3 < 128 && t.push(br3(u3));
      let a3 = t.length, s2 = a3;
      for (a3 && t.push(_i2);s2 < r; ) {
        let u3 = 2147483647;
        for (let h4 of e)
          h4 >= n && h4 < u3 && (u3 = h4);
        let l3 = s2 + 1;
        u3 - n > K4((2147483647 - i) / l3) && oe2("overflow"), i += (u3 - n) * l3, n = u3;
        for (let h4 of e)
          if (h4 < n && ++i > 2147483647 && oe2("overflow"), h4 === n) {
            let c2 = i;
            for (let d3 = 36;; d3 += 36) {
              let p3 = d3 <= o2 ? 1 : d3 >= o2 + 26 ? 26 : d3 - o2;
              if (c2 < p3)
                break;
              let g5 = c2 - p3, E5 = 36 - p3;
              t.push(br3(bi2(p3 + g5 % E5, 0))), c2 = K4(g5 / E5);
            }
            t.push(br3(bi2(c2, 0))), o2 = xi2(i, l3, s2 === a3), i = 0, ++s2;
          }
        ++i, ++n;
      }
      return t.join("");
    }, Ri = function(e) {
      return vi2(e, function(t) {
        return Ys2.test(t) ? vr2(t.slice(4).toLowerCase()) : t;
      });
    }, Si3 = function(e) {
      return vi2(e, function(t) {
        return Xs.test(t) ? "xn--" + Er3(t) : t;
      });
    }, ef = { version: "2.1.0", ucs2: { decode: _r2, encode: Ei }, decode: vr2, encode: Er3, toASCII: Si3, toUnicode: Ri }, tf = ef;
  });
  Ii = b5((fu2, Bi) => {
    Bi.exports = { isString: function(e) {
      return typeof e == "string";
    }, isObject: function(e) {
      return typeof e == "object" && e !== null;
    }, isNull: function(e) {
      return e === null;
    }, isNullOrUndefined: function(e) {
      return e == null;
    } };
  });
  Li = b5((uu2, Ci) => {
    var rf = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
      return typeof e;
    } : function(e) {
      return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
    }, nf = Object.keys || function() {
      var e = Object.prototype.hasOwnProperty, t = !{ toString: null }.propertyIsEnumerable("toString"), r = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], n = r.length;
      return function(i) {
        if (typeof i != "function" && ((typeof i > "u" ? "undefined" : rf(i)) !== "object" || i === null))
          throw new TypeError("Object.keys called on non-object");
        var o2 = [], a3, s2;
        for (a3 in i)
          e.call(i, a3) && o2.push(a3);
        if (t)
          for (s2 = 0;s2 < n; s2++)
            e.call(i, r[s2]) && o2.push(r[s2]);
        return o2;
      };
    }();
    Ci.exports = nf;
  });
  ji = b5((lu2, ki) => {
    var Pi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
      return typeof e;
    } : function(e) {
      return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
    }, pt3 = ki.exports = { unescapeBuffer: ff2, unescape: Di2, escape: lf, stringify: Fi, encode: Fi, parse: Ui, decode: Ui }, of = _e2().Buffer, af = Li(), sf = function(t) {
      return Object.prototype.toString.call(t) === "[object Array]";
    }, Mi = function(t, r, n) {
      var i;
      if (t == null)
        throw new TypeError('"arr" is null or not defined');
      var o2 = Object(t), a3 = o2.length >>> 0;
      if (a3 === 0)
        return -1;
      var s2 = n | 0;
      if (s2 >= a3)
        return -1;
      for (i = Math.max(s2 >= 0 ? s2 : a3 - Math.abs(s2), 0);i < a3; ) {
        if (i in o2 && o2[i] === r)
          return i;
        i++;
      }
      return -1;
    };
    function qi() {
    }
    qi.prototype = Object.create ? Object.create(null) : {};
    var Oi = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
    function ff2(e, t) {
      for (var r = of.allocUnsafe(e.length), n = 0, i, o2, a3, s2, u3 = 0, l3 = 0;; u3++) {
        if (u3 < e.length)
          s2 = e.charCodeAt(u3);
        else {
          n > 0 && (r[l3++] = 37, n === 2 && (r[l3++] = a3));
          break;
        }
        switch (n) {
          case 0:
            switch (s2) {
              case 37:
                i = 0, o2 = 0, n = 1;
                break;
              case 43:
                t && (s2 = 32);
              default:
                r[l3++] = s2;
                break;
            }
            break;
          case 1:
            if (a3 = s2, i = Oi[s2], !(i >= 0)) {
              r[l3++] = 37, r[l3++] = s2, n = 0;
              break;
            }
            n = 2;
            break;
          case 2:
            if (n = 0, o2 = Oi[s2], !(o2 >= 0)) {
              r[l3++] = 37, r[l3++] = a3, r[l3++] = s2;
              break;
            }
            r[l3++] = 16 * i + o2;
            break;
        }
      }
      return r.slice(0, l3);
    }
    function Di2(e, t) {
      try {
        return decodeURIComponent(e);
      } catch {
        return pt3.unescapeBuffer(e, t).toString();
      }
    }
    var k3 = [];
    for (Se2 = 0;Se2 < 256; ++Se2)
      k3[Se2] = "%" + ((Se2 < 16 ? "0" : "") + Se2.toString(16)).toUpperCase();
    var Se2, uf = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0];
    function lf(e) {
      typeof e != "string" && ((typeof e > "u" ? "undefined" : Pi(e)) === "object" ? e = String(e) : e += "");
      for (var t = "", r = 0, n = 0;n < e.length; ++n) {
        var i = e.charCodeAt(n);
        if (i < 128) {
          if (uf[i] === 1)
            continue;
          r < n && (t += e.slice(r, n)), r = n + 1, t += k3[i];
          continue;
        }
        if (r < n && (t += e.slice(r, n)), i < 2048) {
          r = n + 1, t += k3[192 | i >> 6] + k3[128 | i & 63];
          continue;
        }
        if (i < 55296 || i >= 57344) {
          r = n + 1, t += k3[224 | i >> 12] + k3[128 | i >> 6 & 63] + k3[128 | i & 63];
          continue;
        }
        ++n;
        var o2;
        if (n < e.length)
          o2 = e.charCodeAt(n) & 1023;
        else
          throw new URIError("URI malformed");
        r = n + 1, i = 65536 + ((i & 1023) << 10 | o2), t += k3[240 | i >> 18] + k3[128 | i >> 12 & 63] + k3[128 | i >> 6 & 63] + k3[128 | i & 63];
      }
      return r === 0 ? e : r < e.length ? t + e.slice(r) : t;
    }
    function xr2(e) {
      return typeof e == "string" ? e : typeof e == "number" && isFinite(e) ? "" + e : typeof e == "boolean" ? e ? "true" : "false" : "";
    }
    function Fi(e, t, r, n) {
      t = t || "&", r = r || "=";
      var i = pt3.escape;
      if (n && typeof n.encodeURIComponent == "function" && (i = n.encodeURIComponent), e !== null && (typeof e > "u" ? "undefined" : Pi(e)) === "object") {
        for (var o2 = af(e), a3 = o2.length, s2 = a3 - 1, u3 = "", l3 = 0;l3 < a3; ++l3) {
          var h4 = o2[l3], c2 = e[h4], d3 = i(xr2(h4)) + r;
          if (sf(c2)) {
            for (var p3 = c2.length, g5 = p3 - 1, E5 = 0;E5 < p3; ++E5)
              u3 += d3 + i(xr2(c2[E5])), E5 < g5 && (u3 += t);
            p3 && l3 < s2 && (u3 += t);
          } else
            u3 += d3 + i(xr2(c2)), l3 < s2 && (u3 += t);
        }
        return u3;
      }
      return "";
    }
    function Ni2(e) {
      if (e.length === 0)
        return [];
      if (e.length === 1)
        return [e.charCodeAt(0)];
      for (var t = [], r = 0;r < e.length; ++r)
        t[t.length] = e.charCodeAt(r);
      return t;
    }
    var hf = [38], cf2 = [61];
    function Ui(e, t, r, n) {
      var i = new qi;
      if (typeof e != "string" || e.length === 0)
        return i;
      var o2 = t ? Ni2(t + "") : hf, a3 = r ? Ni2(r + "") : cf2, s2 = o2.length, u3 = a3.length, l3 = 1000;
      n && typeof n.maxKeys == "number" && (l3 = n.maxKeys > 0 ? n.maxKeys : -1);
      var h4 = pt3.unescape;
      n && typeof n.decodeURIComponent == "function" && (h4 = n.decodeURIComponent);
      for (var c2 = h4 !== Di2, d3 = [], p3 = 0, g5 = 0, E5 = 0, v3 = 0, m3 = "", y4 = "", R4 = c2, C2 = c2, T2 = 0, S2 = 0;S2 < e.length; ++S2) {
        var B3 = e.charCodeAt(S2);
        if (B3 === o2[E5]) {
          if (++E5 === s2) {
            var F2 = S2 - E5 + 1;
            if (v3 < u3 ? g5 < F2 && (m3 += e.slice(g5, F2)) : g5 < F2 && (y4 += e.slice(g5, F2)), R4 && (m3 = dt3(m3, h4)), C2 && (y4 = dt3(y4, h4)), m3 || y4 || g5 - p3 > s2 || S2 === 0)
              if (Mi(d3, m3) === -1)
                i[m3] = y4, d3[d3.length] = m3;
              else {
                var L4 = i[m3] || "";
                L4.pop ? L4[L4.length] = y4 : L4 && (i[m3] = [L4, y4]);
              }
            else
              S2 === 1 && delete i[m3];
            if (--l3 === 0)
              break;
            R4 = C2 = c2, T2 = 0, m3 = y4 = "", p3 = g5, g5 = S2 + 1, E5 = v3 = 0;
          }
          continue;
        } else
          E5 = 0, C2 || (B3 === 37 ? T2 = 1 : T2 > 0 && (B3 >= 48 && B3 <= 57 || B3 >= 65 && B3 <= 70 || B3 >= 97 && B3 <= 102) ? ++T2 === 3 && (C2 = true) : T2 = 0);
        if (v3 < u3)
          if (B3 === a3[v3]) {
            if (++v3 === u3) {
              var Y3 = S2 - v3 + 1;
              g5 < Y3 && (m3 += e.slice(g5, Y3)), T2 = 0, g5 = S2 + 1;
            }
            continue;
          } else
            v3 = 0, R4 || (B3 === 37 ? T2 = 1 : T2 > 0 && (B3 >= 48 && B3 <= 57 || B3 >= 65 && B3 <= 70 || B3 >= 97 && B3 <= 102) ? ++T2 === 3 && (R4 = true) : T2 = 0);
        B3 === 43 && (v3 < u3 ? (g5 < S2 && (m3 += e.slice(g5, S2)), m3 += "%20", R4 = true) : (g5 < S2 && (y4 += e.slice(g5, S2)), y4 += "%20", C2 = true), g5 = S2 + 1);
      }
      if (l3 !== 0 && (g5 < e.length || v3 > 0))
        if (g5 < e.length && (v3 < u3 ? m3 += e.slice(g5) : E5 < s2 && (y4 += e.slice(g5))), R4 && (m3 = dt3(m3, h4)), C2 && (y4 = dt3(y4, h4)), Mi(d3, m3) === -1)
          i[m3] = y4, d3[d3.length] = m3;
        else {
          var Z3 = i[m3];
          Z3.pop ? Z3[Z3.length] = y4 : i[m3] = [Z3, y4];
        }
      return i;
    }
    function dt3(e, t) {
      try {
        return t(e);
      } catch {
        return pt3.unescape(e, true);
      }
    }
  });
  Ar2 = b5((Ae2) => {
    var df = (Ai2(), _t3(Ti)), V5 = Ii();
    Ae2.parse = qe2;
    Ae2.resolve = xf;
    Ae2.resolveObject = Rf;
    Ae2.format = Ef2;
    Ae2.Url = D3;
    function D3() {
      this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
    }
    var pf = /^([a-z0-9.+-]+:)/i, yf2 = /:[0-9]*$/, gf = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, wf = ["<", ">", '"', "`", " ", "\r", `
`, "\t"], mf2 = ["{", "}", "|", "\\", "^", "`"].concat(wf), Rr3 = ["'"].concat(mf2), Wi = ["%", "/", "?", ";", "#"].concat(Rr3), Hi2 = ["/", "?", "#"], bf = 255, $i = /^[+a-z0-9A-Z_-]{0,63}$/, _f = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, vf2 = { javascript: true, "javascript:": true }, Sr = { javascript: true, "javascript:": true }, Te = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, Tr = ji();
    function qe2(e, t, r) {
      if (e && V5.isObject(e) && e instanceof D3)
        return e;
      var n = new D3;
      return n.parse(e, t, r), n;
    }
    D3.prototype.parse = function(e, t, r) {
      if (!V5.isString(e))
        throw new TypeError("Parameter 'url' must be a string, not " + typeof e);
      var n = e.indexOf("?"), i = n !== -1 && n < e.indexOf("#") ? "?" : "#", o2 = e.split(i), a3 = /\\/g;
      o2[0] = o2[0].replace(a3, "/"), e = o2.join(i);
      var s2 = e;
      if (s2 = s2.trim(), !r && e.split("#").length === 1) {
        var u3 = gf.exec(s2);
        if (u3)
          return this.path = s2, this.href = s2, this.pathname = u3[1], u3[2] ? (this.search = u3[2], t ? this.query = Tr.parse(this.search.substr(1)) : this.query = this.search.substr(1)) : t && (this.search = "", this.query = {}), this;
      }
      var l3 = pf.exec(s2);
      if (l3) {
        l3 = l3[0];
        var h4 = l3.toLowerCase();
        this.protocol = h4, s2 = s2.substr(l3.length);
      }
      if (r || l3 || s2.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        var c2 = s2.substr(0, 2) === "//";
        c2 && !(l3 && Sr[l3]) && (s2 = s2.substr(2), this.slashes = true);
      }
      if (!Sr[l3] && (c2 || l3 && !Te[l3])) {
        for (var d3 = -1, p3 = 0;p3 < Hi2.length; p3++) {
          var g5 = s2.indexOf(Hi2[p3]);
          g5 !== -1 && (d3 === -1 || g5 < d3) && (d3 = g5);
        }
        var E5, v3;
        d3 === -1 ? v3 = s2.lastIndexOf("@") : v3 = s2.lastIndexOf("@", d3), v3 !== -1 && (E5 = s2.slice(0, v3), s2 = s2.slice(v3 + 1), this.auth = decodeURIComponent(E5)), d3 = -1;
        for (var p3 = 0;p3 < Wi.length; p3++) {
          var g5 = s2.indexOf(Wi[p3]);
          g5 !== -1 && (d3 === -1 || g5 < d3) && (d3 = g5);
        }
        d3 === -1 && (d3 = s2.length), this.host = s2.slice(0, d3), s2 = s2.slice(d3), this.parseHost(), this.hostname = this.hostname || "";
        var m3 = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
        if (!m3)
          for (var y4 = this.hostname.split(/\./), p3 = 0, R4 = y4.length;p3 < R4; p3++) {
            var C2 = y4[p3];
            if (!!C2 && !C2.match($i)) {
              for (var T2 = "", S2 = 0, B3 = C2.length;S2 < B3; S2++)
                C2.charCodeAt(S2) > 127 ? T2 += "x" : T2 += C2[S2];
              if (!T2.match($i)) {
                var F2 = y4.slice(0, p3), L4 = y4.slice(p3 + 1), Y3 = C2.match(_f);
                Y3 && (F2.push(Y3[1]), L4.unshift(Y3[2])), L4.length && (s2 = "/" + L4.join(".") + s2), this.hostname = F2.join(".");
                break;
              }
            }
          }
        this.hostname.length > bf ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), m3 || (this.hostname = df.toASCII(this.hostname));
        var Z3 = this.port ? ":" + this.port : "", zi = this.hostname || "";
        this.host = zi + Z3, this.href += this.host, m3 && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), s2[0] !== "/" && (s2 = "/" + s2));
      }
      if (!vf2[h4])
        for (var p3 = 0, R4 = Rr3.length;p3 < R4; p3++) {
          var Be = Rr3[p3];
          if (s2.indexOf(Be) !== -1) {
            var gt3 = encodeURIComponent(Be);
            gt3 === Be && (gt3 = escape(Be)), s2 = s2.split(Be).join(gt3);
          }
        }
      var wt = s2.indexOf("#");
      wt !== -1 && (this.hash = s2.substr(wt), s2 = s2.slice(0, wt));
      var je = s2.indexOf("?");
      if (je !== -1 ? (this.search = s2.substr(je), this.query = s2.substr(je + 1), t && (this.query = Tr.parse(this.query)), s2 = s2.slice(0, je)) : t && (this.search = "", this.query = {}), s2 && (this.pathname = s2), Te[h4] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
        var Z3 = this.pathname || "", Zi = this.search || "";
        this.path = Z3 + Zi;
      }
      return this.href = this.format(), this;
    };
    function Ef2(e) {
      return V5.isString(e) && (e = qe2(e)), e instanceof D3 ? e.format() : D3.prototype.format.call(e);
    }
    D3.prototype.format = function() {
      var e = this.auth || "";
      e && (e = encodeURIComponent(e), e = e.replace(/%3A/i, ":"), e += "@");
      var t = this.protocol || "", r = this.pathname || "", n = this.hash || "", i = false, o2 = "";
      this.host ? i = e + this.host : this.hostname && (i = e + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (i += ":" + this.port)), this.query && V5.isObject(this.query) && Object.keys(this.query).length && (o2 = Tr.stringify(this.query));
      var a3 = this.search || o2 && "?" + o2 || "";
      return t && t.substr(-1) !== ":" && (t += ":"), this.slashes || (!t || Te[t]) && i !== false ? (i = "//" + (i || ""), r && r.charAt(0) !== "/" && (r = "/" + r)) : i || (i = ""), n && n.charAt(0) !== "#" && (n = "#" + n), a3 && a3.charAt(0) !== "?" && (a3 = "?" + a3), r = r.replace(/[?#]/g, function(s2) {
        return encodeURIComponent(s2);
      }), a3 = a3.replace("#", "%23"), t + i + r + a3 + n;
    };
    function xf(e, t) {
      return qe2(e, false, true).resolve(t);
    }
    D3.prototype.resolve = function(e) {
      return this.resolveObject(qe2(e, false, true)).format();
    };
    function Rf(e, t) {
      return e ? qe2(e, false, true).resolveObject(t) : t;
    }
    D3.prototype.resolveObject = function(e) {
      if (V5.isString(e)) {
        var t = new D3;
        t.parse(e, false, true), e = t;
      }
      for (var r = new D3, n = Object.keys(this), i = 0;i < n.length; i++) {
        var o2 = n[i];
        r[o2] = this[o2];
      }
      if (r.hash = e.hash, e.href === "")
        return r.href = r.format(), r;
      if (e.slashes && !e.protocol) {
        for (var a3 = Object.keys(e), s2 = 0;s2 < a3.length; s2++) {
          var u3 = a3[s2];
          u3 !== "protocol" && (r[u3] = e[u3]);
        }
        return Te[r.protocol] && r.hostname && !r.pathname && (r.path = r.pathname = "/"), r.href = r.format(), r;
      }
      if (e.protocol && e.protocol !== r.protocol) {
        if (!Te[e.protocol]) {
          for (var l3 = Object.keys(e), h4 = 0;h4 < l3.length; h4++) {
            var c2 = l3[h4];
            r[c2] = e[c2];
          }
          return r.href = r.format(), r;
        }
        if (r.protocol = e.protocol, !e.host && !Sr[e.protocol]) {
          for (var R4 = (e.pathname || "").split("/");R4.length && !(e.host = R4.shift()); )
            ;
          e.host || (e.host = ""), e.hostname || (e.hostname = ""), R4[0] !== "" && R4.unshift(""), R4.length < 2 && R4.unshift(""), r.pathname = R4.join("/");
        } else
          r.pathname = e.pathname;
        if (r.search = e.search, r.query = e.query, r.host = e.host || "", r.auth = e.auth, r.hostname = e.hostname || e.host, r.port = e.port, r.pathname || r.search) {
          var d3 = r.pathname || "", p3 = r.search || "";
          r.path = d3 + p3;
        }
        return r.slashes = r.slashes || e.slashes, r.href = r.format(), r;
      }
      var g5 = r.pathname && r.pathname.charAt(0) === "/", E5 = e.host || e.pathname && e.pathname.charAt(0) === "/", v3 = E5 || g5 || r.host && e.pathname, m3 = v3, y4 = r.pathname && r.pathname.split("/") || [], R4 = e.pathname && e.pathname.split("/") || [], C2 = r.protocol && !Te[r.protocol];
      if (C2 && (r.hostname = "", r.port = null, r.host && (y4[0] === "" ? y4[0] = r.host : y4.unshift(r.host)), r.host = "", e.protocol && (e.hostname = null, e.port = null, e.host && (R4[0] === "" ? R4[0] = e.host : R4.unshift(e.host)), e.host = null), v3 = v3 && (R4[0] === "" || y4[0] === "")), E5)
        r.host = e.host || e.host === "" ? e.host : r.host, r.hostname = e.hostname || e.hostname === "" ? e.hostname : r.hostname, r.search = e.search, r.query = e.query, y4 = R4;
      else if (R4.length)
        y4 || (y4 = []), y4.pop(), y4 = y4.concat(R4), r.search = e.search, r.query = e.query;
      else if (!V5.isNullOrUndefined(e.search)) {
        if (C2) {
          r.hostname = r.host = y4.shift();
          var T2 = r.host && r.host.indexOf("@") > 0 ? r.host.split("@") : false;
          T2 && (r.auth = T2.shift(), r.host = r.hostname = T2.shift());
        }
        return r.search = e.search, r.query = e.query, (!V5.isNull(r.pathname) || !V5.isNull(r.search)) && (r.path = (r.pathname ? r.pathname : "") + (r.search ? r.search : "")), r.href = r.format(), r;
      }
      if (!y4.length)
        return r.pathname = null, r.search ? r.path = "/" + r.search : r.path = null, r.href = r.format(), r;
      for (var S2 = y4.slice(-1)[0], B3 = (r.host || e.host || y4.length > 1) && (S2 === "." || S2 === "..") || S2 === "", F2 = 0, L4 = y4.length;L4 >= 0; L4--)
        S2 = y4[L4], S2 === "." ? y4.splice(L4, 1) : S2 === ".." ? (y4.splice(L4, 1), F2++) : F2 && (y4.splice(L4, 1), F2--);
      if (!v3 && !m3)
        for (;F2--; F2)
          y4.unshift("..");
      v3 && y4[0] !== "" && (!y4[0] || y4[0].charAt(0) !== "/") && y4.unshift(""), B3 && y4.join("/").substr(-1) !== "/" && y4.push("");
      var Y3 = y4[0] === "" || y4[0] && y4[0].charAt(0) === "/";
      if (C2) {
        r.hostname = r.host = Y3 ? "" : y4.length ? y4.shift() : "";
        var T2 = r.host && r.host.indexOf("@") > 0 ? r.host.split("@") : false;
        T2 && (r.auth = T2.shift(), r.host = r.hostname = T2.shift());
      }
      return v3 = v3 || r.host && y4.length, v3 && !Y3 && y4.unshift(""), y4.length ? r.pathname = y4.join("/") : (r.pathname = null, r.path = null), (!V5.isNull(r.pathname) || !V5.isNull(r.search)) && (r.path = (r.pathname ? r.pathname : "") + (r.search ? r.search : "")), r.auth = e.auth || r.auth, r.slashes = r.slashes || e.slashes, r.href = r.format(), r;
    };
    D3.prototype.parseHost = function() {
      var e = this.host, t = yf2.exec(e);
      t && (t = t[0], t !== ":" && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e);
    };
  });
  Vi2 = b5((Ki2) => {
    var Gi2 = pi2(), Sf2 = gr3(), Tf = gi3(), Af2 = mi2(), Bf = Ar2(), j4 = Ki2;
    j4.request = function(e, t) {
      typeof e == "string" ? e = Bf.parse(e) : e = Tf(e);
      var r = global.location.protocol.search(/^https?:$/) === -1 ? "http:" : "", n = e.protocol || r, i = e.hostname || e.host, o2 = e.port, a3 = e.path || "/";
      i && i.indexOf(":") !== -1 && (i = "[" + i + "]"), e.url = (i ? n + "//" + i : "") + (o2 ? ":" + o2 : "") + a3, e.method = (e.method || "GET").toUpperCase(), e.headers = e.headers || {};
      var s2 = new Gi2(e);
      return t && s2.on("response", t), s2;
    };
    j4.get = function(t, r) {
      var n = j4.request(t, r);
      return n.end(), n;
    };
    j4.ClientRequest = Gi2;
    j4.IncomingMessage = Sf2.IncomingMessage;
    j4.Agent = function() {
    };
    j4.Agent.defaultMaxSockets = 4;
    j4.globalAgent = new j4.Agent;
    j4.STATUS_CODES = Af2;
    j4.METHODS = ["CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE"];
  });
  Ir3 = b5((du, Xi2) => {
    var De = Vi2(), If = Ar2(), Br3 = Xi2.exports;
    for (yt2 in De)
      De.hasOwnProperty(yt2) && (Br3[yt2] = De[yt2]);
    var yt2;
    Br3.request = function(e, t) {
      return e = Yi2(e), De.request.call(this, e, t);
    };
    Br3.get = function(e, t) {
      return e = Yi2(e), De.get.call(this, e, t);
    };
    function Yi2(e) {
      if (typeof e == "string" && (e = If.parse(e)), e.protocol || (e.protocol = "https:"), e.protocol !== "https:")
        throw new Error('Protocol "' + e.protocol + '" not supported. Expected "https:"');
      return e;
    }
  });
  ke2 = {};
  mt3(ke2, { default: () => Cf2 });
  $e(ke2, bt3(Ir3()));
  Cf2 = bt3(Ir3());
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
});

// node_modules/winston/dist/winston/transports/http.js
var require_http = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var o2 = Object.getOwnPropertySymbols(e);
      r && (o2 = o2.filter(function(r2) {
        return Object.getOwnPropertyDescriptor(e, r2).enumerable;
      })), t.push.apply(t, o2);
    }
    return t;
  }
  function _objectSpread(e) {
    for (var r = 1;r < arguments.length; r++) {
      var t = arguments[r] != null ? arguments[r] : {};
      r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
        _defineProperty(e, r2, t[r2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
        Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
      });
    }
    return e;
  }
  function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var http = (init_http(), __toCommonJS(exports_http));
  var https = (init_https(), __toCommonJS(exports_https));
  var _require = require_readable_browser();
  var Stream = _require.Stream;
  var TransportStream = require_dist();
  var _require2 = require_safe_stable_stringify();
  var configure = _require2.configure;
  module.exports = /* @__PURE__ */ function(_TransportStream) {
    function Http() {
      var _this;
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, Http);
      _this = _callSuper(this, Http, [options]);
      _this.options = options;
      _this.name = options.name || "http";
      _this.ssl = !!options.ssl;
      _this.host = options.host || "localhost";
      _this.port = options.port;
      _this.auth = options.auth;
      _this.path = options.path || "";
      _this.maximumDepth = options.maximumDepth;
      _this.agent = options.agent;
      _this.headers = options.headers || {};
      _this.headers["content-type"] = "application/json";
      _this.batch = options.batch || false;
      _this.batchInterval = options.batchInterval || 5000;
      _this.batchCount = options.batchCount || 10;
      _this.batchOptions = [];
      _this.batchTimeoutID = -1;
      _this.batchCallback = {};
      if (!_this.port) {
        _this.port = _this.ssl ? 443 : 80;
      }
      return _this;
    }
    _inherits(Http, _TransportStream);
    return _createClass(Http, [{
      key: "log",
      value: function log(info, callback) {
        var _this2 = this;
        this._request(info, null, null, function(err, res) {
          if (res && res.statusCode !== 200) {
            err = new Error("Invalid HTTP Status Code: ".concat(res.statusCode));
          }
          if (err) {
            _this2.emit("warn", err);
          } else {
            _this2.emit("logged", info);
          }
        });
        if (callback) {
          setImmediate(callback);
        }
      }
    }, {
      key: "query",
      value: function query(options, callback) {
        if (typeof options === "function") {
          callback = options;
          options = {};
        }
        options = {
          method: "query",
          params: this.normalizeQuery(options)
        };
        var auth = options.params.auth || null;
        delete options.params.auth;
        var path = options.params.path || null;
        delete options.params.path;
        this._request(options, auth, path, function(err, res, body) {
          if (res && res.statusCode !== 200) {
            err = new Error("Invalid HTTP Status Code: ".concat(res.statusCode));
          }
          if (err) {
            return callback(err);
          }
          if (typeof body === "string") {
            try {
              body = JSON.parse(body);
            } catch (e) {
              return callback(e);
            }
          }
          callback(null, body);
        });
      }
    }, {
      key: "stream",
      value: function stream() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var stream = new Stream;
        options = {
          method: "stream",
          params: options
        };
        var path = options.params.path || null;
        delete options.params.path;
        var auth = options.params.auth || null;
        delete options.params.auth;
        var buff = "";
        var req = this._request(options, auth, path);
        stream.destroy = function() {
          return req.destroy();
        };
        req.on("data", function(data) {
          data = (buff + data).split(/\n+/);
          var l3 = data.length - 1;
          var i = 0;
          for (;i < l3; i++) {
            try {
              stream.emit("log", JSON.parse(data[i]));
            } catch (e) {
              stream.emit("error", e);
            }
          }
          buff = data[l3];
        });
        req.on("error", function(err) {
          return stream.emit("error", err);
        });
        return stream;
      }
    }, {
      key: "_request",
      value: function _request(options, auth, path, callback) {
        options = options || {};
        auth = auth || this.auth;
        path = path || this.path || "";
        if (this.batch) {
          this._doBatch(options, callback, auth, path);
        } else {
          this._doRequest(options, callback, auth, path);
        }
      }
    }, {
      key: "_doBatch",
      value: function _doBatch(options, callback, auth, path) {
        this.batchOptions.push(options);
        if (this.batchOptions.length === 1) {
          var me = this;
          this.batchCallback = callback;
          this.batchTimeoutID = setTimeout(function() {
            me.batchTimeoutID = -1;
            me._doBatchRequest(me.batchCallback, auth, path);
          }, this.batchInterval);
        }
        if (this.batchOptions.length === this.batchCount) {
          this._doBatchRequest(this.batchCallback, auth, path);
        }
      }
    }, {
      key: "_doBatchRequest",
      value: function _doBatchRequest(callback, auth, path) {
        if (this.batchTimeoutID > 0) {
          clearTimeout(this.batchTimeoutID);
          this.batchTimeoutID = -1;
        }
        var batchOptionsCopy = this.batchOptions.slice();
        this.batchOptions = [];
        this._doRequest(batchOptionsCopy, callback, auth, path);
      }
    }, {
      key: "_doRequest",
      value: function _doRequest(options, callback, auth, path) {
        var headers = Object.assign({}, this.headers);
        if (auth && auth.bearer) {
          headers.Authorization = "Bearer ".concat(auth.bearer);
        }
        var req = (this.ssl ? https : http).request(_objectSpread(_objectSpread({}, this.options), {}, {
          method: "POST",
          host: this.host,
          port: this.port,
          path: "/".concat(path.replace(/^\//, "")),
          headers,
          auth: auth && auth.username && auth.password ? "".concat(auth.username, ":").concat(auth.password) : "",
          agent: this.agent
        }));
        req.on("error", callback);
        req.on("response", function(res) {
          return res.on("end", function() {
            return callback(null, res);
          }).resume();
        });
        var jsonStringify = configure(_objectSpread({}, this.maximumDepth && {
          maximumDepth: this.maximumDepth
        }));
        req.end(Buffer.from(jsonStringify(options, this.options.replacer), "utf8"));
      }
    }]);
  }(TransportStream);
});

// node_modules/is-stream/index.js
var require_is_stream = __commonJS((exports, module) => {
  var isStream = (stream) => stream !== null && typeof stream === "object" && typeof stream.pipe === "function";
  isStream.writable = (stream) => isStream(stream) && stream.writable !== false && typeof stream._write === "function" && typeof stream._writableState === "object";
  isStream.readable = (stream) => isStream(stream) && stream.readable !== false && typeof stream._read === "function" && typeof stream._readableState === "object";
  isStream.duplex = (stream) => isStream.writable(stream) && isStream.readable(stream);
  isStream.transform = (stream) => isStream.duplex(stream) && typeof stream._transform === "function";
  module.exports = isStream;
});

// node_modules/winston/dist/winston/transports/stream.js
var require_stream = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var isStream = require_is_stream();
  var _require = require_triple_beam();
  var MESSAGE = _require.MESSAGE;
  var os = (init_os(), __toCommonJS(exports_os));
  var TransportStream = require_dist();
  module.exports = /* @__PURE__ */ function(_TransportStream) {
    function Stream() {
      var _this;
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, Stream);
      _this = _callSuper(this, Stream, [options]);
      if (!options.stream || !isStream(options.stream)) {
        throw new Error("options.stream is required.");
      }
      _this._stream = options.stream;
      _this._stream.setMaxListeners(Infinity);
      _this.isObjectMode = options.stream._writableState.objectMode;
      _this.eol = typeof options.eol === "string" ? options.eol : os.EOL;
      return _this;
    }
    _inherits(Stream, _TransportStream);
    return _createClass(Stream, [{
      key: "log",
      value: function log(info, callback) {
        var _this2 = this;
        setImmediate(function() {
          return _this2.emit("logged", info);
        });
        if (this.isObjectMode) {
          this._stream.write(info);
          if (callback) {
            callback();
          }
          return;
        }
        this._stream.write("".concat(info[MESSAGE]).concat(this.eol));
        if (callback) {
          callback();
        }
        return;
      }
    }]);
  }(TransportStream);
});

// node_modules/winston/dist/winston/transports/index.js
var require_transports = __commonJS((exports) => {
  Object.defineProperty(exports, "Console", {
    configurable: true,
    enumerable: true,
    get: function get() {
      return require_console();
    }
  });
  Object.defineProperty(exports, "File", {
    configurable: true,
    enumerable: true,
    get: function get() {
      return require_file();
    }
  });
  Object.defineProperty(exports, "Http", {
    configurable: true,
    enumerable: true,
    get: function get() {
      return require_http();
    }
  });
  Object.defineProperty(exports, "Stream", {
    configurable: true,
    enumerable: true,
    get: function get() {
      return require_stream();
    }
  });
});

// node_modules/winston/dist/winston/config/index.js
var require_config2 = __commonJS((exports) => {
  var logform = require_browser2();
  var _require = require_triple_beam();
  var configs = _require.configs;
  exports.cli = logform.levels(configs.cli);
  exports.npm = logform.levels(configs.npm);
  exports.syslog = logform.levels(configs.syslog);
  exports.addColors = logform.levels;
});

// node_modules/async/eachOf.js
var require_eachOf = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _isArrayLike = require_isArrayLike();
  var _isArrayLike2 = _interopRequireDefault(_isArrayLike);
  var _breakLoop = require_breakLoop();
  var _breakLoop2 = _interopRequireDefault(_breakLoop);
  var _eachOfLimit = require_eachOfLimit2();
  var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);
  var _once = require_once();
  var _once2 = _interopRequireDefault(_once);
  var _onlyOnce = require_onlyOnce();
  var _onlyOnce2 = _interopRequireDefault(_onlyOnce);
  var _wrapAsync = require_wrapAsync();
  var _wrapAsync2 = _interopRequireDefault(_wrapAsync);
  var _awaitify = require_awaitify();
  var _awaitify2 = _interopRequireDefault(_awaitify);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function eachOfArrayLike(coll, iteratee, callback) {
    callback = (0, _once2.default)(callback);
    var index = 0, completed = 0, { length } = coll, canceled = false;
    if (length === 0) {
      callback(null);
    }
    function iteratorCallback(err, value) {
      if (err === false) {
        canceled = true;
      }
      if (canceled === true)
        return;
      if (err) {
        callback(err);
      } else if (++completed === length || value === _breakLoop2.default) {
        callback(null);
      }
    }
    for (;index < length; index++) {
      iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));
    }
  }
  function eachOfGeneric(coll, iteratee, callback) {
    return (0, _eachOfLimit2.default)(coll, Infinity, iteratee, callback);
  }
  function eachOf(coll, iteratee, callback) {
    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;
    return eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);
  }
  exports.default = (0, _awaitify2.default)(eachOf, 3);
  module.exports = exports.default;
});

// node_modules/async/internal/withoutIndex.js
var require_withoutIndex = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _withoutIndex;
  function _withoutIndex(iteratee) {
    return (value, index, callback) => iteratee(value, callback);
  }
  module.exports = exports.default;
});

// node_modules/async/forEach.js
var require_forEach = __commonJS((exports, module) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _eachOf = require_eachOf();
  var _eachOf2 = _interopRequireDefault(_eachOf);
  var _withoutIndex = require_withoutIndex();
  var _withoutIndex2 = _interopRequireDefault(_withoutIndex);
  var _wrapAsync = require_wrapAsync();
  var _wrapAsync2 = _interopRequireDefault(_wrapAsync);
  var _awaitify = require_awaitify();
  var _awaitify2 = _interopRequireDefault(_awaitify);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function eachLimit(coll, iteratee, callback) {
    return (0, _eachOf2.default)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);
  }
  exports.default = (0, _awaitify2.default)(eachLimit, 3);
  module.exports = exports.default;
});

// node_modules/fn.name/index.js
var require_fn = __commonJS((exports, module) => {
  var toString = Object.prototype.toString;
  module.exports = function name(fn) {
    if (typeof fn.displayName === "string" && fn.constructor.name) {
      return fn.displayName;
    } else if (typeof fn.name === "string" && fn.name) {
      return fn.name;
    }
    if (typeof fn === "object" && fn.constructor && typeof fn.constructor.name === "string")
      return fn.constructor.name;
    var named = fn.toString(), type = toString.call(fn).slice(8, -1);
    if (type === "Function") {
      named = named.substring(named.indexOf("(") + 1, named.indexOf(")"));
    } else {
      named = type;
    }
    return named || "anonymous";
  };
});

// node_modules/one-time/index.js
var require_one_time = __commonJS((exports, module) => {
  var name = require_fn();
  module.exports = function one(fn) {
    var called = 0, value;
    function onetime() {
      if (called)
        return value;
      called = 1;
      value = fn.apply(this, arguments);
      fn = null;
      return value;
    }
    onetime.displayName = name(fn);
    return onetime;
  };
});

// node_modules/stack-trace/lib/stack-trace.js
var require_stack_trace = __commonJS((exports) => {
  exports.get = function(belowFn) {
    var oldLimit = Error.stackTraceLimit;
    Error.stackTraceLimit = Infinity;
    var dummyObject = {};
    var v8Handler = Error.prepareStackTrace;
    Error.prepareStackTrace = function(dummyObject2, v8StackTrace2) {
      return v8StackTrace2;
    };
    Error.captureStackTrace(dummyObject, belowFn || exports.get);
    var v8StackTrace = dummyObject.stack;
    Error.prepareStackTrace = v8Handler;
    Error.stackTraceLimit = oldLimit;
    return v8StackTrace;
  };
  exports.parse = function(err) {
    if (!err.stack) {
      return [];
    }
    var self2 = this;
    var lines = err.stack.split(`
`).slice(1);
    return lines.map(function(line) {
      if (line.match(/^\s*[-]{4,}$/)) {
        return self2._createParsedCallSite({
          fileName: line,
          lineNumber: null,
          functionName: null,
          typeName: null,
          methodName: null,
          columnNumber: null,
          native: null
        });
      }
      var lineMatch = line.match(/at (?:(.+)\s+\()?(?:(.+?):(\d+)(?::(\d+))?|([^)]+))\)?/);
      if (!lineMatch) {
        return;
      }
      var object = null;
      var method = null;
      var functionName = null;
      var typeName = null;
      var methodName = null;
      var isNative = lineMatch[5] === "native";
      if (lineMatch[1]) {
        functionName = lineMatch[1];
        var methodStart = functionName.lastIndexOf(".");
        if (functionName[methodStart - 1] == ".")
          methodStart--;
        if (methodStart > 0) {
          object = functionName.substr(0, methodStart);
          method = functionName.substr(methodStart + 1);
          var objectEnd = object.indexOf(".Module");
          if (objectEnd > 0) {
            functionName = functionName.substr(objectEnd + 1);
            object = object.substr(0, objectEnd);
          }
        }
        typeName = null;
      }
      if (method) {
        typeName = object;
        methodName = method;
      }
      if (method === "<anonymous>") {
        methodName = null;
        functionName = null;
      }
      var properties = {
        fileName: lineMatch[2] || null,
        lineNumber: parseInt(lineMatch[3], 10) || null,
        functionName,
        typeName,
        methodName,
        columnNumber: parseInt(lineMatch[4], 10) || null,
        native: isNative
      };
      return self2._createParsedCallSite(properties);
    }).filter(function(callSite) {
      return !!callSite;
    });
  };
  function CallSite(properties) {
    for (var property in properties) {
      this[property] = properties[property];
    }
  }
  var strProperties = [
    "this",
    "typeName",
    "functionName",
    "methodName",
    "fileName",
    "lineNumber",
    "columnNumber",
    "function",
    "evalOrigin"
  ];
  var boolProperties = [
    "topLevel",
    "eval",
    "native",
    "constructor"
  ];
  strProperties.forEach(function(property) {
    CallSite.prototype[property] = null;
    CallSite.prototype["get" + property[0].toUpperCase() + property.substr(1)] = function() {
      return this[property];
    };
  });
  boolProperties.forEach(function(property) {
    CallSite.prototype[property] = false;
    CallSite.prototype["is" + property[0].toUpperCase() + property.substr(1)] = function() {
      return this[property];
    };
  });
  exports._createParsedCallSite = function(properties) {
    return new CallSite(properties);
  };
});

// node_modules/winston/dist/winston/exception-stream.js
var require_exception_stream = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var _require = require_readable_browser();
  var Writable = _require.Writable;
  module.exports = /* @__PURE__ */ function(_Writable) {
    function ExceptionStream(transport) {
      var _this;
      _classCallCheck(this, ExceptionStream);
      _this = _callSuper(this, ExceptionStream, [{
        objectMode: true
      }]);
      if (!transport) {
        throw new Error("ExceptionStream requires a TransportStream instance.");
      }
      _this.handleExceptions = true;
      _this.transport = transport;
      return _this;
    }
    _inherits(ExceptionStream, _Writable);
    return _createClass(ExceptionStream, [{
      key: "_write",
      value: function _write(info, enc, callback) {
        if (info.exception) {
          return this.transport.log(info, callback);
        }
        callback();
        return true;
      }
    }]);
  }(Writable);
});

// node_modules/winston/dist/winston/exception-handler.js
var require_exception_handler = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var os = (init_os(), __toCommonJS(exports_os));
  var asyncForEach = require_forEach();
  var debug = require_browser4()("winston:exception");
  var once = require_one_time();
  var stackTrace = require_stack_trace();
  var ExceptionStream = require_exception_stream();
  module.exports = /* @__PURE__ */ function() {
    function ExceptionHandler(logger) {
      _classCallCheck(this, ExceptionHandler);
      if (!logger) {
        throw new Error("Logger is required to handle exceptions");
      }
      this.logger = logger;
      this.handlers = new Map;
    }
    return _createClass(ExceptionHandler, [{
      key: "handle",
      value: function handle() {
        var _this = this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0;_key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        args.forEach(function(arg) {
          if (Array.isArray(arg)) {
            return arg.forEach(function(handler) {
              return _this._addHandler(handler);
            });
          }
          _this._addHandler(arg);
        });
        if (!this.catcher) {
          this.catcher = this._uncaughtException.bind(this);
          process.on("uncaughtException", this.catcher);
        }
      }
    }, {
      key: "unhandle",
      value: function unhandle() {
        var _this2 = this;
        if (this.catcher) {
          process.removeListener("uncaughtException", this.catcher);
          this.catcher = false;
          Array.from(this.handlers.values()).forEach(function(wrapper) {
            return _this2.logger.unpipe(wrapper);
          });
        }
      }
    }, {
      key: "getAllInfo",
      value: function getAllInfo(err) {
        var message = null;
        if (err) {
          message = typeof err === "string" ? err : err.message;
        }
        return {
          error: err,
          level: "error",
          message: ["uncaughtException: ".concat(message || "(no error message)"), err && err.stack || "  No stack trace"].join(`
`),
          stack: err && err.stack,
          exception: true,
          date: new Date().toString(),
          process: this.getProcessInfo(),
          os: this.getOsInfo(),
          trace: this.getTrace(err)
        };
      }
    }, {
      key: "getProcessInfo",
      value: function getProcessInfo() {
        return {
          pid: process.pid,
          uid: process.getuid ? process.getuid() : null,
          gid: process.getgid ? process.getgid() : null,
          cwd: process.cwd(),
          execPath: process.execPath,
          version: process.version,
          argv: process.argv,
          memoryUsage: process.memoryUsage()
        };
      }
    }, {
      key: "getOsInfo",
      value: function getOsInfo() {
        return {
          loadavg: os.loadavg(),
          uptime: os.uptime()
        };
      }
    }, {
      key: "getTrace",
      value: function getTrace(err) {
        var trace = err ? stackTrace.parse(err) : stackTrace.get();
        return trace.map(function(site) {
          return {
            column: site.getColumnNumber(),
            file: site.getFileName(),
            function: site.getFunctionName(),
            line: site.getLineNumber(),
            method: site.getMethodName(),
            native: site.isNative()
          };
        });
      }
    }, {
      key: "_addHandler",
      value: function _addHandler(handler) {
        if (!this.handlers.has(handler)) {
          handler.handleExceptions = true;
          var wrapper = new ExceptionStream(handler);
          this.handlers.set(handler, wrapper);
          this.logger.pipe(wrapper);
        }
      }
    }, {
      key: "_uncaughtException",
      value: function _uncaughtException(err) {
        var info = this.getAllInfo(err);
        var handlers = this._getExceptionHandlers();
        var doExit = typeof this.logger.exitOnError === "function" ? this.logger.exitOnError(err) : this.logger.exitOnError;
        var timeout;
        if (!handlers.length && doExit) {
          console.warn("winston: exitOnError cannot be true with no exception handlers.");
          console.warn("winston: not exiting process.");
          doExit = false;
        }
        function gracefulExit() {
          debug("doExit", doExit);
          debug("process._exiting", process._exiting);
          if (doExit && !process._exiting) {
            if (timeout) {
              clearTimeout(timeout);
            }
            process.exit(1);
          }
        }
        if (!handlers || handlers.length === 0) {
          return process.nextTick(gracefulExit);
        }
        asyncForEach(handlers, function(handler, next) {
          var done = once(next);
          var transport = handler.transport || handler;
          function onDone(event) {
            return function() {
              debug(event);
              done();
            };
          }
          transport._ending = true;
          transport.once("finish", onDone("finished"));
          transport.once("error", onDone("error"));
        }, function() {
          return doExit && gracefulExit();
        });
        this.logger.log(info);
        if (doExit) {
          timeout = setTimeout(gracefulExit, 3000);
        }
      }
    }, {
      key: "_getExceptionHandlers",
      value: function _getExceptionHandlers() {
        return this.logger.transports.filter(function(wrap) {
          var transport = wrap.transport || wrap;
          return transport.handleExceptions;
        });
      }
    }]);
  }();
});

// node_modules/winston/dist/winston/rejection-stream.js
var require_rejection_stream = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var _require = require_readable_browser();
  var Writable = _require.Writable;
  module.exports = /* @__PURE__ */ function(_Writable) {
    function RejectionStream(transport) {
      var _this;
      _classCallCheck(this, RejectionStream);
      _this = _callSuper(this, RejectionStream, [{
        objectMode: true
      }]);
      if (!transport) {
        throw new Error("RejectionStream requires a TransportStream instance.");
      }
      _this.handleRejections = true;
      _this.transport = transport;
      return _this;
    }
    _inherits(RejectionStream, _Writable);
    return _createClass(RejectionStream, [{
      key: "_write",
      value: function _write(info, enc, callback) {
        if (info.rejection) {
          return this.transport.log(info, callback);
        }
        callback();
        return true;
      }
    }]);
  }(Writable);
});

// node_modules/winston/dist/winston/rejection-handler.js
var require_rejection_handler = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var os = (init_os(), __toCommonJS(exports_os));
  var asyncForEach = require_forEach();
  var debug = require_browser4()("winston:rejection");
  var once = require_one_time();
  var stackTrace = require_stack_trace();
  var RejectionStream = require_rejection_stream();
  module.exports = /* @__PURE__ */ function() {
    function RejectionHandler(logger) {
      _classCallCheck(this, RejectionHandler);
      if (!logger) {
        throw new Error("Logger is required to handle rejections");
      }
      this.logger = logger;
      this.handlers = new Map;
    }
    return _createClass(RejectionHandler, [{
      key: "handle",
      value: function handle() {
        var _this = this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0;_key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        args.forEach(function(arg) {
          if (Array.isArray(arg)) {
            return arg.forEach(function(handler) {
              return _this._addHandler(handler);
            });
          }
          _this._addHandler(arg);
        });
        if (!this.catcher) {
          this.catcher = this._unhandledRejection.bind(this);
          process.on("unhandledRejection", this.catcher);
        }
      }
    }, {
      key: "unhandle",
      value: function unhandle() {
        var _this2 = this;
        if (this.catcher) {
          process.removeListener("unhandledRejection", this.catcher);
          this.catcher = false;
          Array.from(this.handlers.values()).forEach(function(wrapper) {
            return _this2.logger.unpipe(wrapper);
          });
        }
      }
    }, {
      key: "getAllInfo",
      value: function getAllInfo(err) {
        var message = null;
        if (err) {
          message = typeof err === "string" ? err : err.message;
        }
        return {
          error: err,
          level: "error",
          message: ["unhandledRejection: ".concat(message || "(no error message)"), err && err.stack || "  No stack trace"].join(`
`),
          stack: err && err.stack,
          rejection: true,
          date: new Date().toString(),
          process: this.getProcessInfo(),
          os: this.getOsInfo(),
          trace: this.getTrace(err)
        };
      }
    }, {
      key: "getProcessInfo",
      value: function getProcessInfo() {
        return {
          pid: process.pid,
          uid: process.getuid ? process.getuid() : null,
          gid: process.getgid ? process.getgid() : null,
          cwd: process.cwd(),
          execPath: process.execPath,
          version: process.version,
          argv: process.argv,
          memoryUsage: process.memoryUsage()
        };
      }
    }, {
      key: "getOsInfo",
      value: function getOsInfo() {
        return {
          loadavg: os.loadavg(),
          uptime: os.uptime()
        };
      }
    }, {
      key: "getTrace",
      value: function getTrace(err) {
        var trace = err ? stackTrace.parse(err) : stackTrace.get();
        return trace.map(function(site) {
          return {
            column: site.getColumnNumber(),
            file: site.getFileName(),
            function: site.getFunctionName(),
            line: site.getLineNumber(),
            method: site.getMethodName(),
            native: site.isNative()
          };
        });
      }
    }, {
      key: "_addHandler",
      value: function _addHandler(handler) {
        if (!this.handlers.has(handler)) {
          handler.handleRejections = true;
          var wrapper = new RejectionStream(handler);
          this.handlers.set(handler, wrapper);
          this.logger.pipe(wrapper);
        }
      }
    }, {
      key: "_unhandledRejection",
      value: function _unhandledRejection(err) {
        var info = this.getAllInfo(err);
        var handlers = this._getRejectionHandlers();
        var doExit = typeof this.logger.exitOnError === "function" ? this.logger.exitOnError(err) : this.logger.exitOnError;
        var timeout;
        if (!handlers.length && doExit) {
          console.warn("winston: exitOnError cannot be true with no rejection handlers.");
          console.warn("winston: not exiting process.");
          doExit = false;
        }
        function gracefulExit() {
          debug("doExit", doExit);
          debug("process._exiting", process._exiting);
          if (doExit && !process._exiting) {
            if (timeout) {
              clearTimeout(timeout);
            }
            process.exit(1);
          }
        }
        if (!handlers || handlers.length === 0) {
          return process.nextTick(gracefulExit);
        }
        asyncForEach(handlers, function(handler, next) {
          var done = once(next);
          var transport = handler.transport || handler;
          function onDone(event) {
            return function() {
              debug(event);
              done();
            };
          }
          transport._ending = true;
          transport.once("finish", onDone("finished"));
          transport.once("error", onDone("error"));
        }, function() {
          return doExit && gracefulExit();
        });
        this.logger.log(info);
        if (doExit) {
          timeout = setTimeout(gracefulExit, 3000);
        }
      }
    }, {
      key: "_getRejectionHandlers",
      value: function _getRejectionHandlers() {
        return this.logger.transports.filter(function(wrap) {
          var transport = wrap.transport || wrap;
          return transport.handleRejections;
        });
      }
    }]);
  }();
});

// node_modules/winston-transport/modern.js
var require_modern2 = __commonJS((exports, module) => {
  var util = (init_util(), __toCommonJS(exports_util));
  var Writable = require__stream_writable();
  var { LEVEL } = require_triple_beam();
  var TransportStream = module.exports = function TransportStream(options = {}) {
    Writable.call(this, { objectMode: true, highWaterMark: options.highWaterMark });
    this.format = options.format;
    this.level = options.level;
    this.handleExceptions = options.handleExceptions;
    this.handleRejections = options.handleRejections;
    this.silent = options.silent;
    if (options.log)
      this.log = options.log;
    if (options.logv)
      this.logv = options.logv;
    if (options.close)
      this.close = options.close;
    this.once("pipe", (logger) => {
      this.levels = logger.levels;
      this.parent = logger;
    });
    this.once("unpipe", (src) => {
      if (src === this.parent) {
        this.parent = null;
        if (this.close) {
          this.close();
        }
      }
    });
  };
  util.inherits(TransportStream, Writable);
  TransportStream.prototype._write = function _write(info, enc, callback) {
    if (this.silent || info.exception === true && !this.handleExceptions) {
      return callback(null);
    }
    const level = this.level || this.parent && this.parent.level;
    if (!level || this.levels[level] >= this.levels[info[LEVEL]]) {
      if (info && !this.format) {
        return this.log(info, callback);
      }
      let errState;
      let transformed;
      try {
        transformed = this.format.transform(Object.assign({}, info), this.format.options);
      } catch (err) {
        errState = err;
      }
      if (errState || !transformed) {
        callback();
        if (errState)
          throw errState;
        return;
      }
      return this.log(transformed, callback);
    }
    this._writableState.sync = false;
    return callback(null);
  };
  TransportStream.prototype._writev = function _writev(chunks, callback) {
    if (this.logv) {
      const infos = chunks.filter(this._accept, this);
      if (!infos.length) {
        return callback(null);
      }
      return this.logv(infos, callback);
    }
    for (let i = 0;i < chunks.length; i++) {
      if (!this._accept(chunks[i]))
        continue;
      if (chunks[i].chunk && !this.format) {
        this.log(chunks[i].chunk, chunks[i].callback);
        continue;
      }
      let errState;
      let transformed;
      try {
        transformed = this.format.transform(Object.assign({}, chunks[i].chunk), this.format.options);
      } catch (err) {
        errState = err;
      }
      if (errState || !transformed) {
        chunks[i].callback();
        if (errState) {
          callback(null);
          throw errState;
        }
      } else {
        this.log(transformed, chunks[i].callback);
      }
    }
    return callback(null);
  };
  TransportStream.prototype._accept = function _accept(write) {
    const info = write.chunk;
    if (this.silent) {
      return false;
    }
    const level = this.level || this.parent && this.parent.level;
    if (info.exception === true || !level || this.levels[level] >= this.levels[info[LEVEL]]) {
      if (this.handleExceptions || info.exception !== true) {
        return true;
      }
    }
    return false;
  };
  TransportStream.prototype._nop = function _nop() {
    return;
  };
});

// node_modules/winston-transport/legacy.js
var require_legacy2 = __commonJS((exports, module) => {
  var util = (init_util(), __toCommonJS(exports_util));
  var { LEVEL } = require_triple_beam();
  var TransportStream = require_modern2();
  var LegacyTransportStream = module.exports = function LegacyTransportStream(options = {}) {
    TransportStream.call(this, options);
    if (!options.transport || typeof options.transport.log !== "function") {
      throw new Error("Invalid transport, must be an object with a log method.");
    }
    this.transport = options.transport;
    this.level = this.level || options.transport.level;
    this.handleExceptions = this.handleExceptions || options.transport.handleExceptions;
    this._deprecated();
    function transportError(err) {
      this.emit("error", err, this.transport);
    }
    if (!this.transport.__winstonError) {
      this.transport.__winstonError = transportError.bind(this);
      this.transport.on("error", this.transport.__winstonError);
    }
  };
  util.inherits(LegacyTransportStream, TransportStream);
  LegacyTransportStream.prototype._write = function _write(info, enc, callback) {
    if (this.silent || info.exception === true && !this.handleExceptions) {
      return callback(null);
    }
    if (!this.level || this.levels[this.level] >= this.levels[info[LEVEL]]) {
      this.transport.log(info[LEVEL], info.message, info, this._nop);
    }
    callback(null);
  };
  LegacyTransportStream.prototype._writev = function _writev(chunks, callback) {
    for (let i = 0;i < chunks.length; i++) {
      if (this._accept(chunks[i])) {
        this.transport.log(chunks[i].chunk[LEVEL], chunks[i].chunk.message, chunks[i].chunk, this._nop);
        chunks[i].callback();
      }
    }
    return callback(null);
  };
  LegacyTransportStream.prototype._deprecated = function _deprecated() {
    console.error([
      `${this.transport.name} is a legacy winston transport. Consider upgrading: `,
      "- Upgrade docs: https://github.com/winstonjs/winston/blob/master/UPGRADE-3.0.md"
    ].join(`
`));
  };
  LegacyTransportStream.prototype.close = function close() {
    if (this.transport.close) {
      this.transport.close();
    }
    if (this.transport.__winstonError) {
      this.transport.removeListener("error", this.transport.__winstonError);
      this.transport.__winstonError = null;
    }
  };
});

// node_modules/winston/dist/winston/profiler.js
var require_profiler = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var Profiler = /* @__PURE__ */ function() {
    function Profiler2(logger) {
      _classCallCheck(this, Profiler2);
      var Logger = require_logger();
      if (_typeof(logger) !== "object" || Array.isArray(logger) || !(logger instanceof Logger)) {
        throw new Error("Logger is required for profiling");
      } else {
        this.logger = logger;
        this.start = Date.now();
      }
    }
    return _createClass(Profiler2, [{
      key: "done",
      value: function done() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0;_key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (typeof args[args.length - 1] === "function") {
          console.warn("Callback function no longer supported as of winston@3.0.0");
          args.pop();
        }
        var info = _typeof(args[args.length - 1]) === "object" ? args.pop() : {};
        info.level = info.level || "info";
        info.durationMs = Date.now() - this.start;
        return this.logger.write(info);
      }
    }]);
  }();
  module.exports = Profiler;
});

// node_modules/logform/format.js
var require_format2 = __commonJS((exports, module) => {
  class InvalidFormatError extends Error {
    constructor(formatFn) {
      super(`Format functions must be synchronous taking a two arguments: (info, opts)
Found: ${formatFn.toString().split(`
`)[0]}
`);
      Error.captureStackTrace(this, InvalidFormatError);
    }
  }
  module.exports = (formatFn) => {
    if (formatFn.length > 2) {
      throw new InvalidFormatError(formatFn);
    }
    function Format(options = {}) {
      this.options = options;
    }
    Format.prototype.transform = formatFn;
    function createFormatWrap(opts) {
      return new Format(opts);
    }
    createFormatWrap.Format = Format;
    return createFormatWrap;
  };
});

// node_modules/logform/json.js
var require_json2 = __commonJS((exports, module) => {
  var format = require_format2();
  var { MESSAGE } = require_triple_beam();
  var stringify = require_safe_stable_stringify();
  function replacer(key, value) {
    if (typeof value === "bigint")
      return value.toString();
    return value;
  }
  module.exports = format((info, opts) => {
    const jsonStringify = stringify.configure(opts);
    info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);
    return info;
  });
});

// node_modules/winston/dist/winston/logger.js
var require_logger = __commonJS((exports, module) => {
  function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
  }
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var _require = require_readable_browser();
  var Stream = _require.Stream;
  var Transform = _require.Transform;
  var asyncForEach = require_forEach();
  var _require2 = require_triple_beam();
  var LEVEL = _require2.LEVEL;
  var SPLAT = _require2.SPLAT;
  var isStream = require_is_stream();
  var ExceptionHandler = require_exception_handler();
  var RejectionHandler = require_rejection_handler();
  var LegacyTransportStream = require_legacy2();
  var Profiler = require_profiler();
  var _require3 = require_common();
  var warn = _require3.warn;
  var config = require_config2();
  var formatRegExp = /%[scdjifoO%]/g;
  var Logger = /* @__PURE__ */ function(_Transform) {
    function Logger2(options) {
      var _this;
      _classCallCheck(this, Logger2);
      _this = _callSuper(this, Logger2, [{
        objectMode: true
      }]);
      _this.configure(options);
      return _this;
    }
    _inherits(Logger2, _Transform);
    return _createClass(Logger2, [{
      key: "child",
      value: function child(defaultRequestMetadata) {
        var logger = this;
        return Object.create(logger, {
          write: {
            value: function value(info) {
              var infoClone = Object.assign({}, defaultRequestMetadata, info);
              if (info instanceof Error) {
                infoClone.stack = info.stack;
                infoClone.message = info.message;
              }
              logger.write(infoClone);
            }
          }
        });
      }
    }, {
      key: "configure",
      value: function configure() {
        var _this2 = this;
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, silent = _ref.silent, format = _ref.format, defaultMeta = _ref.defaultMeta, levels = _ref.levels, _ref$level = _ref.level, level = _ref$level === undefined ? "info" : _ref$level, _ref$exitOnError = _ref.exitOnError, exitOnError = _ref$exitOnError === undefined ? true : _ref$exitOnError, transports = _ref.transports, colors = _ref.colors, emitErrs = _ref.emitErrs, formatters = _ref.formatters, padLevels = _ref.padLevels, rewriters = _ref.rewriters, stripColors = _ref.stripColors, exceptionHandlers = _ref.exceptionHandlers, rejectionHandlers = _ref.rejectionHandlers;
        if (this.transports.length) {
          this.clear();
        }
        this.silent = silent;
        this.format = format || this.format || require_json2()();
        this.defaultMeta = defaultMeta || null;
        this.levels = levels || this.levels || config.npm.levels;
        this.level = level;
        if (this.exceptions) {
          this.exceptions.unhandle();
        }
        if (this.rejections) {
          this.rejections.unhandle();
        }
        this.exceptions = new ExceptionHandler(this);
        this.rejections = new RejectionHandler(this);
        this.profilers = {};
        this.exitOnError = exitOnError;
        if (transports) {
          transports = Array.isArray(transports) ? transports : [transports];
          transports.forEach(function(transport) {
            return _this2.add(transport);
          });
        }
        if (colors || emitErrs || formatters || padLevels || rewriters || stripColors) {
          throw new Error(["{ colors, emitErrs, formatters, padLevels, rewriters, stripColors } were removed in winston@3.0.0.", "Use a custom winston.format(function) instead.", "See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md"].join(`
`));
        }
        if (exceptionHandlers) {
          this.exceptions.handle(exceptionHandlers);
        }
        if (rejectionHandlers) {
          this.rejections.handle(rejectionHandlers);
        }
      }
    }, {
      key: "isLevelEnabled",
      value: function isLevelEnabled(level) {
        var _this3 = this;
        var givenLevelValue = getLevelValue(this.levels, level);
        if (givenLevelValue === null) {
          return false;
        }
        var configuredLevelValue = getLevelValue(this.levels, this.level);
        if (configuredLevelValue === null) {
          return false;
        }
        if (!this.transports || this.transports.length === 0) {
          return configuredLevelValue >= givenLevelValue;
        }
        var index = this.transports.findIndex(function(transport) {
          var transportLevelValue = getLevelValue(_this3.levels, transport.level);
          if (transportLevelValue === null) {
            transportLevelValue = configuredLevelValue;
          }
          return transportLevelValue >= givenLevelValue;
        });
        return index !== -1;
      }
    }, {
      key: "log",
      value: function log(level, msg) {
        for (var _len = arguments.length, splat = new Array(_len > 2 ? _len - 2 : 0), _key = 2;_key < _len; _key++) {
          splat[_key - 2] = arguments[_key];
        }
        if (arguments.length === 1) {
          level[LEVEL] = level.level;
          this._addDefaultMeta(level);
          this.write(level);
          return this;
        }
        if (arguments.length === 2) {
          if (msg && _typeof(msg) === "object") {
            msg[LEVEL] = msg.level = level;
            this._addDefaultMeta(msg);
            this.write(msg);
            return this;
          }
          msg = _defineProperty(_defineProperty(_defineProperty({}, LEVEL, level), "level", level), "message", msg);
          this._addDefaultMeta(msg);
          this.write(msg);
          return this;
        }
        var meta = splat[0];
        if (_typeof(meta) === "object" && meta !== null) {
          var tokens = msg && msg.match && msg.match(formatRegExp);
          if (!tokens) {
            var info = Object.assign({}, this.defaultMeta, meta, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, LEVEL, level), SPLAT, splat), "level", level), "message", msg));
            if (meta.message)
              info.message = "".concat(info.message, " ").concat(meta.message);
            if (meta.stack)
              info.stack = meta.stack;
            if (meta.cause)
              info.cause = meta.cause;
            this.write(info);
            return this;
          }
        }
        this.write(Object.assign({}, this.defaultMeta, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, LEVEL, level), SPLAT, splat), "level", level), "message", msg)));
        return this;
      }
    }, {
      key: "_transform",
      value: function _transform(info, enc, callback) {
        if (this.silent) {
          return callback();
        }
        if (!info[LEVEL]) {
          info[LEVEL] = info.level;
        }
        if (!this.levels[info[LEVEL]] && this.levels[info[LEVEL]] !== 0) {
          console.error("[winston] Unknown logger level: %s", info[LEVEL]);
        }
        if (!this._readableState.pipes) {
          console.error("[winston] Attempt to write logs with no transports, which can increase memory usage: %j", info);
        }
        try {
          this.push(this.format.transform(info, this.format.options));
        } finally {
          this._writableState.sync = false;
          callback();
        }
      }
    }, {
      key: "_final",
      value: function _final(callback) {
        var transports = this.transports.slice();
        asyncForEach(transports, function(transport, next) {
          if (!transport || transport.finished)
            return setImmediate(next);
          transport.once("finish", next);
          transport.end();
        }, callback);
      }
    }, {
      key: "add",
      value: function add(transport) {
        var target = !isStream(transport) || transport.log.length > 2 ? new LegacyTransportStream({
          transport
        }) : transport;
        if (!target._writableState || !target._writableState.objectMode) {
          throw new Error("Transports must WritableStreams in objectMode. Set { objectMode: true }.");
        }
        this._onEvent("error", target);
        this._onEvent("warn", target);
        this.pipe(target);
        if (transport.handleExceptions) {
          this.exceptions.handle();
        }
        if (transport.handleRejections) {
          this.rejections.handle();
        }
        return this;
      }
    }, {
      key: "remove",
      value: function remove(transport) {
        if (!transport)
          return this;
        var target = transport;
        if (!isStream(transport) || transport.log.length > 2) {
          target = this.transports.filter(function(match) {
            return match.transport === transport;
          })[0];
        }
        if (target) {
          this.unpipe(target);
        }
        return this;
      }
    }, {
      key: "clear",
      value: function clear() {
        this.unpipe();
        return this;
      }
    }, {
      key: "close",
      value: function close() {
        this.exceptions.unhandle();
        this.rejections.unhandle();
        this.clear();
        this.emit("close");
        return this;
      }
    }, {
      key: "setLevels",
      value: function setLevels() {
        warn.deprecated("setLevels");
      }
    }, {
      key: "query",
      value: function query(options, callback) {
        if (typeof options === "function") {
          callback = options;
          options = {};
        }
        options = options || {};
        var results = {};
        var queryObject = Object.assign({}, options.query || {});
        function queryTransport(transport, next) {
          if (options.query && typeof transport.formatQuery === "function") {
            options.query = transport.formatQuery(queryObject);
          }
          transport.query(options, function(err, res) {
            if (err) {
              return next(err);
            }
            if (typeof transport.formatResults === "function") {
              res = transport.formatResults(res, options.format);
            }
            next(null, res);
          });
        }
        function addResults(transport, next) {
          queryTransport(transport, function(err, result) {
            if (next) {
              result = err || result;
              if (result) {
                results[transport.name] = result;
              }
              next();
            }
            next = null;
          });
        }
        asyncForEach(this.transports.filter(function(transport) {
          return !!transport.query;
        }), addResults, function() {
          return callback(null, results);
        });
      }
    }, {
      key: "stream",
      value: function stream() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var out = new Stream;
        var streams = [];
        out._streams = streams;
        out.destroy = function() {
          var i = streams.length;
          while (i--) {
            streams[i].destroy();
          }
        };
        this.transports.filter(function(transport) {
          return !!transport.stream;
        }).forEach(function(transport) {
          var str = transport.stream(options);
          if (!str) {
            return;
          }
          streams.push(str);
          str.on("log", function(log) {
            log.transport = log.transport || [];
            log.transport.push(transport.name);
            out.emit("log", log);
          });
          str.on("error", function(err) {
            err.transport = err.transport || [];
            err.transport.push(transport.name);
            out.emit("error", err);
          });
        });
        return out;
      }
    }, {
      key: "startTimer",
      value: function startTimer() {
        return new Profiler(this);
      }
    }, {
      key: "profile",
      value: function profile(id) {
        var time = Date.now();
        if (this.profilers[id]) {
          var timeEnd = this.profilers[id];
          delete this.profilers[id];
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1;_key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }
          if (typeof args[args.length - 2] === "function") {
            console.warn("Callback function no longer supported as of winston@3.0.0");
            args.pop();
          }
          var info = _typeof(args[args.length - 1]) === "object" ? args.pop() : {};
          info.level = info.level || "info";
          info.durationMs = time - timeEnd;
          info.message = info.message || id;
          return this.write(info);
        }
        this.profilers[id] = time;
        return this;
      }
    }, {
      key: "handleExceptions",
      value: function handleExceptions() {
        var _this$exceptions;
        console.warn("Deprecated: .handleExceptions() will be removed in winston@4. Use .exceptions.handle()");
        (_this$exceptions = this.exceptions).handle.apply(_this$exceptions, arguments);
      }
    }, {
      key: "unhandleExceptions",
      value: function unhandleExceptions() {
        var _this$exceptions2;
        console.warn("Deprecated: .unhandleExceptions() will be removed in winston@4. Use .exceptions.unhandle()");
        (_this$exceptions2 = this.exceptions).unhandle.apply(_this$exceptions2, arguments);
      }
    }, {
      key: "cli",
      value: function cli() {
        throw new Error(["Logger.cli() was removed in winston@3.0.0", "Use a custom winston.formats.cli() instead.", "See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md"].join(`
`));
      }
    }, {
      key: "_onEvent",
      value: function _onEvent(event, transport) {
        function transportEvent(err) {
          if (event === "error" && !this.transports.includes(transport)) {
            this.add(transport);
          }
          this.emit(event, err, transport);
        }
        if (!transport["__winston" + event]) {
          transport["__winston" + event] = transportEvent.bind(this);
          transport.on(event, transport["__winston" + event]);
        }
      }
    }, {
      key: "_addDefaultMeta",
      value: function _addDefaultMeta(msg) {
        if (this.defaultMeta) {
          Object.assign(msg, this.defaultMeta);
        }
      }
    }]);
  }(Transform);
  function getLevelValue(levels, level) {
    var value = levels[level];
    if (!value && value !== 0) {
      return null;
    }
    return value;
  }
  Object.defineProperty(Logger.prototype, "transports", {
    configurable: false,
    enumerable: true,
    get: function get() {
      var pipes = this._readableState.pipes;
      return !Array.isArray(pipes) ? [pipes].filter(Boolean) : pipes;
    }
  });
  module.exports = Logger;
});

// node_modules/winston/dist/winston/create-logger.js
var require_create_logger = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _callSuper(t, o2, e) {
    return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o2, e || [], _getPrototypeOf(t).constructor) : o2.apply(t, e));
  }
  function _possibleConstructorReturn(t, e) {
    if (e && (_typeof(e) == "object" || typeof e == "function"))
      return e;
    if (e !== undefined)
      throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
  }
  function _assertThisInitialized(e) {
    if (e === undefined)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch (t2) {
    }
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    })();
  }
  function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
      return t2.__proto__ || Object.getPrototypeOf(t2);
    }, _getPrototypeOf(t);
  }
  function _inherits(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
  }
  function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
      return t2.__proto__ = e2, t2;
    }, _setPrototypeOf(t, e);
  }
  var _require = require_triple_beam();
  var LEVEL = _require.LEVEL;
  var config = require_config2();
  var Logger = require_logger();
  var debug = require_browser4()("winston:create-logger");
  function isLevelEnabledFunctionName(level) {
    return "is" + level.charAt(0).toUpperCase() + level.slice(1) + "Enabled";
  }
  module.exports = function() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    opts.levels = opts.levels || config.npm.levels;
    var DerivedLogger = /* @__PURE__ */ function(_Logger) {
      function DerivedLogger2(options) {
        _classCallCheck(this, DerivedLogger2);
        return _callSuper(this, DerivedLogger2, [options]);
      }
      _inherits(DerivedLogger2, _Logger);
      return _createClass(DerivedLogger2);
    }(Logger);
    var logger = new DerivedLogger(opts);
    Object.keys(opts.levels).forEach(function(level) {
      debug('Define prototype method for "%s"', level);
      if (level === "log") {
        console.warn('Level "log" not defined: conflicts with the method "log". Use a different level name.');
        return;
      }
      DerivedLogger.prototype[level] = function() {
        var self2 = this || logger;
        for (var _len = arguments.length, args = new Array(_len), _key = 0;_key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (args.length === 1) {
          var msg = args[0];
          var info = msg && msg.message && msg || {
            message: msg
          };
          info.level = info[LEVEL] = level;
          self2._addDefaultMeta(info);
          self2.write(info);
          return this || logger;
        }
        if (args.length === 0) {
          self2.log(level, "");
          return self2;
        }
        return self2.log.apply(self2, [level].concat(args));
      };
      DerivedLogger.prototype[isLevelEnabledFunctionName(level)] = function() {
        return (this || logger).isLevelEnabled(level);
      };
    });
    return logger;
  };
});

// node_modules/winston/dist/winston/container.js
var require_container = __commonJS((exports, module) => {
  function _typeof(o2) {
    "@babel/helpers - typeof";
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, _typeof(o2);
  }
  function _classCallCheck(a3, n) {
    if (!(a3 instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t = 0;t < r.length; t++) {
      var o2 = r[t];
      o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e, _toPropertyKey(o2.key), o2);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
  }
  function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : i + "";
  }
  function _toPrimitive(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e = t[Symbol.toPrimitive];
    if (e !== undefined) {
      var i = e.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  }
  var createLogger = require_create_logger();
  module.exports = /* @__PURE__ */ function() {
    function Container() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, Container);
      this.loggers = new Map;
      this.options = options;
    }
    return _createClass(Container, [{
      key: "add",
      value: function add(id, options) {
        var _this = this;
        if (!this.loggers.has(id)) {
          options = Object.assign({}, options || this.options);
          var existing = options.transports || this.options.transports;
          if (existing) {
            options.transports = Array.isArray(existing) ? existing.slice() : [existing];
          } else {
            options.transports = [];
          }
          var logger = createLogger(options);
          logger.on("close", function() {
            return _this._delete(id);
          });
          this.loggers.set(id, logger);
        }
        return this.loggers.get(id);
      }
    }, {
      key: "get",
      value: function get(id, options) {
        return this.add(id, options);
      }
    }, {
      key: "has",
      value: function has(id) {
        return !!this.loggers.has(id);
      }
    }, {
      key: "close",
      value: function close(id) {
        var _this2 = this;
        if (id) {
          return this._removeLogger(id);
        }
        this.loggers.forEach(function(val, key) {
          return _this2._removeLogger(key);
        });
      }
    }, {
      key: "_removeLogger",
      value: function _removeLogger(id) {
        if (!this.loggers.has(id)) {
          return;
        }
        var logger = this.loggers.get(id);
        logger.close();
        this._delete(id);
      }
    }, {
      key: "_delete",
      value: function _delete(id) {
        this.loggers["delete"](id);
      }
    }]);
  }();
});

// node_modules/winston/dist/winston.js
var require_winston = __commonJS((exports) => {
  var logform = require_browser2();
  var _require = require_common();
  var warn = _require.warn;
  exports.version = require_package().version;
  exports.transports = require_transports();
  exports.config = require_config2();
  exports.addColors = logform.levels;
  exports.format = logform.format;
  exports.createLogger = require_create_logger();
  exports.Logger = require_logger();
  exports.ExceptionHandler = require_exception_handler();
  exports.RejectionHandler = require_rejection_handler();
  exports.Container = require_container();
  exports.Transport = require_dist();
  exports.loggers = new exports.Container;
  var defaultLogger = exports.createLogger();
  Object.keys(exports.config.npm.levels).concat(["log", "query", "stream", "add", "remove", "clear", "profile", "startTimer", "handleExceptions", "unhandleExceptions", "handleRejections", "unhandleRejections", "configure", "child"]).forEach(function(method) {
    return exports[method] = function() {
      return defaultLogger[method].apply(defaultLogger, arguments);
    };
  });
  Object.defineProperty(exports, "level", {
    get: function get() {
      return defaultLogger.level;
    },
    set: function set(val) {
      defaultLogger.level = val;
    }
  });
  Object.defineProperty(exports, "exceptions", {
    get: function get() {
      return defaultLogger.exceptions;
    }
  });
  Object.defineProperty(exports, "rejections", {
    get: function get() {
      return defaultLogger.rejections;
    }
  });
  ["exitOnError"].forEach(function(prop) {
    Object.defineProperty(exports, prop, {
      get: function get() {
        return defaultLogger[prop];
      },
      set: function set(val) {
        defaultLogger[prop] = val;
      }
    });
  });
  Object.defineProperty(exports, "default", {
    get: function get() {
      return {
        exceptionHandlers: defaultLogger.exceptionHandlers,
        rejectionHandlers: defaultLogger.rejectionHandlers,
        transports: defaultLogger.transports
      };
    }
  });
  warn.deprecated(exports, "setLevels");
  warn.forFunctions(exports, "useFormat", ["cli"]);
  warn.forProperties(exports, "useFormat", ["padLevels", "stripColors"]);
  warn.forFunctions(exports, "deprecated", ["addRewriter", "addFilter", "clone", "extend"]);
  warn.forProperties(exports, "deprecated", ["emitErrs", "levelLength"]);
});

// node_modules/commander/lib/error.js
var require_error = __commonJS((exports) => {
  class CommanderError extends Error {
    constructor(exitCode, code, message) {
      super(message);
      Error.captureStackTrace(this, this.constructor);
      this.name = this.constructor.name;
      this.code = code;
      this.exitCode = exitCode;
      this.nestedError = undefined;
    }
  }

  class InvalidArgumentError extends CommanderError {
    constructor(message) {
      super(1, "commander.invalidArgument", message);
      Error.captureStackTrace(this, this.constructor);
      this.name = this.constructor.name;
    }
  }
  exports.CommanderError = CommanderError;
  exports.InvalidArgumentError = InvalidArgumentError;
});

// node_modules/commander/lib/argument.js
var require_argument = __commonJS((exports) => {
  var { InvalidArgumentError } = require_error();

  class Argument {
    constructor(name, description) {
      this.description = description || "";
      this.variadic = false;
      this.parseArg = undefined;
      this.defaultValue = undefined;
      this.defaultValueDescription = undefined;
      this.argChoices = undefined;
      switch (name[0]) {
        case "<":
          this.required = true;
          this._name = name.slice(1, -1);
          break;
        case "[":
          this.required = false;
          this._name = name.slice(1, -1);
          break;
        default:
          this.required = true;
          this._name = name;
          break;
      }
      if (this._name.length > 3 && this._name.slice(-3) === "...") {
        this.variadic = true;
        this._name = this._name.slice(0, -3);
      }
    }
    name() {
      return this._name;
    }
    _concatValue(value, previous) {
      if (previous === this.defaultValue || !Array.isArray(previous)) {
        return [value];
      }
      return previous.concat(value);
    }
    default(value, description) {
      this.defaultValue = value;
      this.defaultValueDescription = description;
      return this;
    }
    argParser(fn) {
      this.parseArg = fn;
      return this;
    }
    choices(values) {
      this.argChoices = values.slice();
      this.parseArg = (arg, previous) => {
        if (!this.argChoices.includes(arg)) {
          throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(", ")}.`);
        }
        if (this.variadic) {
          return this._concatValue(arg, previous);
        }
        return arg;
      };
      return this;
    }
    argRequired() {
      this.required = true;
      return this;
    }
    argOptional() {
      this.required = false;
      return this;
    }
  }
  function humanReadableArgName(arg) {
    const nameOutput = arg.name() + (arg.variadic === true ? "..." : "");
    return arg.required ? "<" + nameOutput + ">" : "[" + nameOutput + "]";
  }
  exports.Argument = Argument;
  exports.humanReadableArgName = humanReadableArgName;
});

// node:process
var exports_process = {};
__export(exports_process, {
  default: () => j4
});
var C2, T2, q2, A3, I3, Q4, S2 = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), N5 = (e, t) => {
  for (var n in t)
    T2(e, n, { get: t[n], enumerable: true });
}, d3 = (e, t, n, w3) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let l3 of A3(t))
      !Q4.call(e, l3) && l3 !== n && T2(e, l3, { get: () => t[l3], enumerable: !(w3 = q2(t, l3)) || w3.enumerable });
  return e;
}, h4 = (e, t, n) => (d3(e, t, "default"), n && d3(n, t, "default")), y4 = (e, t, n) => (n = e != null ? C2(I3(e)) : {}, d3(t || !e || !e.__esModule ? T2(n, "default", { value: e, enumerable: true }) : n, e)), v3, f2, j4;
var init_process = __esm(() => {
  C2 = Object.create;
  T2 = Object.defineProperty;
  q2 = Object.getOwnPropertyDescriptor;
  A3 = Object.getOwnPropertyNames;
  I3 = Object.getPrototypeOf;
  Q4 = Object.prototype.hasOwnProperty;
  v3 = S2((B3, E5) => {
    var r = E5.exports = {}, i, u3;
    function p3() {
      throw new Error("setTimeout has not been defined");
    }
    function g5() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        typeof setTimeout == "function" ? i = setTimeout : i = p3;
      } catch {
        i = p3;
      }
      try {
        typeof clearTimeout == "function" ? u3 = clearTimeout : u3 = g5;
      } catch {
        u3 = g5;
      }
    })();
    function b6(e) {
      if (i === setTimeout)
        return setTimeout(e, 0);
      if ((i === p3 || !i) && setTimeout)
        return i = setTimeout, setTimeout(e, 0);
      try {
        return i(e, 0);
      } catch {
        try {
          return i.call(null, e, 0);
        } catch {
          return i.call(this, e, 0);
        }
      }
    }
    function O4(e) {
      if (u3 === clearTimeout)
        return clearTimeout(e);
      if ((u3 === g5 || !u3) && clearTimeout)
        return u3 = clearTimeout, clearTimeout(e);
      try {
        return u3(e);
      } catch {
        try {
          return u3.call(null, e);
        } catch {
          return u3.call(this, e);
        }
      }
    }
    var o2 = [], s2 = false, a3, m3 = -1;
    function U3() {
      !s2 || !a3 || (s2 = false, a3.length ? o2 = a3.concat(o2) : m3 = -1, o2.length && x5());
    }
    function x5() {
      if (!s2) {
        var e = b6(U3);
        s2 = true;
        for (var t = o2.length;t; ) {
          for (a3 = o2, o2 = [];++m3 < t; )
            a3 && a3[m3].run();
          m3 = -1, t = o2.length;
        }
        a3 = null, s2 = false, O4(e);
      }
    }
    r.nextTick = function(e) {
      var t = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var n = 1;n < arguments.length; n++)
          t[n - 1] = arguments[n];
      o2.push(new L4(e, t)), o2.length === 1 && !s2 && b6(x5);
    };
    function L4(e, t) {
      this.fun = e, this.array = t;
    }
    L4.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    r.title = "browser";
    r.browser = true;
    r.env = {};
    r.argv = [];
    r.version = "";
    r.versions = {};
    function c2() {
    }
    r.on = c2;
    r.addListener = c2;
    r.once = c2;
    r.off = c2;
    r.removeListener = c2;
    r.removeAllListeners = c2;
    r.emit = c2;
    r.prependListener = c2;
    r.prependOnceListener = c2;
    r.listeners = function(e) {
      return [];
    };
    r.binding = function(e) {
      throw new Error("process.binding is not supported");
    };
    r.cwd = function() {
      return "/";
    };
    r.chdir = function(e) {
      throw new Error("process.chdir is not supported");
    };
    r.umask = function() {
      return 0;
    };
  });
  f2 = {};
  N5(f2, { default: () => j4 });
  h4(f2, y4(v3()));
  j4 = y4(v3());
});

// node_modules/commander/lib/help.js
var require_help = __commonJS((exports) => {
  var { humanReadableArgName } = require_argument();

  class Help {
    constructor() {
      this.helpWidth = undefined;
      this.sortSubcommands = false;
      this.sortOptions = false;
      this.showGlobalOptions = false;
    }
    visibleCommands(cmd) {
      const visibleCommands = cmd.commands.filter((cmd2) => !cmd2._hidden);
      const helpCommand = cmd._getHelpCommand();
      if (helpCommand && !helpCommand._hidden) {
        visibleCommands.push(helpCommand);
      }
      if (this.sortSubcommands) {
        visibleCommands.sort((a3, b6) => {
          return a3.name().localeCompare(b6.name());
        });
      }
      return visibleCommands;
    }
    compareOptions(a3, b6) {
      const getSortKey = (option) => {
        return option.short ? option.short.replace(/^-/, "") : option.long.replace(/^--/, "");
      };
      return getSortKey(a3).localeCompare(getSortKey(b6));
    }
    visibleOptions(cmd) {
      const visibleOptions = cmd.options.filter((option) => !option.hidden);
      const helpOption = cmd._getHelpOption();
      if (helpOption && !helpOption.hidden) {
        const removeShort = helpOption.short && cmd._findOption(helpOption.short);
        const removeLong = helpOption.long && cmd._findOption(helpOption.long);
        if (!removeShort && !removeLong) {
          visibleOptions.push(helpOption);
        } else if (helpOption.long && !removeLong) {
          visibleOptions.push(cmd.createOption(helpOption.long, helpOption.description));
        } else if (helpOption.short && !removeShort) {
          visibleOptions.push(cmd.createOption(helpOption.short, helpOption.description));
        }
      }
      if (this.sortOptions) {
        visibleOptions.sort(this.compareOptions);
      }
      return visibleOptions;
    }
    visibleGlobalOptions(cmd) {
      if (!this.showGlobalOptions)
        return [];
      const globalOptions = [];
      for (let ancestorCmd = cmd.parent;ancestorCmd; ancestorCmd = ancestorCmd.parent) {
        const visibleOptions = ancestorCmd.options.filter((option) => !option.hidden);
        globalOptions.push(...visibleOptions);
      }
      if (this.sortOptions) {
        globalOptions.sort(this.compareOptions);
      }
      return globalOptions;
    }
    visibleArguments(cmd) {
      if (cmd._argsDescription) {
        cmd.registeredArguments.forEach((argument) => {
          argument.description = argument.description || cmd._argsDescription[argument.name()] || "";
        });
      }
      if (cmd.registeredArguments.find((argument) => argument.description)) {
        return cmd.registeredArguments;
      }
      return [];
    }
    subcommandTerm(cmd) {
      const args = cmd.registeredArguments.map((arg) => humanReadableArgName(arg)).join(" ");
      return cmd._name + (cmd._aliases[0] ? "|" + cmd._aliases[0] : "") + (cmd.options.length ? " [options]" : "") + (args ? " " + args : "");
    }
    optionTerm(option) {
      return option.flags;
    }
    argumentTerm(argument) {
      return argument.name();
    }
    longestSubcommandTermLength(cmd, helper) {
      return helper.visibleCommands(cmd).reduce((max, command) => {
        return Math.max(max, helper.subcommandTerm(command).length);
      }, 0);
    }
    longestOptionTermLength(cmd, helper) {
      return helper.visibleOptions(cmd).reduce((max, option) => {
        return Math.max(max, helper.optionTerm(option).length);
      }, 0);
    }
    longestGlobalOptionTermLength(cmd, helper) {
      return helper.visibleGlobalOptions(cmd).reduce((max, option) => {
        return Math.max(max, helper.optionTerm(option).length);
      }, 0);
    }
    longestArgumentTermLength(cmd, helper) {
      return helper.visibleArguments(cmd).reduce((max, argument) => {
        return Math.max(max, helper.argumentTerm(argument).length);
      }, 0);
    }
    commandUsage(cmd) {
      let cmdName = cmd._name;
      if (cmd._aliases[0]) {
        cmdName = cmdName + "|" + cmd._aliases[0];
      }
      let ancestorCmdNames = "";
      for (let ancestorCmd = cmd.parent;ancestorCmd; ancestorCmd = ancestorCmd.parent) {
        ancestorCmdNames = ancestorCmd.name() + " " + ancestorCmdNames;
      }
      return ancestorCmdNames + cmdName + " " + cmd.usage();
    }
    commandDescription(cmd) {
      return cmd.description();
    }
    subcommandDescription(cmd) {
      return cmd.summary() || cmd.description();
    }
    optionDescription(option) {
      const extraInfo = [];
      if (option.argChoices) {
        extraInfo.push(`choices: ${option.argChoices.map((choice) => JSON.stringify(choice)).join(", ")}`);
      }
      if (option.defaultValue !== undefined) {
        const showDefault = option.required || option.optional || option.isBoolean() && typeof option.defaultValue === "boolean";
        if (showDefault) {
          extraInfo.push(`default: ${option.defaultValueDescription || JSON.stringify(option.defaultValue)}`);
        }
      }
      if (option.presetArg !== undefined && option.optional) {
        extraInfo.push(`preset: ${JSON.stringify(option.presetArg)}`);
      }
      if (option.envVar !== undefined) {
        extraInfo.push(`env: ${option.envVar}`);
      }
      if (extraInfo.length > 0) {
        return `${option.description} (${extraInfo.join(", ")})`;
      }
      return option.description;
    }
    argumentDescription(argument) {
      const extraInfo = [];
      if (argument.argChoices) {
        extraInfo.push(`choices: ${argument.argChoices.map((choice) => JSON.stringify(choice)).join(", ")}`);
      }
      if (argument.defaultValue !== undefined) {
        extraInfo.push(`default: ${argument.defaultValueDescription || JSON.stringify(argument.defaultValue)}`);
      }
      if (extraInfo.length > 0) {
        const extraDescripton = `(${extraInfo.join(", ")})`;
        if (argument.description) {
          return `${argument.description} ${extraDescripton}`;
        }
        return extraDescripton;
      }
      return argument.description;
    }
    formatHelp(cmd, helper) {
      const termWidth = helper.padWidth(cmd, helper);
      const helpWidth = helper.helpWidth || 80;
      const itemIndentWidth = 2;
      const itemSeparatorWidth = 2;
      function formatItem(term, description) {
        if (description) {
          const fullText = `${term.padEnd(termWidth + itemSeparatorWidth)}${description}`;
          return helper.wrap(fullText, helpWidth - itemIndentWidth, termWidth + itemSeparatorWidth);
        }
        return term;
      }
      function formatList(textArray) {
        return textArray.join(`
`).replace(/^/gm, " ".repeat(itemIndentWidth));
      }
      let output = [`Usage: ${helper.commandUsage(cmd)}`, ""];
      const commandDescription = helper.commandDescription(cmd);
      if (commandDescription.length > 0) {
        output = output.concat([
          helper.wrap(commandDescription, helpWidth, 0),
          ""
        ]);
      }
      const argumentList = helper.visibleArguments(cmd).map((argument) => {
        return formatItem(helper.argumentTerm(argument), helper.argumentDescription(argument));
      });
      if (argumentList.length > 0) {
        output = output.concat(["Arguments:", formatList(argumentList), ""]);
      }
      const optionList = helper.visibleOptions(cmd).map((option) => {
        return formatItem(helper.optionTerm(option), helper.optionDescription(option));
      });
      if (optionList.length > 0) {
        output = output.concat(["Options:", formatList(optionList), ""]);
      }
      if (this.showGlobalOptions) {
        const globalOptionList = helper.visibleGlobalOptions(cmd).map((option) => {
          return formatItem(helper.optionTerm(option), helper.optionDescription(option));
        });
        if (globalOptionList.length > 0) {
          output = output.concat([
            "Global Options:",
            formatList(globalOptionList),
            ""
          ]);
        }
      }
      const commandList = helper.visibleCommands(cmd).map((cmd2) => {
        return formatItem(helper.subcommandTerm(cmd2), helper.subcommandDescription(cmd2));
      });
      if (commandList.length > 0) {
        output = output.concat(["Commands:", formatList(commandList), ""]);
      }
      return output.join(`
`);
    }
    padWidth(cmd, helper) {
      return Math.max(helper.longestOptionTermLength(cmd, helper), helper.longestGlobalOptionTermLength(cmd, helper), helper.longestSubcommandTermLength(cmd, helper), helper.longestArgumentTermLength(cmd, helper));
    }
    wrap(str, width, indent, minColumnWidth = 40) {
      const indents = " \\f\\t\\v   -   　\uFEFF";
      const manualIndent = new RegExp(`[\\n][${indents}]+`);
      if (str.match(manualIndent))
        return str;
      const columnWidth = width - indent;
      if (columnWidth < minColumnWidth)
        return str;
      const leadingStr = str.slice(0, indent);
      const columnText = str.slice(indent).replace(`\r
`, `
`);
      const indentString = " ".repeat(indent);
      const zeroWidthSpace = "​";
      const breaks = `\\s${zeroWidthSpace}`;
      const regex = new RegExp(`
|.{1,${columnWidth - 1}}([${breaks}]|$)|[^${breaks}]+?([${breaks}]|$)`, "g");
      const lines = columnText.match(regex) || [];
      return leadingStr + lines.map((line, i) => {
        if (line === `
`)
          return "";
        return (i > 0 ? indentString : "") + line.trimEnd();
      }).join(`
`);
    }
  }
  exports.Help = Help;
});

// node_modules/commander/lib/option.js
var require_option = __commonJS((exports) => {
  var { InvalidArgumentError } = require_error();

  class Option {
    constructor(flags, description) {
      this.flags = flags;
      this.description = description || "";
      this.required = flags.includes("<");
      this.optional = flags.includes("[");
      this.variadic = /\w\.\.\.[>\]]$/.test(flags);
      this.mandatory = false;
      const optionFlags = splitOptionFlags(flags);
      this.short = optionFlags.shortFlag;
      this.long = optionFlags.longFlag;
      this.negate = false;
      if (this.long) {
        this.negate = this.long.startsWith("--no-");
      }
      this.defaultValue = undefined;
      this.defaultValueDescription = undefined;
      this.presetArg = undefined;
      this.envVar = undefined;
      this.parseArg = undefined;
      this.hidden = false;
      this.argChoices = undefined;
      this.conflictsWith = [];
      this.implied = undefined;
    }
    default(value, description) {
      this.defaultValue = value;
      this.defaultValueDescription = description;
      return this;
    }
    preset(arg) {
      this.presetArg = arg;
      return this;
    }
    conflicts(names) {
      this.conflictsWith = this.conflictsWith.concat(names);
      return this;
    }
    implies(impliedOptionValues) {
      let newImplied = impliedOptionValues;
      if (typeof impliedOptionValues === "string") {
        newImplied = { [impliedOptionValues]: true };
      }
      this.implied = Object.assign(this.implied || {}, newImplied);
      return this;
    }
    env(name) {
      this.envVar = name;
      return this;
    }
    argParser(fn) {
      this.parseArg = fn;
      return this;
    }
    makeOptionMandatory(mandatory = true) {
      this.mandatory = !!mandatory;
      return this;
    }
    hideHelp(hide = true) {
      this.hidden = !!hide;
      return this;
    }
    _concatValue(value, previous) {
      if (previous === this.defaultValue || !Array.isArray(previous)) {
        return [value];
      }
      return previous.concat(value);
    }
    choices(values) {
      this.argChoices = values.slice();
      this.parseArg = (arg, previous) => {
        if (!this.argChoices.includes(arg)) {
          throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(", ")}.`);
        }
        if (this.variadic) {
          return this._concatValue(arg, previous);
        }
        return arg;
      };
      return this;
    }
    name() {
      if (this.long) {
        return this.long.replace(/^--/, "");
      }
      return this.short.replace(/^-/, "");
    }
    attributeName() {
      return camelcase(this.name().replace(/^no-/, ""));
    }
    is(arg) {
      return this.short === arg || this.long === arg;
    }
    isBoolean() {
      return !this.required && !this.optional && !this.negate;
    }
  }

  class DualOptions {
    constructor(options) {
      this.positiveOptions = new Map;
      this.negativeOptions = new Map;
      this.dualOptions = new Set;
      options.forEach((option) => {
        if (option.negate) {
          this.negativeOptions.set(option.attributeName(), option);
        } else {
          this.positiveOptions.set(option.attributeName(), option);
        }
      });
      this.negativeOptions.forEach((value, key) => {
        if (this.positiveOptions.has(key)) {
          this.dualOptions.add(key);
        }
      });
    }
    valueFromOption(value, option) {
      const optionKey = option.attributeName();
      if (!this.dualOptions.has(optionKey))
        return true;
      const preset = this.negativeOptions.get(optionKey).presetArg;
      const negativeValue = preset !== undefined ? preset : false;
      return option.negate === (negativeValue === value);
    }
  }
  function camelcase(str) {
    return str.split("-").reduce((str2, word) => {
      return str2 + word[0].toUpperCase() + word.slice(1);
    });
  }
  function splitOptionFlags(flags) {
    let shortFlag;
    let longFlag;
    const flagParts = flags.split(/[ |,]+/);
    if (flagParts.length > 1 && !/^[[<]/.test(flagParts[1]))
      shortFlag = flagParts.shift();
    longFlag = flagParts.shift();
    if (!shortFlag && /^-[^-]$/.test(longFlag)) {
      shortFlag = longFlag;
      longFlag = undefined;
    }
    return { shortFlag, longFlag };
  }
  exports.Option = Option;
  exports.DualOptions = DualOptions;
});

// node_modules/commander/lib/suggestSimilar.js
var require_suggestSimilar = __commonJS((exports) => {
  var maxDistance = 3;
  function editDistance(a3, b6) {
    if (Math.abs(a3.length - b6.length) > maxDistance)
      return Math.max(a3.length, b6.length);
    const d4 = [];
    for (let i = 0;i <= a3.length; i++) {
      d4[i] = [i];
    }
    for (let j5 = 0;j5 <= b6.length; j5++) {
      d4[0][j5] = j5;
    }
    for (let j5 = 1;j5 <= b6.length; j5++) {
      for (let i = 1;i <= a3.length; i++) {
        let cost = 1;
        if (a3[i - 1] === b6[j5 - 1]) {
          cost = 0;
        } else {
          cost = 1;
        }
        d4[i][j5] = Math.min(d4[i - 1][j5] + 1, d4[i][j5 - 1] + 1, d4[i - 1][j5 - 1] + cost);
        if (i > 1 && j5 > 1 && a3[i - 1] === b6[j5 - 2] && a3[i - 2] === b6[j5 - 1]) {
          d4[i][j5] = Math.min(d4[i][j5], d4[i - 2][j5 - 2] + 1);
        }
      }
    }
    return d4[a3.length][b6.length];
  }
  function suggestSimilar(word, candidates) {
    if (!candidates || candidates.length === 0)
      return "";
    candidates = Array.from(new Set(candidates));
    const searchingOptions = word.startsWith("--");
    if (searchingOptions) {
      word = word.slice(2);
      candidates = candidates.map((candidate) => candidate.slice(2));
    }
    let similar = [];
    let bestDistance = maxDistance;
    const minSimilarity = 0.4;
    candidates.forEach((candidate) => {
      if (candidate.length <= 1)
        return;
      const distance = editDistance(word, candidate);
      const length = Math.max(word.length, candidate.length);
      const similarity = (length - distance) / length;
      if (similarity > minSimilarity) {
        if (distance < bestDistance) {
          bestDistance = distance;
          similar = [candidate];
        } else if (distance === bestDistance) {
          similar.push(candidate);
        }
      }
    });
    similar.sort((a3, b6) => a3.localeCompare(b6));
    if (searchingOptions) {
      similar = similar.map((candidate) => `--${candidate}`);
    }
    if (similar.length > 1) {
      return `
(Did you mean one of ${similar.join(", ")}?)`;
    }
    if (similar.length === 1) {
      return `
(Did you mean ${similar[0]}?)`;
    }
    return "";
  }
  exports.suggestSimilar = suggestSimilar;
});

// node_modules/commander/lib/command.js
var require_command = __commonJS((exports) => {
  var EventEmitter = (init_events(), __toCommonJS(exports_events)).EventEmitter;
  var childProcess = (() => ({}));
  var path = (init_path(), __toCommonJS(exports_path));
  var fs4 = (() => ({}));
  var process2 = (init_process(), __toCommonJS(exports_process));
  var { Argument, humanReadableArgName } = require_argument();
  var { CommanderError } = require_error();
  var { Help } = require_help();
  var { Option, DualOptions } = require_option();
  var { suggestSimilar } = require_suggestSimilar();

  class Command extends EventEmitter {
    constructor(name) {
      super();
      this.commands = [];
      this.options = [];
      this.parent = null;
      this._allowUnknownOption = false;
      this._allowExcessArguments = true;
      this.registeredArguments = [];
      this._args = this.registeredArguments;
      this.args = [];
      this.rawArgs = [];
      this.processedArgs = [];
      this._scriptPath = null;
      this._name = name || "";
      this._optionValues = {};
      this._optionValueSources = {};
      this._storeOptionsAsProperties = false;
      this._actionHandler = null;
      this._executableHandler = false;
      this._executableFile = null;
      this._executableDir = null;
      this._defaultCommandName = null;
      this._exitCallback = null;
      this._aliases = [];
      this._combineFlagAndOptionalValue = true;
      this._description = "";
      this._summary = "";
      this._argsDescription = undefined;
      this._enablePositionalOptions = false;
      this._passThroughOptions = false;
      this._lifeCycleHooks = {};
      this._showHelpAfterError = false;
      this._showSuggestionAfterError = true;
      this._outputConfiguration = {
        writeOut: (str) => process2.stdout.write(str),
        writeErr: (str) => process2.stderr.write(str),
        getOutHelpWidth: () => process2.stdout.isTTY ? process2.stdout.columns : undefined,
        getErrHelpWidth: () => process2.stderr.isTTY ? process2.stderr.columns : undefined,
        outputError: (str, write) => write(str)
      };
      this._hidden = false;
      this._helpOption = undefined;
      this._addImplicitHelpCommand = undefined;
      this._helpCommand = undefined;
      this._helpConfiguration = {};
    }
    copyInheritedSettings(sourceCommand) {
      this._outputConfiguration = sourceCommand._outputConfiguration;
      this._helpOption = sourceCommand._helpOption;
      this._helpCommand = sourceCommand._helpCommand;
      this._helpConfiguration = sourceCommand._helpConfiguration;
      this._exitCallback = sourceCommand._exitCallback;
      this._storeOptionsAsProperties = sourceCommand._storeOptionsAsProperties;
      this._combineFlagAndOptionalValue = sourceCommand._combineFlagAndOptionalValue;
      this._allowExcessArguments = sourceCommand._allowExcessArguments;
      this._enablePositionalOptions = sourceCommand._enablePositionalOptions;
      this._showHelpAfterError = sourceCommand._showHelpAfterError;
      this._showSuggestionAfterError = sourceCommand._showSuggestionAfterError;
      return this;
    }
    _getCommandAndAncestors() {
      const result = [];
      for (let command = this;command; command = command.parent) {
        result.push(command);
      }
      return result;
    }
    command(nameAndArgs, actionOptsOrExecDesc, execOpts) {
      let desc = actionOptsOrExecDesc;
      let opts = execOpts;
      if (typeof desc === "object" && desc !== null) {
        opts = desc;
        desc = null;
      }
      opts = opts || {};
      const [, name, args] = nameAndArgs.match(/([^ ]+) *(.*)/);
      const cmd = this.createCommand(name);
      if (desc) {
        cmd.description(desc);
        cmd._executableHandler = true;
      }
      if (opts.isDefault)
        this._defaultCommandName = cmd._name;
      cmd._hidden = !!(opts.noHelp || opts.hidden);
      cmd._executableFile = opts.executableFile || null;
      if (args)
        cmd.arguments(args);
      this._registerCommand(cmd);
      cmd.parent = this;
      cmd.copyInheritedSettings(this);
      if (desc)
        return this;
      return cmd;
    }
    createCommand(name) {
      return new Command(name);
    }
    createHelp() {
      return Object.assign(new Help, this.configureHelp());
    }
    configureHelp(configuration) {
      if (configuration === undefined)
        return this._helpConfiguration;
      this._helpConfiguration = configuration;
      return this;
    }
    configureOutput(configuration) {
      if (configuration === undefined)
        return this._outputConfiguration;
      Object.assign(this._outputConfiguration, configuration);
      return this;
    }
    showHelpAfterError(displayHelp = true) {
      if (typeof displayHelp !== "string")
        displayHelp = !!displayHelp;
      this._showHelpAfterError = displayHelp;
      return this;
    }
    showSuggestionAfterError(displaySuggestion = true) {
      this._showSuggestionAfterError = !!displaySuggestion;
      return this;
    }
    addCommand(cmd, opts) {
      if (!cmd._name) {
        throw new Error(`Command passed to .addCommand() must have a name
- specify the name in Command constructor or using .name()`);
      }
      opts = opts || {};
      if (opts.isDefault)
        this._defaultCommandName = cmd._name;
      if (opts.noHelp || opts.hidden)
        cmd._hidden = true;
      this._registerCommand(cmd);
      cmd.parent = this;
      cmd._checkForBrokenPassThrough();
      return this;
    }
    createArgument(name, description) {
      return new Argument(name, description);
    }
    argument(name, description, fn, defaultValue) {
      const argument = this.createArgument(name, description);
      if (typeof fn === "function") {
        argument.default(defaultValue).argParser(fn);
      } else {
        argument.default(fn);
      }
      this.addArgument(argument);
      return this;
    }
    arguments(names) {
      names.trim().split(/ +/).forEach((detail) => {
        this.argument(detail);
      });
      return this;
    }
    addArgument(argument) {
      const previousArgument = this.registeredArguments.slice(-1)[0];
      if (previousArgument && previousArgument.variadic) {
        throw new Error(`only the last argument can be variadic '${previousArgument.name()}'`);
      }
      if (argument.required && argument.defaultValue !== undefined && argument.parseArg === undefined) {
        throw new Error(`a default value for a required argument is never used: '${argument.name()}'`);
      }
      this.registeredArguments.push(argument);
      return this;
    }
    helpCommand(enableOrNameAndArgs, description) {
      if (typeof enableOrNameAndArgs === "boolean") {
        this._addImplicitHelpCommand = enableOrNameAndArgs;
        return this;
      }
      enableOrNameAndArgs = enableOrNameAndArgs ?? "help [command]";
      const [, helpName, helpArgs] = enableOrNameAndArgs.match(/([^ ]+) *(.*)/);
      const helpDescription = description ?? "display help for command";
      const helpCommand = this.createCommand(helpName);
      helpCommand.helpOption(false);
      if (helpArgs)
        helpCommand.arguments(helpArgs);
      if (helpDescription)
        helpCommand.description(helpDescription);
      this._addImplicitHelpCommand = true;
      this._helpCommand = helpCommand;
      return this;
    }
    addHelpCommand(helpCommand, deprecatedDescription) {
      if (typeof helpCommand !== "object") {
        this.helpCommand(helpCommand, deprecatedDescription);
        return this;
      }
      this._addImplicitHelpCommand = true;
      this._helpCommand = helpCommand;
      return this;
    }
    _getHelpCommand() {
      const hasImplicitHelpCommand = this._addImplicitHelpCommand ?? (this.commands.length && !this._actionHandler && !this._findCommand("help"));
      if (hasImplicitHelpCommand) {
        if (this._helpCommand === undefined) {
          this.helpCommand(undefined, undefined);
        }
        return this._helpCommand;
      }
      return null;
    }
    hook(event, listener) {
      const allowedValues = ["preSubcommand", "preAction", "postAction"];
      if (!allowedValues.includes(event)) {
        throw new Error(`Unexpected value for event passed to hook : '${event}'.
Expecting one of '${allowedValues.join("', '")}'`);
      }
      if (this._lifeCycleHooks[event]) {
        this._lifeCycleHooks[event].push(listener);
      } else {
        this._lifeCycleHooks[event] = [listener];
      }
      return this;
    }
    exitOverride(fn) {
      if (fn) {
        this._exitCallback = fn;
      } else {
        this._exitCallback = (err) => {
          if (err.code !== "commander.executeSubCommandAsync") {
            throw err;
          } else {
          }
        };
      }
      return this;
    }
    _exit(exitCode, code, message) {
      if (this._exitCallback) {
        this._exitCallback(new CommanderError(exitCode, code, message));
      }
      process2.exit(exitCode);
    }
    action(fn) {
      const listener = (args) => {
        const expectedArgsCount = this.registeredArguments.length;
        const actionArgs = args.slice(0, expectedArgsCount);
        if (this._storeOptionsAsProperties) {
          actionArgs[expectedArgsCount] = this;
        } else {
          actionArgs[expectedArgsCount] = this.opts();
        }
        actionArgs.push(this);
        return fn.apply(this, actionArgs);
      };
      this._actionHandler = listener;
      return this;
    }
    createOption(flags, description) {
      return new Option(flags, description);
    }
    _callParseArg(target, value, previous, invalidArgumentMessage) {
      try {
        return target.parseArg(value, previous);
      } catch (err) {
        if (err.code === "commander.invalidArgument") {
          const message = `${invalidArgumentMessage} ${err.message}`;
          this.error(message, { exitCode: err.exitCode, code: err.code });
        }
        throw err;
      }
    }
    _registerOption(option) {
      const matchingOption = option.short && this._findOption(option.short) || option.long && this._findOption(option.long);
      if (matchingOption) {
        const matchingFlag = option.long && this._findOption(option.long) ? option.long : option.short;
        throw new Error(`Cannot add option '${option.flags}'${this._name && ` to command '${this._name}'`} due to conflicting flag '${matchingFlag}'
-  already used by option '${matchingOption.flags}'`);
      }
      this.options.push(option);
    }
    _registerCommand(command) {
      const knownBy = (cmd) => {
        return [cmd.name()].concat(cmd.aliases());
      };
      const alreadyUsed = knownBy(command).find((name) => this._findCommand(name));
      if (alreadyUsed) {
        const existingCmd = knownBy(this._findCommand(alreadyUsed)).join("|");
        const newCmd = knownBy(command).join("|");
        throw new Error(`cannot add command '${newCmd}' as already have command '${existingCmd}'`);
      }
      this.commands.push(command);
    }
    addOption(option) {
      this._registerOption(option);
      const oname = option.name();
      const name = option.attributeName();
      if (option.negate) {
        const positiveLongFlag = option.long.replace(/^--no-/, "--");
        if (!this._findOption(positiveLongFlag)) {
          this.setOptionValueWithSource(name, option.defaultValue === undefined ? true : option.defaultValue, "default");
        }
      } else if (option.defaultValue !== undefined) {
        this.setOptionValueWithSource(name, option.defaultValue, "default");
      }
      const handleOptionValue = (val, invalidValueMessage, valueSource) => {
        if (val == null && option.presetArg !== undefined) {
          val = option.presetArg;
        }
        const oldValue = this.getOptionValue(name);
        if (val !== null && option.parseArg) {
          val = this._callParseArg(option, val, oldValue, invalidValueMessage);
        } else if (val !== null && option.variadic) {
          val = option._concatValue(val, oldValue);
        }
        if (val == null) {
          if (option.negate) {
            val = false;
          } else if (option.isBoolean() || option.optional) {
            val = true;
          } else {
            val = "";
          }
        }
        this.setOptionValueWithSource(name, val, valueSource);
      };
      this.on("option:" + oname, (val) => {
        const invalidValueMessage = `error: option '${option.flags}' argument '${val}' is invalid.`;
        handleOptionValue(val, invalidValueMessage, "cli");
      });
      if (option.envVar) {
        this.on("optionEnv:" + oname, (val) => {
          const invalidValueMessage = `error: option '${option.flags}' value '${val}' from env '${option.envVar}' is invalid.`;
          handleOptionValue(val, invalidValueMessage, "env");
        });
      }
      return this;
    }
    _optionEx(config, flags, description, fn, defaultValue) {
      if (typeof flags === "object" && flags instanceof Option) {
        throw new Error("To add an Option object use addOption() instead of option() or requiredOption()");
      }
      const option = this.createOption(flags, description);
      option.makeOptionMandatory(!!config.mandatory);
      if (typeof fn === "function") {
        option.default(defaultValue).argParser(fn);
      } else if (fn instanceof RegExp) {
        const regex = fn;
        fn = (val, def) => {
          const m3 = regex.exec(val);
          return m3 ? m3[0] : def;
        };
        option.default(defaultValue).argParser(fn);
      } else {
        option.default(fn);
      }
      return this.addOption(option);
    }
    option(flags, description, parseArg, defaultValue) {
      return this._optionEx({}, flags, description, parseArg, defaultValue);
    }
    requiredOption(flags, description, parseArg, defaultValue) {
      return this._optionEx({ mandatory: true }, flags, description, parseArg, defaultValue);
    }
    combineFlagAndOptionalValue(combine = true) {
      this._combineFlagAndOptionalValue = !!combine;
      return this;
    }
    allowUnknownOption(allowUnknown = true) {
      this._allowUnknownOption = !!allowUnknown;
      return this;
    }
    allowExcessArguments(allowExcess = true) {
      this._allowExcessArguments = !!allowExcess;
      return this;
    }
    enablePositionalOptions(positional = true) {
      this._enablePositionalOptions = !!positional;
      return this;
    }
    passThroughOptions(passThrough = true) {
      this._passThroughOptions = !!passThrough;
      this._checkForBrokenPassThrough();
      return this;
    }
    _checkForBrokenPassThrough() {
      if (this.parent && this._passThroughOptions && !this.parent._enablePositionalOptions) {
        throw new Error(`passThroughOptions cannot be used for '${this._name}' without turning on enablePositionalOptions for parent command(s)`);
      }
    }
    storeOptionsAsProperties(storeAsProperties = true) {
      if (this.options.length) {
        throw new Error("call .storeOptionsAsProperties() before adding options");
      }
      if (Object.keys(this._optionValues).length) {
        throw new Error("call .storeOptionsAsProperties() before setting option values");
      }
      this._storeOptionsAsProperties = !!storeAsProperties;
      return this;
    }
    getOptionValue(key) {
      if (this._storeOptionsAsProperties) {
        return this[key];
      }
      return this._optionValues[key];
    }
    setOptionValue(key, value) {
      return this.setOptionValueWithSource(key, value, undefined);
    }
    setOptionValueWithSource(key, value, source) {
      if (this._storeOptionsAsProperties) {
        this[key] = value;
      } else {
        this._optionValues[key] = value;
      }
      this._optionValueSources[key] = source;
      return this;
    }
    getOptionValueSource(key) {
      return this._optionValueSources[key];
    }
    getOptionValueSourceWithGlobals(key) {
      let source;
      this._getCommandAndAncestors().forEach((cmd) => {
        if (cmd.getOptionValueSource(key) !== undefined) {
          source = cmd.getOptionValueSource(key);
        }
      });
      return source;
    }
    _prepareUserArgs(argv, parseOptions) {
      if (argv !== undefined && !Array.isArray(argv)) {
        throw new Error("first parameter to parse must be array or undefined");
      }
      parseOptions = parseOptions || {};
      if (argv === undefined && parseOptions.from === undefined) {
        if (process2.versions?.electron) {
          parseOptions.from = "electron";
        }
        const execArgv = process2.execArgv ?? [];
        if (execArgv.includes("-e") || execArgv.includes("--eval") || execArgv.includes("-p") || execArgv.includes("--print")) {
          parseOptions.from = "eval";
        }
      }
      if (argv === undefined) {
        argv = process2.argv;
      }
      this.rawArgs = argv.slice();
      let userArgs;
      switch (parseOptions.from) {
        case undefined:
        case "node":
          this._scriptPath = argv[1];
          userArgs = argv.slice(2);
          break;
        case "electron":
          if (process2.defaultApp) {
            this._scriptPath = argv[1];
            userArgs = argv.slice(2);
          } else {
            userArgs = argv.slice(1);
          }
          break;
        case "user":
          userArgs = argv.slice(0);
          break;
        case "eval":
          userArgs = argv.slice(1);
          break;
        default:
          throw new Error(`unexpected parse option { from: '${parseOptions.from}' }`);
      }
      if (!this._name && this._scriptPath)
        this.nameFromFilename(this._scriptPath);
      this._name = this._name || "program";
      return userArgs;
    }
    parse(argv, parseOptions) {
      const userArgs = this._prepareUserArgs(argv, parseOptions);
      this._parseCommand([], userArgs);
      return this;
    }
    async parseAsync(argv, parseOptions) {
      const userArgs = this._prepareUserArgs(argv, parseOptions);
      await this._parseCommand([], userArgs);
      return this;
    }
    _executeSubCommand(subcommand, args) {
      args = args.slice();
      let launchWithNode = false;
      const sourceExt = [".js", ".ts", ".tsx", ".mjs", ".cjs"];
      function findFile(baseDir, baseName) {
        const localBin = path.resolve(baseDir, baseName);
        if (fs4.existsSync(localBin))
          return localBin;
        if (sourceExt.includes(path.extname(baseName)))
          return;
        const foundExt = sourceExt.find((ext) => fs4.existsSync(`${localBin}${ext}`));
        if (foundExt)
          return `${localBin}${foundExt}`;
        return;
      }
      this._checkForMissingMandatoryOptions();
      this._checkForConflictingOptions();
      let executableFile = subcommand._executableFile || `${this._name}-${subcommand._name}`;
      let executableDir = this._executableDir || "";
      if (this._scriptPath) {
        let resolvedScriptPath;
        try {
          resolvedScriptPath = fs4.realpathSync(this._scriptPath);
        } catch (err) {
          resolvedScriptPath = this._scriptPath;
        }
        executableDir = path.resolve(path.dirname(resolvedScriptPath), executableDir);
      }
      if (executableDir) {
        let localFile = findFile(executableDir, executableFile);
        if (!localFile && !subcommand._executableFile && this._scriptPath) {
          const legacyName = path.basename(this._scriptPath, path.extname(this._scriptPath));
          if (legacyName !== this._name) {
            localFile = findFile(executableDir, `${legacyName}-${subcommand._name}`);
          }
        }
        executableFile = localFile || executableFile;
      }
      launchWithNode = sourceExt.includes(path.extname(executableFile));
      let proc;
      if (process2.platform !== "win32") {
        if (launchWithNode) {
          args.unshift(executableFile);
          args = incrementNodeInspectorPort(process2.execArgv).concat(args);
          proc = childProcess.spawn(process2.argv[0], args, { stdio: "inherit" });
        } else {
          proc = childProcess.spawn(executableFile, args, { stdio: "inherit" });
        }
      } else {
        args.unshift(executableFile);
        args = incrementNodeInspectorPort(process2.execArgv).concat(args);
        proc = childProcess.spawn(process2.execPath, args, { stdio: "inherit" });
      }
      if (!proc.killed) {
        const signals = ["SIGUSR1", "SIGUSR2", "SIGTERM", "SIGINT", "SIGHUP"];
        signals.forEach((signal) => {
          process2.on(signal, () => {
            if (proc.killed === false && proc.exitCode === null) {
              proc.kill(signal);
            }
          });
        });
      }
      const exitCallback = this._exitCallback;
      proc.on("close", (code) => {
        code = code ?? 1;
        if (!exitCallback) {
          process2.exit(code);
        } else {
          exitCallback(new CommanderError(code, "commander.executeSubCommandAsync", "(close)"));
        }
      });
      proc.on("error", (err) => {
        if (err.code === "ENOENT") {
          const executableDirMessage = executableDir ? `searched for local subcommand relative to directory '${executableDir}'` : "no directory for search for local subcommand, use .executableDir() to supply a custom directory";
          const executableMissing = `'${executableFile}' does not exist
 - if '${subcommand._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead
 - if the default executable name is not suitable, use the executableFile option to supply a custom name or path
 - ${executableDirMessage}`;
          throw new Error(executableMissing);
        } else if (err.code === "EACCES") {
          throw new Error(`'${executableFile}' not executable`);
        }
        if (!exitCallback) {
          process2.exit(1);
        } else {
          const wrappedError = new CommanderError(1, "commander.executeSubCommandAsync", "(error)");
          wrappedError.nestedError = err;
          exitCallback(wrappedError);
        }
      });
      this.runningCommand = proc;
    }
    _dispatchSubcommand(commandName, operands, unknown) {
      const subCommand = this._findCommand(commandName);
      if (!subCommand)
        this.help({ error: true });
      let promiseChain;
      promiseChain = this._chainOrCallSubCommandHook(promiseChain, subCommand, "preSubcommand");
      promiseChain = this._chainOrCall(promiseChain, () => {
        if (subCommand._executableHandler) {
          this._executeSubCommand(subCommand, operands.concat(unknown));
        } else {
          return subCommand._parseCommand(operands, unknown);
        }
      });
      return promiseChain;
    }
    _dispatchHelpCommand(subcommandName) {
      if (!subcommandName) {
        this.help();
      }
      const subCommand = this._findCommand(subcommandName);
      if (subCommand && !subCommand._executableHandler) {
        subCommand.help();
      }
      return this._dispatchSubcommand(subcommandName, [], [this._getHelpOption()?.long ?? this._getHelpOption()?.short ?? "--help"]);
    }
    _checkNumberOfArguments() {
      this.registeredArguments.forEach((arg, i) => {
        if (arg.required && this.args[i] == null) {
          this.missingArgument(arg.name());
        }
      });
      if (this.registeredArguments.length > 0 && this.registeredArguments[this.registeredArguments.length - 1].variadic) {
        return;
      }
      if (this.args.length > this.registeredArguments.length) {
        this._excessArguments(this.args);
      }
    }
    _processArguments() {
      const myParseArg = (argument, value, previous) => {
        let parsedValue = value;
        if (value !== null && argument.parseArg) {
          const invalidValueMessage = `error: command-argument value '${value}' is invalid for argument '${argument.name()}'.`;
          parsedValue = this._callParseArg(argument, value, previous, invalidValueMessage);
        }
        return parsedValue;
      };
      this._checkNumberOfArguments();
      const processedArgs = [];
      this.registeredArguments.forEach((declaredArg, index) => {
        let value = declaredArg.defaultValue;
        if (declaredArg.variadic) {
          if (index < this.args.length) {
            value = this.args.slice(index);
            if (declaredArg.parseArg) {
              value = value.reduce((processed, v4) => {
                return myParseArg(declaredArg, v4, processed);
              }, declaredArg.defaultValue);
            }
          } else if (value === undefined) {
            value = [];
          }
        } else if (index < this.args.length) {
          value = this.args[index];
          if (declaredArg.parseArg) {
            value = myParseArg(declaredArg, value, declaredArg.defaultValue);
          }
        }
        processedArgs[index] = value;
      });
      this.processedArgs = processedArgs;
    }
    _chainOrCall(promise, fn) {
      if (promise && promise.then && typeof promise.then === "function") {
        return promise.then(() => fn());
      }
      return fn();
    }
    _chainOrCallHooks(promise, event) {
      let result = promise;
      const hooks = [];
      this._getCommandAndAncestors().reverse().filter((cmd) => cmd._lifeCycleHooks[event] !== undefined).forEach((hookedCommand) => {
        hookedCommand._lifeCycleHooks[event].forEach((callback) => {
          hooks.push({ hookedCommand, callback });
        });
      });
      if (event === "postAction") {
        hooks.reverse();
      }
      hooks.forEach((hookDetail) => {
        result = this._chainOrCall(result, () => {
          return hookDetail.callback(hookDetail.hookedCommand, this);
        });
      });
      return result;
    }
    _chainOrCallSubCommandHook(promise, subCommand, event) {
      let result = promise;
      if (this._lifeCycleHooks[event] !== undefined) {
        this._lifeCycleHooks[event].forEach((hook) => {
          result = this._chainOrCall(result, () => {
            return hook(this, subCommand);
          });
        });
      }
      return result;
    }
    _parseCommand(operands, unknown) {
      const parsed = this.parseOptions(unknown);
      this._parseOptionsEnv();
      this._parseOptionsImplied();
      operands = operands.concat(parsed.operands);
      unknown = parsed.unknown;
      this.args = operands.concat(unknown);
      if (operands && this._findCommand(operands[0])) {
        return this._dispatchSubcommand(operands[0], operands.slice(1), unknown);
      }
      if (this._getHelpCommand() && operands[0] === this._getHelpCommand().name()) {
        return this._dispatchHelpCommand(operands[1]);
      }
      if (this._defaultCommandName) {
        this._outputHelpIfRequested(unknown);
        return this._dispatchSubcommand(this._defaultCommandName, operands, unknown);
      }
      if (this.commands.length && this.args.length === 0 && !this._actionHandler && !this._defaultCommandName) {
        this.help({ error: true });
      }
      this._outputHelpIfRequested(parsed.unknown);
      this._checkForMissingMandatoryOptions();
      this._checkForConflictingOptions();
      const checkForUnknownOptions = () => {
        if (parsed.unknown.length > 0) {
          this.unknownOption(parsed.unknown[0]);
        }
      };
      const commandEvent = `command:${this.name()}`;
      if (this._actionHandler) {
        checkForUnknownOptions();
        this._processArguments();
        let promiseChain;
        promiseChain = this._chainOrCallHooks(promiseChain, "preAction");
        promiseChain = this._chainOrCall(promiseChain, () => this._actionHandler(this.processedArgs));
        if (this.parent) {
          promiseChain = this._chainOrCall(promiseChain, () => {
            this.parent.emit(commandEvent, operands, unknown);
          });
        }
        promiseChain = this._chainOrCallHooks(promiseChain, "postAction");
        return promiseChain;
      }
      if (this.parent && this.parent.listenerCount(commandEvent)) {
        checkForUnknownOptions();
        this._processArguments();
        this.parent.emit(commandEvent, operands, unknown);
      } else if (operands.length) {
        if (this._findCommand("*")) {
          return this._dispatchSubcommand("*", operands, unknown);
        }
        if (this.listenerCount("command:*")) {
          this.emit("command:*", operands, unknown);
        } else if (this.commands.length) {
          this.unknownCommand();
        } else {
          checkForUnknownOptions();
          this._processArguments();
        }
      } else if (this.commands.length) {
        checkForUnknownOptions();
        this.help({ error: true });
      } else {
        checkForUnknownOptions();
        this._processArguments();
      }
    }
    _findCommand(name) {
      if (!name)
        return;
      return this.commands.find((cmd) => cmd._name === name || cmd._aliases.includes(name));
    }
    _findOption(arg) {
      return this.options.find((option) => option.is(arg));
    }
    _checkForMissingMandatoryOptions() {
      this._getCommandAndAncestors().forEach((cmd) => {
        cmd.options.forEach((anOption) => {
          if (anOption.mandatory && cmd.getOptionValue(anOption.attributeName()) === undefined) {
            cmd.missingMandatoryOptionValue(anOption);
          }
        });
      });
    }
    _checkForConflictingLocalOptions() {
      const definedNonDefaultOptions = this.options.filter((option) => {
        const optionKey = option.attributeName();
        if (this.getOptionValue(optionKey) === undefined) {
          return false;
        }
        return this.getOptionValueSource(optionKey) !== "default";
      });
      const optionsWithConflicting = definedNonDefaultOptions.filter((option) => option.conflictsWith.length > 0);
      optionsWithConflicting.forEach((option) => {
        const conflictingAndDefined = definedNonDefaultOptions.find((defined) => option.conflictsWith.includes(defined.attributeName()));
        if (conflictingAndDefined) {
          this._conflictingOption(option, conflictingAndDefined);
        }
      });
    }
    _checkForConflictingOptions() {
      this._getCommandAndAncestors().forEach((cmd) => {
        cmd._checkForConflictingLocalOptions();
      });
    }
    parseOptions(argv) {
      const operands = [];
      const unknown = [];
      let dest = operands;
      const args = argv.slice();
      function maybeOption(arg) {
        return arg.length > 1 && arg[0] === "-";
      }
      let activeVariadicOption = null;
      while (args.length) {
        const arg = args.shift();
        if (arg === "--") {
          if (dest === unknown)
            dest.push(arg);
          dest.push(...args);
          break;
        }
        if (activeVariadicOption && !maybeOption(arg)) {
          this.emit(`option:${activeVariadicOption.name()}`, arg);
          continue;
        }
        activeVariadicOption = null;
        if (maybeOption(arg)) {
          const option = this._findOption(arg);
          if (option) {
            if (option.required) {
              const value = args.shift();
              if (value === undefined)
                this.optionMissingArgument(option);
              this.emit(`option:${option.name()}`, value);
            } else if (option.optional) {
              let value = null;
              if (args.length > 0 && !maybeOption(args[0])) {
                value = args.shift();
              }
              this.emit(`option:${option.name()}`, value);
            } else {
              this.emit(`option:${option.name()}`);
            }
            activeVariadicOption = option.variadic ? option : null;
            continue;
          }
        }
        if (arg.length > 2 && arg[0] === "-" && arg[1] !== "-") {
          const option = this._findOption(`-${arg[1]}`);
          if (option) {
            if (option.required || option.optional && this._combineFlagAndOptionalValue) {
              this.emit(`option:${option.name()}`, arg.slice(2));
            } else {
              this.emit(`option:${option.name()}`);
              args.unshift(`-${arg.slice(2)}`);
            }
            continue;
          }
        }
        if (/^--[^=]+=/.test(arg)) {
          const index = arg.indexOf("=");
          const option = this._findOption(arg.slice(0, index));
          if (option && (option.required || option.optional)) {
            this.emit(`option:${option.name()}`, arg.slice(index + 1));
            continue;
          }
        }
        if (maybeOption(arg)) {
          dest = unknown;
        }
        if ((this._enablePositionalOptions || this._passThroughOptions) && operands.length === 0 && unknown.length === 0) {
          if (this._findCommand(arg)) {
            operands.push(arg);
            if (args.length > 0)
              unknown.push(...args);
            break;
          } else if (this._getHelpCommand() && arg === this._getHelpCommand().name()) {
            operands.push(arg);
            if (args.length > 0)
              operands.push(...args);
            break;
          } else if (this._defaultCommandName) {
            unknown.push(arg);
            if (args.length > 0)
              unknown.push(...args);
            break;
          }
        }
        if (this._passThroughOptions) {
          dest.push(arg);
          if (args.length > 0)
            dest.push(...args);
          break;
        }
        dest.push(arg);
      }
      return { operands, unknown };
    }
    opts() {
      if (this._storeOptionsAsProperties) {
        const result = {};
        const len = this.options.length;
        for (let i = 0;i < len; i++) {
          const key = this.options[i].attributeName();
          result[key] = key === this._versionOptionName ? this._version : this[key];
        }
        return result;
      }
      return this._optionValues;
    }
    optsWithGlobals() {
      return this._getCommandAndAncestors().reduce((combinedOptions, cmd) => Object.assign(combinedOptions, cmd.opts()), {});
    }
    error(message, errorOptions) {
      this._outputConfiguration.outputError(`${message}
`, this._outputConfiguration.writeErr);
      if (typeof this._showHelpAfterError === "string") {
        this._outputConfiguration.writeErr(`${this._showHelpAfterError}
`);
      } else if (this._showHelpAfterError) {
        this._outputConfiguration.writeErr(`
`);
        this.outputHelp({ error: true });
      }
      const config = errorOptions || {};
      const exitCode = config.exitCode || 1;
      const code = config.code || "commander.error";
      this._exit(exitCode, code, message);
    }
    _parseOptionsEnv() {
      this.options.forEach((option) => {
        if (option.envVar && option.envVar in process2.env) {
          const optionKey = option.attributeName();
          if (this.getOptionValue(optionKey) === undefined || ["default", "config", "env"].includes(this.getOptionValueSource(optionKey))) {
            if (option.required || option.optional) {
              this.emit(`optionEnv:${option.name()}`, process2.env[option.envVar]);
            } else {
              this.emit(`optionEnv:${option.name()}`);
            }
          }
        }
      });
    }
    _parseOptionsImplied() {
      const dualHelper = new DualOptions(this.options);
      const hasCustomOptionValue = (optionKey) => {
        return this.getOptionValue(optionKey) !== undefined && !["default", "implied"].includes(this.getOptionValueSource(optionKey));
      };
      this.options.filter((option) => option.implied !== undefined && hasCustomOptionValue(option.attributeName()) && dualHelper.valueFromOption(this.getOptionValue(option.attributeName()), option)).forEach((option) => {
        Object.keys(option.implied).filter((impliedKey) => !hasCustomOptionValue(impliedKey)).forEach((impliedKey) => {
          this.setOptionValueWithSource(impliedKey, option.implied[impliedKey], "implied");
        });
      });
    }
    missingArgument(name) {
      const message = `error: missing required argument '${name}'`;
      this.error(message, { code: "commander.missingArgument" });
    }
    optionMissingArgument(option) {
      const message = `error: option '${option.flags}' argument missing`;
      this.error(message, { code: "commander.optionMissingArgument" });
    }
    missingMandatoryOptionValue(option) {
      const message = `error: required option '${option.flags}' not specified`;
      this.error(message, { code: "commander.missingMandatoryOptionValue" });
    }
    _conflictingOption(option, conflictingOption) {
      const findBestOptionFromValue = (option2) => {
        const optionKey = option2.attributeName();
        const optionValue = this.getOptionValue(optionKey);
        const negativeOption = this.options.find((target) => target.negate && optionKey === target.attributeName());
        const positiveOption = this.options.find((target) => !target.negate && optionKey === target.attributeName());
        if (negativeOption && (negativeOption.presetArg === undefined && optionValue === false || negativeOption.presetArg !== undefined && optionValue === negativeOption.presetArg)) {
          return negativeOption;
        }
        return positiveOption || option2;
      };
      const getErrorMessage = (option2) => {
        const bestOption = findBestOptionFromValue(option2);
        const optionKey = bestOption.attributeName();
        const source = this.getOptionValueSource(optionKey);
        if (source === "env") {
          return `environment variable '${bestOption.envVar}'`;
        }
        return `option '${bestOption.flags}'`;
      };
      const message = `error: ${getErrorMessage(option)} cannot be used with ${getErrorMessage(conflictingOption)}`;
      this.error(message, { code: "commander.conflictingOption" });
    }
    unknownOption(flag) {
      if (this._allowUnknownOption)
        return;
      let suggestion = "";
      if (flag.startsWith("--") && this._showSuggestionAfterError) {
        let candidateFlags = [];
        let command = this;
        do {
          const moreFlags = command.createHelp().visibleOptions(command).filter((option) => option.long).map((option) => option.long);
          candidateFlags = candidateFlags.concat(moreFlags);
          command = command.parent;
        } while (command && !command._enablePositionalOptions);
        suggestion = suggestSimilar(flag, candidateFlags);
      }
      const message = `error: unknown option '${flag}'${suggestion}`;
      this.error(message, { code: "commander.unknownOption" });
    }
    _excessArguments(receivedArgs) {
      if (this._allowExcessArguments)
        return;
      const expected = this.registeredArguments.length;
      const s2 = expected === 1 ? "" : "s";
      const forSubcommand = this.parent ? ` for '${this.name()}'` : "";
      const message = `error: too many arguments${forSubcommand}. Expected ${expected} argument${s2} but got ${receivedArgs.length}.`;
      this.error(message, { code: "commander.excessArguments" });
    }
    unknownCommand() {
      const unknownName = this.args[0];
      let suggestion = "";
      if (this._showSuggestionAfterError) {
        const candidateNames = [];
        this.createHelp().visibleCommands(this).forEach((command) => {
          candidateNames.push(command.name());
          if (command.alias())
            candidateNames.push(command.alias());
        });
        suggestion = suggestSimilar(unknownName, candidateNames);
      }
      const message = `error: unknown command '${unknownName}'${suggestion}`;
      this.error(message, { code: "commander.unknownCommand" });
    }
    version(str, flags, description) {
      if (str === undefined)
        return this._version;
      this._version = str;
      flags = flags || "-V, --version";
      description = description || "output the version number";
      const versionOption = this.createOption(flags, description);
      this._versionOptionName = versionOption.attributeName();
      this._registerOption(versionOption);
      this.on("option:" + versionOption.name(), () => {
        this._outputConfiguration.writeOut(`${str}
`);
        this._exit(0, "commander.version", str);
      });
      return this;
    }
    description(str, argsDescription) {
      if (str === undefined && argsDescription === undefined)
        return this._description;
      this._description = str;
      if (argsDescription) {
        this._argsDescription = argsDescription;
      }
      return this;
    }
    summary(str) {
      if (str === undefined)
        return this._summary;
      this._summary = str;
      return this;
    }
    alias(alias) {
      if (alias === undefined)
        return this._aliases[0];
      let command = this;
      if (this.commands.length !== 0 && this.commands[this.commands.length - 1]._executableHandler) {
        command = this.commands[this.commands.length - 1];
      }
      if (alias === command._name)
        throw new Error("Command alias can't be the same as its name");
      const matchingCommand = this.parent?._findCommand(alias);
      if (matchingCommand) {
        const existingCmd = [matchingCommand.name()].concat(matchingCommand.aliases()).join("|");
        throw new Error(`cannot add alias '${alias}' to command '${this.name()}' as already have command '${existingCmd}'`);
      }
      command._aliases.push(alias);
      return this;
    }
    aliases(aliases) {
      if (aliases === undefined)
        return this._aliases;
      aliases.forEach((alias) => this.alias(alias));
      return this;
    }
    usage(str) {
      if (str === undefined) {
        if (this._usage)
          return this._usage;
        const args = this.registeredArguments.map((arg) => {
          return humanReadableArgName(arg);
        });
        return [].concat(this.options.length || this._helpOption !== null ? "[options]" : [], this.commands.length ? "[command]" : [], this.registeredArguments.length ? args : []).join(" ");
      }
      this._usage = str;
      return this;
    }
    name(str) {
      if (str === undefined)
        return this._name;
      this._name = str;
      return this;
    }
    nameFromFilename(filename) {
      this._name = path.basename(filename, path.extname(filename));
      return this;
    }
    executableDir(path2) {
      if (path2 === undefined)
        return this._executableDir;
      this._executableDir = path2;
      return this;
    }
    helpInformation(contextOptions) {
      const helper = this.createHelp();
      if (helper.helpWidth === undefined) {
        helper.helpWidth = contextOptions && contextOptions.error ? this._outputConfiguration.getErrHelpWidth() : this._outputConfiguration.getOutHelpWidth();
      }
      return helper.formatHelp(this, helper);
    }
    _getHelpContext(contextOptions) {
      contextOptions = contextOptions || {};
      const context = { error: !!contextOptions.error };
      let write;
      if (context.error) {
        write = (arg) => this._outputConfiguration.writeErr(arg);
      } else {
        write = (arg) => this._outputConfiguration.writeOut(arg);
      }
      context.write = contextOptions.write || write;
      context.command = this;
      return context;
    }
    outputHelp(contextOptions) {
      let deprecatedCallback;
      if (typeof contextOptions === "function") {
        deprecatedCallback = contextOptions;
        contextOptions = undefined;
      }
      const context = this._getHelpContext(contextOptions);
      this._getCommandAndAncestors().reverse().forEach((command) => command.emit("beforeAllHelp", context));
      this.emit("beforeHelp", context);
      let helpInformation = this.helpInformation(context);
      if (deprecatedCallback) {
        helpInformation = deprecatedCallback(helpInformation);
        if (typeof helpInformation !== "string" && !Buffer.isBuffer(helpInformation)) {
          throw new Error("outputHelp callback must return a string or a Buffer");
        }
      }
      context.write(helpInformation);
      if (this._getHelpOption()?.long) {
        this.emit(this._getHelpOption().long);
      }
      this.emit("afterHelp", context);
      this._getCommandAndAncestors().forEach((command) => command.emit("afterAllHelp", context));
    }
    helpOption(flags, description) {
      if (typeof flags === "boolean") {
        if (flags) {
          this._helpOption = this._helpOption ?? undefined;
        } else {
          this._helpOption = null;
        }
        return this;
      }
      flags = flags ?? "-h, --help";
      description = description ?? "display help for command";
      this._helpOption = this.createOption(flags, description);
      return this;
    }
    _getHelpOption() {
      if (this._helpOption === undefined) {
        this.helpOption(undefined, undefined);
      }
      return this._helpOption;
    }
    addHelpOption(option) {
      this._helpOption = option;
      return this;
    }
    help(contextOptions) {
      this.outputHelp(contextOptions);
      let exitCode = process2.exitCode || 0;
      if (exitCode === 0 && contextOptions && typeof contextOptions !== "function" && contextOptions.error) {
        exitCode = 1;
      }
      this._exit(exitCode, "commander.help", "(outputHelp)");
    }
    addHelpText(position, text) {
      const allowedValues = ["beforeAll", "before", "after", "afterAll"];
      if (!allowedValues.includes(position)) {
        throw new Error(`Unexpected value for position to addHelpText.
Expecting one of '${allowedValues.join("', '")}'`);
      }
      const helpEvent = `${position}Help`;
      this.on(helpEvent, (context) => {
        let helpStr;
        if (typeof text === "function") {
          helpStr = text({ error: context.error, command: context.command });
        } else {
          helpStr = text;
        }
        if (helpStr) {
          context.write(`${helpStr}
`);
        }
      });
      return this;
    }
    _outputHelpIfRequested(args) {
      const helpOption = this._getHelpOption();
      const helpRequested = helpOption && args.find((arg) => helpOption.is(arg));
      if (helpRequested) {
        this.outputHelp();
        this._exit(0, "commander.helpDisplayed", "(outputHelp)");
      }
    }
  }
  function incrementNodeInspectorPort(args) {
    return args.map((arg) => {
      if (!arg.startsWith("--inspect")) {
        return arg;
      }
      let debugOption;
      let debugHost = "127.0.0.1";
      let debugPort = "9229";
      let match;
      if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {
        debugOption = match[1];
      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {
        debugOption = match[1];
        if (/^\d+$/.test(match[3])) {
          debugPort = match[3];
        } else {
          debugHost = match[3];
        }
      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\d+)$/)) !== null) {
        debugOption = match[1];
        debugHost = match[3];
        debugPort = match[4];
      }
      if (debugOption && debugPort !== "0") {
        return `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;
      }
      return arg;
    });
  }
  exports.Command = Command;
});

// node_modules/commander/index.js
var require_commander = __commonJS((exports) => {
  var { Argument } = require_argument();
  var { Command } = require_command();
  var { CommanderError, InvalidArgumentError } = require_error();
  var { Help } = require_help();
  var { Option } = require_option();
  exports.program = new Command;
  exports.createCommand = (name) => new Command(name);
  exports.createOption = (flags, description) => new Option(flags, description);
  exports.createArgument = (name, description) => new Argument(name, description);
  exports.Command = Command;
  exports.Option = Option;
  exports.Argument = Argument;
  exports.Help = Help;
  exports.CommanderError = CommanderError;
  exports.InvalidArgumentError = InvalidArgumentError;
  exports.InvalidOptionArgumentError = InvalidArgumentError;
});

// src/workspaces/find-workspaces.ts
init_path();
var { default: fs2} = (() => ({}));

// src/internal/logger.ts
var import_chalk = __toESM(require_source(), 1);
var import_winston = __toESM(require_winston(), 1);
var colorMap = {
  error: import_chalk.default.red,
  warn: import_chalk.default.yellow,
  info: import_chalk.default.cyan,
  debug: import_chalk.default.white
};
var devConsole = new import_winston.default.transports.Console({
  format: import_winston.default.format.printf(({ level, message, error, prefix, ...rest }) => {
    const colorizer = colorMap[level] || import_chalk.default.white;
    const hour = new Date().toLocaleTimeString("en-US", { hour12: false });
    const logPrefix = `[${colorizer(level.toUpperCase())}][${hour}]${prefix ? `[${prefix}]` : ""}`;
    const log = [logPrefix, message];
    if (Object.keys(rest).length) {
      log.push(`
${JSON.stringify(rest, null, 2)}`);
    }
    if (Object.values(error ?? {}).filter(Boolean).length && error instanceof Error && error.message) {
      const { stack, message: message2, ...errorRest } = error;
      const rest2 = errorRest ? JSON.stringify(errorRest, null, 2) : "";
      log.push(`
${error.stack} ${rest2}`);
    }
    return log.join(" ").trim();
  })
});
var errorFormatter = import_winston.default.format((info) => {
  if (info.error instanceof Error) {
    const error = info.error;
    info.error = Object.assign({}, info.error, {
      message: info.error.message,
      stack: info.error.stack,
      name: error.name,
      module: error.module,
      type: error.type,
      data: error.data
    });
    if (info.error) {
      Object.keys(info.error).forEach((key) => {
        if (info.error && info.error[key] === undefined) {
          delete info.error[key];
        }
      });
    }
  }
  return info;
});
var logger = import_winston.createLogger({
  level: process.env.LOG_LEVEL ?? true ? "debug" : "info",
  format: import_winston.default.format.combine(errorFormatter(), import_winston.default.format.errors({ stack: true }), import_winston.default.format.json())
});
logger.add(devConsole);

// src/internal/error.ts
class BunWorkspacesError extends Error {
  name = "BunWorkspacesError";
}
var defineErrors = (...errors) => errors.reduce((acc, error) => {
  acc[error] = class extends BunWorkspacesError {
    constructor(message) {
      super(message);
      this.name = error;
    }
    name = error;
  };
  Object.defineProperty(acc[error].prototype.constructor, "name", {
    value: error
  });
  Object.defineProperty(acc[error].constructor, "name", {
    value: error
  });
  Object.defineProperty(acc[error].prototype, "name", {
    value: error
  });
  Object.defineProperty(acc[error], "name", {
    value: error
  });
  return acc;
}, {});

// src/workspaces/errors.ts
var ERRORS = defineErrors("PackageNotFound", "InvalidPackageJson", "DuplicateWorkspaceName", "NoWorkspaceName", "InvalidScripts", "InvalidWorkspaces", "InvalidWorkspacePattern");

// src/workspaces/package-json.ts
init_path();
var { default: fs} = (() => ({}));
var resolvePackageJsonPath = (directoryItem) => {
  if (q.basename(directoryItem) === "package.json") {
    return directoryItem;
  }
  if (fs.existsSync(q.join(directoryItem, "package.json"))) {
    return q.join(directoryItem, "package.json");
  }
  return "";
};
var scanWorkspaceGlob = (glob, rootDir) => glob.scanSync({
  cwd: rootDir,
  onlyFiles: false,
  absolute: true
});
var validateJsonRoot = (json) => {
  if (!json || typeof json !== "object" || Array.isArray(json)) {
    throw new ERRORS.InvalidPackageJson(`Expected package.json to be an object, got ${typeof json}`);
  }
};
var validateName = (json, packageJsonPath) => {
  if (typeof json.name !== "string" && !packageJsonPath.includes("node_modules")) {
    throw new ERRORS.NoWorkspaceName(`Expected package.json to have a string "name" field${json.name !== undefined ? ` (Received ${json.name})` : ""} (@:${packageJsonPath})`);
  }
  return json.name;
};
var validateWorkspacePattern = (workspacePattern, rootDir) => {
  if (typeof workspacePattern !== "string") {
    throw new ERRORS.InvalidWorkspacePattern(`Expected workspace pattern to be a string, got ${typeof workspacePattern}`);
  }
  if (!workspacePattern.trim()) {
    return false;
  }
  const absolutePattern = q.resolve(rootDir, workspacePattern);
  if (!absolutePattern.startsWith(rootDir)) {
    throw new ERRORS.InvalidWorkspacePattern(`Cannot resolve workspace pattern outside of root directory ${rootDir}: ${absolutePattern}`);
  }
  return true;
};
var validateWorkspacePatterns = (json, rootDir) => {
  const workspaces = [];
  if (json.workspaces) {
    if (!Array.isArray(json.workspaces)) {
      throw new ERRORS.InvalidWorkspaces(`Expected package.json to have an array "workspaces" field`);
    }
    for (const workspacePattern of json.workspaces) {
      if (validateWorkspacePattern(workspacePattern, rootDir)) {
        workspaces.push(workspacePattern);
      }
    }
  }
  return workspaces;
};
var validateScripts = (json) => {
  if (json.scripts && (typeof json.scripts !== "object" || Array.isArray(json.scripts))) {
    throw new ERRORS.InvalidScripts(`Expected package.json to have an object "scripts" field`);
  }
  if (json.scripts) {
    for (const value of Object.values(json.scripts)) {
      if (typeof value !== "string") {
        throw new ERRORS.InvalidScripts(`Expected workspace "${json.name}" script "${json.scripts}" to be a string, got ${typeof value}`);
      }
    }
  }
  return {
    ...json.scripts
  };
};
var validateVersion = (json) => {
  if (json.version !== undefined && typeof json.version !== "string") {
    throw new ERRORS.InvalidPackageJson(`Expected package.json version to be a string, got ${typeof json.version}`);
  }
  return json.version;
};
var resolvePackageJsonContent = (packageJsonPath, rootDir, validations) => {
  rootDir = q.resolve(rootDir);
  let json = {};
  try {
    json = JSON.parse(fs.readFileSync(packageJsonPath, "utf8"));
  } catch (error) {
    logger.error(error);
    throw new ERRORS.InvalidPackageJson(`Failed to read and parse package.json at ${packageJsonPath}: ${error.message}`);
  }
  validateJsonRoot(json);
  return {
    ...json,
    name: validations.includes("name") ? validateName(json, packageJsonPath) || "" : json.name || "",
    workspaces: validations.includes("workspaces") ? validateWorkspacePatterns(json, rootDir) : json?.workspaces ?? [],
    scripts: validations.includes("scripts") ? validateScripts(json) : json.scripts ?? {},
    version: validations.includes("version") ? validateVersion(json) : json.version
  };
};

// src/workspaces/find-workspaces.ts
var NOT_PACKAGE_EXTENSIONS = [".json", ".md", ".txt", ".yaml", ".yml"];
var validatePattern = (pattern) => {
  if (pattern.startsWith("!")) {
    logger.warn(`Negation patterns are not supported by Bun workspaces: ${JSON.stringify(pattern)}`);
    return false;
  }
  if (NOT_PACKAGE_EXTENSIONS.includes(q.extname(pattern))) {
    logger.warn(`Pattern ${JSON.stringify(pattern)} is not a package.json file`);
    return false;
  }
  return true;
};
var validateWorkspace = (workspace, workspaces) => {
  if (workspaces.find((ws) => ws.path === workspace.path)) {
    return false;
  }
  const pkgJson = workspace.packageJson;
  const isLinkedPackage = pkgJson?.dependencies?.[workspace.name]?.startsWith("link:") || pkgJson?.devDependencies?.[workspace.name]?.startsWith("link:");
  const existingPackage = workspaces.find((ws) => ws.name === workspace.name);
  if (existingPackage && !workspace.path.includes("node_modules") && !isLinkedPackage) {
    throw new ERRORS.DuplicateWorkspaceName(`Duplicate workspace name found: ${JSON.stringify(workspace.name)} (a dependacy of ${existingPackage.name} with path ${workspace.path})`);
  }
  return true;
};
var findWorkspaces = ({ rootDir, workspaceGlobs }) => {
  rootDir = q.resolve(rootDir);
  const workspaces = [];
  for (const pattern of workspaceGlobs) {
    if (!validatePattern(pattern)) {
      continue;
    }
    const glob = new Bun.Glob(pattern);
    for (const item of scanWorkspaceGlob(glob, rootDir)) {
      const packageJsonPath = resolvePackageJsonPath(item);
      if (packageJsonPath) {
        const packageJsonContent = resolvePackageJsonContent(packageJsonPath, rootDir, ["name", "scripts", "version"]);
        const workspace = {
          name: packageJsonContent.name ?? "",
          matchPattern: pattern,
          path: q.relative(rootDir, q.dirname(packageJsonPath)),
          packageJson: packageJsonContent
        };
        if (validateWorkspace(workspace, workspaces)) {
          workspaces.push(workspace);
        }
      }
    }
  }
  workspaces.sort((a3, b6) => a3.name.localeCompare(b6.name) || a3.path.localeCompare(b6.path));
  return { workspaces };
};
var findWorkspacesFromPackage = ({ rootDir }) => {
  const packageJsonPath = q.join(rootDir, "package.json");
  if (!fs2.existsSync(packageJsonPath)) {
    throw new ERRORS.PackageNotFound(`No package.json found at ${packageJsonPath}`);
  }
  const packageJson = resolvePackageJsonContent(packageJsonPath, rootDir, ["workspaces"]);
  return {
    ...findWorkspaces({
      rootDir,
      workspaceGlobs: packageJson.workspaces ?? []
    }),
    name: packageJson.name ?? ""
  };
};

// src/workspaces/index.ts
var NOT_PACKAGE_EXTENSIONS2 = [".json", ".md", ".txt", ".yaml", ".yml"];
// src/project/project.ts
init_path();
var { default: fs3} = (() => ({}));

// src/internal/regex.ts
var createRawPattern = (pattern) => pattern.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
var createWildcardRegex = (pattern) => new RegExp(`^${pattern.split("*").map(createRawPattern).join(".*")}$`);

// src/project/errors.ts
var ERRORS2 = defineErrors("ProjectWorkspaceNotFound", "WorkspaceScriptDoesNotExist");

// src/project/script-command.ts
init_path();
var spaceArgs = (args) => args ? ` ${args.trim()}` : "";
var METHODS = {
  cd: ({ scriptName, workspace, rootDir, args }) => ({
    cwd: q.resolve(rootDir, workspace.path),
    command: `bun --silent run ${scriptName}${spaceArgs(args)}`
  }),
  filter: ({ scriptName, workspace, args, rootDir }) => ({
    cwd: rootDir,
    command: `bun --silent run --filter=${JSON.stringify(workspace.name)} ${scriptName}${spaceArgs(args)}`
  })
};
var createScriptCommand = (options) => METHODS[options.method](options);

// src/project/project.ts
class _Project {
  options;
  rootDir;
  workspaces;
  name;
  constructor(options) {
    this.options = options;
    this.rootDir = options.rootDir;
    const { name, workspaces } = findWorkspacesFromPackage({
      rootDir: options.rootDir
    });
    this.name = name;
    this.workspaces = workspaces;
  }
  listWorkspacesWithScript(scriptName) {
    return this.workspaces.filter((workspace) => workspace.packageJson.scripts?.[scriptName]);
  }
  listScriptsWithWorkspaces() {
    const scripts = new Set;
    this.workspaces.forEach((workspace) => {
      Object.keys(workspace.packageJson.scripts ?? {}).forEach((script) => scripts.add(script));
    });
    return Array.from(scripts).map((name) => ({
      name,
      workspaces: this.listWorkspacesWithScript(name)
    })).reduce((acc, { name, workspaces }) => ({
      ...acc,
      [name]: { name, workspaces }
    }), {});
  }
  findWorkspaceByName(workspaceName) {
    return this.workspaces.find((workspace) => workspace.name === workspaceName) ?? null;
  }
  findWorkspacesByPattern(workspacePattern) {
    if (!workspacePattern) {
      return [];
    }
    const regex = createWildcardRegex(workspacePattern);
    return this.workspaces.filter((workspace) => fs3.existsSync(workspace.path) && fs3.statSync(workspace.path).isDirectory() && regex.test(workspace.name));
  }
  createScriptCommand(options) {
    const workspace = this.findWorkspaceByName(options.workspaceName);
    if (!workspace) {
      throw new ERRORS2.ProjectWorkspaceNotFound(`Workspace not found: ${JSON.stringify(options.workspaceName)}`);
    }
    if (!workspace.packageJson.scripts?.[options.scriptName]) {
      throw new ERRORS2.WorkspaceScriptDoesNotExist(`Script not found in workspace ${JSON.stringify(workspace.name)}: ${JSON.stringify(options.scriptName)} (available: ${Object.keys(workspace.packageJson.scripts).join(", ") || "none"}`);
    }
    return {
      workspace,
      scriptName: options.scriptName,
      command: createScriptCommand({
        ...options,
        workspace,
        rootDir: q.resolve(this.rootDir)
      })
    };
  }
}
var createProject = (options) => new _Project(options);
// node_modules/commander/esm.mjs
var import__ = __toESM(require_commander(), 1);
var {
  program,
  createCommand,
  createArgument,
  createOption,
  CommanderError,
  InvalidArgumentError,
  InvalidOptionArgumentError,
  Command,
  Argument,
  Option,
  Help
} = import__.default;
// package.json
var package_default = {
  name: "bun-spaces",
  version: "0.2.0",
  description: "A powerful CLI tool for managing Bun workspaces",
  keywords: ["bun", "workspaces", "monorepo", "cli", "workspace", "scripts"],
  homepage: "https://github.com/Pckool/bun-spaces#readme",
  main: "src/index.ts",
  bin: {
    "bun-spaces": "bin/cli.js"
  },
  files: [
    "bin",
    "src",
    "README.md",
    "LICENSE"
  ],
  custom: {
    bunVersion: {
      build: "1.1.38",
      libraryConsumer: "^1.1.x"
    }
  },
  scripts: {
    cli: "NODE_ENV=production bun run bin/cli.js",
    "cli:dev": "NODE_ENV=development bun run bin/cli.js",
    "type-check": "tsc --noEmit",
    lint: "biome lint src/*",
    format: "biome format --write .",
    "format-check": "biome check --write .",
    prepublishOnly: "bun run type-check && bun run lint && bun run format-check",
    test: "bun test",
    build: "bun build ./src/index.ts --outdir ./dist"
  },
  repository: {
    type: "git",
    url: "git+https://github.com/Pckool/bun-spaces.git"
  },
  bugs: {
    url: "https://github.com/Pckool/bun-spaces/issues"
  },
  author: "Pckool",
  license: "MIT",
  devDependencies: {
    "@biomejs/biome": "^1.9.4",
    "@types/bun": "latest",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    eslint: "^9.16.0",
    "eslint-plugin-import": "^2.31.0",
    prettier: "^3.4.2",
    "typescript-eslint": "^8.17.0"
  },
  dependencies: {
    chalk: "4.1.2",
    commander: "^12.1.0",
    winston: "^3.10.0"
  },
  peerDependencies: {
    typescript: "latest"
  }
};

// src/internal/bun-version.ts
var LIBRARY_CONSUMER_BUN_VERSION = package_default.custom.bunVersion.libraryConsumer;
var BUILD_BUN_VERSION = package_default.custom.bunVersion.build;
var getRequiredBunVersion = (build) => build ? BUILD_BUN_VERSION : LIBRARY_CONSUMER_BUN_VERSION;
var validateBunVersion = (version, build) => Bun.semver.satisfies(version, getRequiredBunVersion(build));
var validateCurrentBunVersion = (build) => validateBunVersion(Bun.version, build);

// src/cli/global-options.ts
init_path();
var LOG_LEVELS = ["silent", "error", "warn", "info", "debug"];
var defineGlobalOptions = (program2, defaultCwd) => {
  const globalOptions = {
    logLevel: {
      shortName: "l",
      description: "Log levels",
      defaultValue: logger.level,
      values: LOG_LEVELS,
      param: "level"
    },
    cwd: {
      shortName: "d",
      description: "Working directory",
      defaultValue: defaultCwd ?? process.cwd(),
      param: "dir"
    }
  };
  Object.entries(globalOptions).forEach(([name, { shortName, description, defaultValue, param, values }]) => {
    const option = new Option(`-${shortName} --${name}${param ? ` <${param}>` : ""}`, description).default(defaultValue);
    program2.addOption(values?.length ? option.choices(values) : option);
  });
};
var applyGlobalOptions = (options) => {
  logger.level = options.logLevel;
  logger.debug("Log level: " + options.logLevel);
  const project = createProject({
    rootDir: options.cwd
  });
  logger.debug(`Project: ${JSON.stringify(project.name)} (${project.workspaces.length} workspace${project.workspaces.length === 1 ? "" : "s"})`);
  logger.debug("Project root: " + q.resolve(project.rootDir));
  return { project };
};
var initializeWithGlobalOptions = (program2, args, defaultCwd) => {
  defineGlobalOptions(program2, defaultCwd);
  program2.allowUnknownOption(true);
  program2.parseOptions(args);
  program2.allowUnknownOption(false);
  return applyGlobalOptions(program2.opts());
};

// src/internal/env.ts
var IS_TEST = false;

// src/cli/output.ts
var OUTPUT_CONFIG = {
  writeOut: (s2) => !IS_TEST && process.stdout.write(s2),
  writeErr: (s2) => !IS_TEST && process.stderr.write(s2)
};

// src/cli/project-commands.ts
init_path();
var { default: fs4} = (() => ({}));
var createWorkspaceInfoLines = (workspace) => [
  `Workspace: ${workspace.name}`,
  ` - Path: ${workspace.path}`,
  ` - Glob Match: ${workspace.matchPattern}`,
  ` - Scripts: ${Object.keys(workspace.packageJson.scripts).sort().join(", ")}`
];
var createScriptInfoLines = (script, workspaces) => [
  `Script: ${script}`,
  ...workspaces.map((workspace) => ` - ${workspace.name}`)
];
var listWorkspaces = ({ program: program2, project, printLines }) => {
  program2.command("list-workspaces [pattern]").aliases(["ls", "list"]).description("List all workspaces").option("--name-only", "Only show workspace names").option("--json", "Output the list as a json object").action((pattern, options) => {
    logger.debug("Command: List workspaces");
    if (options.more) {
      logger.debug("Showing more metadata");
    }
    let lines = [];
    (pattern ? project.findWorkspacesByPattern(pattern) : project.workspaces).forEach((workspace) => {
      if (options.nameOnly) {
        lines.push(workspace.name);
      } else if (options.json) {
        for (const workspace2 of project.workspaces) {
          const data = {
            name: workspace2.name,
            location: workspace2.path,
            version: workspace2.packageJson.version || null
          };
          lines.push(JSON.stringify(data));
        }
        lines = Array.from(new Set(lines).values());
      } else {
        lines.push(...createWorkspaceInfoLines(workspace));
      }
    });
    if (!lines.length) {
      lines.push("No workspaces found");
    }
    printLines(...lines);
  });
};
var listScripts = ({ program: program2, project, printLines }) => {
  program2.command("list-scripts").description("List all scripts available with their workspaces").option("--name-only", "Only show script names").action((options) => {
    logger.debug("Command: List scripts");
    const scripts = project.listScriptsWithWorkspaces();
    const lines = [];
    Object.values(scripts).sort(({ name: nameA }, { name: nameB }) => nameA.localeCompare(nameB)).forEach(({ name, workspaces }) => {
      if (options.nameOnly) {
        lines.push(name);
      } else {
        lines.push(...createScriptInfoLines(name, workspaces));
      }
    });
    if (!lines.length) {
      lines.push("No scripts found");
    }
    printLines(...lines);
  });
};
var workspaceInfo = ({ program: program2, project, printLines }) => {
  program2.command("workspace-info <workspace>").aliases(["info"]).description("Show information about a workspace").action((workspaceName) => {
    logger.debug(`Command: Workspace info for ${workspaceName}`);
    const workspace = project.findWorkspaceByName(workspaceName);
    if (!workspaceName) {
      logger.error("No workspace name provided");
      return;
    }
    if (!workspace) {
      logger.error(`Workspace not found: ${JSON.stringify(workspaceName)}`);
      return;
    }
    printLines(...createWorkspaceInfoLines(workspace));
  });
};
var scriptInfo = ({ program: program2, project, printLines }) => {
  program2.command("script-info <script>").description("Show information about a script").option("--workspaces-only", "Only show script's workspace names").action((script, options) => {
    logger.debug(`Command: Script info for ${script}`);
    const scripts = project.listScriptsWithWorkspaces();
    const scriptMetadata = scripts[script];
    if (!scriptMetadata) {
      printLines(`Script not found: ${JSON.stringify(script)} (available: ${Object.keys(scripts).join(", ")})`);
      return;
    }
    printLines(...options.workspacesOnly ? scriptMetadata.workspaces.map(({ name }) => name) : createScriptInfoLines(script, scriptMetadata.workspaces));
  });
};
var runScript = ({ program: program2, project, printLines }) => {
  program2.command("run [package-pattern] [script] [args...]").description("Run a script in matching workspaces. Use --filter for multiple patterns.").option("--filter <patterns...>", "Filter workspaces by pattern(s)").option("-p, --parallel", "Run script in parallel across workspaces").option("--stream", "Stream output with prefixes").option("--no-bail", "Continue execution even if a script fails").option("--dry-run", "Show what would be executed without actually running").option("--deps", "Also run the script in dependencies of matched workspaces").option("--prefix-logs", "Prefix each line of output with the workspace name").option("--silent", "Suppress all output except errors").option("--verbose", "Show detailed execution information").option("--if-script-exists", "Skip workspaces that don't have the specified script instead of failing").action(async (packagePattern, scriptName, args, options) => {
    logger.debug("Command: Run script");
    if (!scriptName && packagePattern?.includes(" ")) {
      const parts = packagePattern.split(" ");
      scriptName = parts.slice(1).join(" ");
      packagePattern = parts[0];
    }
    if (!scriptName) {
      logger.error("Script name is required");
      process.exit(1);
    }
    const patterns = [];
    if (packagePattern) {
      patterns.push(packagePattern);
    }
    if (options.filter) {
      patterns.push(...options.filter);
    }
    if (patterns.length === 0) {
      logger.error("At least one package pattern is required");
      process.exit(1);
    }
    const collectWorkspaces = (pattern, includeDeps = false) => {
      const matches = project.findWorkspacesByPattern(pattern);
      const workspaces2 = new Set;
      for (const workspace of matches) {
        workspaces2.add(workspace);
        if (includeDeps && workspace.packageJson.dependencies) {
          Object.keys(workspace.packageJson.dependencies).forEach((dep) => {
            const depWorkspace = project.findWorkspaceByName(dep);
            if (depWorkspace) {
              workspaces2.add(depWorkspace);
            }
          });
        }
      }
      return workspaces2;
    };
    const workspaces = new Set;
    for (const pattern of patterns) {
      const matches = collectWorkspaces(pattern, options.deps);
      if (matches.size === 0) {
        logger.warn(`No workspaces found matching pattern: ${pattern}`);
      }
      matches.forEach((ws) => workspaces.add(ws));
    }
    if (workspaces.size === 0) {
      logger.error("No matching workspaces found");
      process.exit(1);
    }
    const filteredWorkspaces = Array.from(workspaces).filter((workspace) => {
      const hasScript = workspace.packageJson.scripts?.[scriptName];
      if (!hasScript && !options.ifScriptExists) {
        logger.warn(`Workspace ${workspace.name} does not have script '${scriptName}'`);
      }
      return hasScript || options.ifScriptExists;
    });
    if (filteredWorkspaces.length === 0) {
      logger.error("No matching workspaces with the specified script found");
      process.exit(1);
    }
    const scriptCommands = filteredWorkspaces.map((workspace) => {
      const absolutePath = q.resolve(project.rootDir, workspace.path);
      if (!fs4.existsSync(absolutePath)) {
        logger.error(`Workspace path not found: ${workspace.path}`);
        logger.error(`Absolute path: ${absolutePath}`);
        logger.error(`Project root: ${project.rootDir}`);
        throw new Error(`Workspace path does not exist: ${workspace.path}`);
      }
      if (!fs4.statSync(absolutePath).isDirectory()) {
        throw new Error(`Workspace path is not a directory: ${workspace.path}`);
      }
      const packageJsonPath = q.join(absolutePath, "package.json");
      if (!fs4.existsSync(packageJsonPath)) {
        throw new Error(`package.json not found in workspace: ${workspace.path}`);
      }
      const packageJson = JSON.parse(fs4.readFileSync(packageJsonPath, "utf-8"));
      const scriptCommand = packageJson.scripts?.[scriptName];
      if (!scriptCommand) {
        throw new Error(`Script '${scriptName}' not found in workspace ${workspace.name}`);
      }
      const finalCommand = `cd "${absolutePath}" && ${scriptCommand} ${args.join(" ")}`.trim();
      return {
        workspace: workspace.name,
        command: finalCommand,
        scriptName,
        path: absolutePath
      };
    });
    if (options.dryRun) {
      if (options.verbose) {
        printLines("Workspaces to process:", ...filteredWorkspaces.map((w3) => ` - ${w3.name} (${w3.path})`));
      }
      printLines("Would run the following commands:");
      scriptCommands.forEach(({ workspace, command }) => {
        printLines(`[${workspace}] ${command}`);
      });
      return;
    }
    const results = [];
    const runCommand = async (cmd) => {
      if (!fs4.existsSync(cmd.path)) {
        throw new Error(`Workspace path disappeared: ${cmd.path}`);
      }
      logger.debug(`Running command in ${cmd.path}:`);
      logger.debug(cmd.command);
      const proc = Bun.spawn(["sh", "-c", cmd.command], {
        cwd: cmd.path,
        env: {
          ...process.env,
          CI: undefined,
          FORCE_COLOR: "1",
          TERM: "xterm-256color"
        },
        stdio: ["inherit", "inherit", "inherit"]
      });
      const exitCode = await proc.exited;
      return {
        success: exitCode === 0,
        exitCode
      };
    };
    const handleError = (error, workspace) => {
      if (!options.silent) {
        logger.error(`Error in workspace ${workspace}:`);
        if (error instanceof Error) {
          logger.error(`  ${error.message}`);
        } else {
          logger.error(`  ${error}`);
        }
      }
    };
    if (options.parallel) {
      const promises = scriptCommands.map(async (cmd) => {
        try {
          const result = await runCommand(cmd);
          results.push({
            workspace: cmd.workspace,
            success: result.success,
            error: result.success ? undefined : new Error(`Command failed with exit code ${result.exitCode}`)
          });
          if (!result.success && options.bail) {
            throw new Error(`Command failed with exit code ${result.exitCode}`);
          }
        } catch (error) {
          handleError(error, cmd.workspace);
          results.push({ workspace: cmd.workspace, success: false, error });
          if (options.bail) {
            throw error;
          }
        }
      });
      try {
        await Promise.all(promises);
      } catch (error) {
        logger.error("Error running commands in parallel:", error);
        process.exit(1);
      }
    } else {
      for (const cmd of scriptCommands) {
        try {
          const result = await runCommand(cmd);
          results.push({
            workspace: cmd.workspace,
            success: result.success,
            error: result.success ? undefined : new Error(`Command failed with exit code ${result.exitCode}`)
          });
          if (!result.success && options.bail) {
            process.exit(1);
          }
        } catch (error) {
          handleError(error, cmd.workspace);
          results.push({ workspace: cmd.workspace, success: false, error });
          if (options.bail) {
            process.exit(1);
          }
        }
      }
    }
    if (!options.silent) {
      const successful = results.filter((r) => r.success);
      const failed = results.filter((r) => !r.success);
      if (successful.length > 0) {
        printLines(`
Successful executions:`);
        successful.forEach(({ workspace }) => printLines(` ✓ ${workspace}`));
      }
      if (failed.length > 0) {
        printLines(`
Failed executions:`);
        failed.forEach(({ workspace }) => {
          printLines(` ✗ ${workspace}`);
        });
        logger.error(`Script failed in ${failed.length} workspace(s)`);
        process.exit(1);
      }
    }
  });
};
var defineProjectCommands = (context) => {
  listWorkspaces(context);
  listScripts(context);
  workspaceInfo(context);
  scriptInfo(context);
  runScript(context);
};

// src/cli/cli.ts
var createCliProgram = ({
  writeOut = OUTPUT_CONFIG.writeOut,
  writeErr = OUTPUT_CONFIG.writeErr,
  handleError,
  postInit,
  defaultCwd = process.cwd()
} = {}) => {
  const run = async ({ argv = process.argv } = {}) => {
    const errorListener = handleError ?? ((error) => {
      logger.error(error);
      logger.error("Unhandled rejection");
      process.exit(1);
    });
    process.on("unhandledRejection", errorListener);
    try {
      const program2 = new Command("bunx bun-spaces").description("CLI for utilities for Bun workspaces").version(package_default.version).configureOutput({
        writeOut,
        writeErr
      });
      postInit?.(program2);
      if (!validateCurrentBunVersion()) {
        logger.error(`Bun version mismatch. Required: ${getRequiredBunVersion()}, Found: ${Bun.version}`);
        process.exit(1);
      }
      const args = typeof argv === "string" ? argv.split(" ") : argv;
      const { project } = initializeWithGlobalOptions(program2, args, defaultCwd);
      if (!project) {
        return;
      }
      defineProjectCommands({
        program: program2,
        project,
        printLines: (...lines) => writeOut(lines.join(`
`) + `
`)
      });
      await program2.parseAsync(args);
    } catch (error) {
      errorListener(error);
    } finally {
      process.off("unhandledRejection", errorListener);
    }
  };
  return {
    run
  };
};
export {
  findWorkspacesFromPackage,
  findWorkspaces,
  createProject,
  createCliProgram as createCli,
  NOT_PACKAGE_EXTENSIONS2 as NOT_PACKAGE_EXTENSIONS
};
